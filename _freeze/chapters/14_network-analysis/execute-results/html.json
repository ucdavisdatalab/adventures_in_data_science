{
  "hash": "0cdddbe221cdcf5f538d9219e0118868",
  "result": {
    "engine": "knitr",
    "markdown": "---\nformat:\n  html:\n    df-print: kable\n---\n\n::: {.cell}\n<style type=\"text/css\">\n.scrolling {\n  max-height: 30em;\n  overflow: scroll;\n}\n</style>\n:::\n\n\n\n\n\n\n# Network Analysis\n\nThis lesson will introduce the theoretical and logistical underpinnings of\nnetwork analysis. It will define what networks are, their limitations, and\ntheir use cases. It will then cover some of the most commonly used network\nmeasures, what they mean, and how to generate them.\n\n::: {.callout-note title=\"Learning Goals\" collapse=\"false\"}\nAfter this lesson, you should be able to:\n\n* Explain what a network is\n* Explain what is and is not relational data\n* Explain the shortcomings and limitations of network analysis\n* Evaluate a network dataset and interpret the generated metrics\n:::\n\n::: {.callout-important collapse=\"false\"}\n#### Required Data Sets and Packages\n\nThe examples in this chapter use the following data sets and packages.\n\n* [`toy_edgelist.csv`][toy-edgelist]\n* [`toy_attributes.csv`][toy-attributes]\n\nFor each data set, go to the linked page and click the \"Download raw file\"\nbutton.\n\n[toy-edgelist]: https://github.com/ucdavisdatalab/adventures_in_data_science/blob/main/data/toy_edgelist.csv\n[toy-attributes]: https://github.com/ucdavisdatalab/adventures_in_data_science/blob/main/data/toy_attributes.csv\n\nPackages:\n\n```r\ninstall.packages(\"statnet\")\ninstall.packages(\"visNetwork\")\n```\n:::\n\n\n## What Is a Network?\n\nYou are all most likely familiar now with tabular data; rows and columns\ncontaining information. It looks like this:\n\n| Person                                                      | Name | Age | Widgets |\n|:-----------------------------------------------------------:|:-----|:----|:-------:|\n| ![](/images/ch14/male-teacher_emoji.png){width=2em}         | J    | 30  | 1       |\n| ![](/images/ch14/female-student_emoji.png){width=2em}       | Y    | 21  | 3       |\n| ![](/images/ch14/female-health-worker_emoji.png){width=2em} | G    | 32  | 4       |\n| ![](/images/ch14/male-scientist_emoji.png){width=2em}       | Z    | 48  | 8       |\n\n: {tbl-colwidths=\"[25, 25, 25, 25]\" .striped .hover}\n\nWhile this is a tidy way to store data, it artificially atomizes or separates\nmany of the things we are interested in as researchers, social or otherwise.\nNetwork analysis is a tool to work with **relational** data: information about\nhow entities are connected with each other.\n\nFor example, the diagram below shows the same data as the table above, with the\nadded benefit of showing how these individuals are connected to each other.\nHover over the people to reveal the data about them.\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"htmlwidget-ee739f0a081cc522cf1f\" style=\"width:100%;height:480px;\" class=\"visNetwork html-widget\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-ee739f0a081cc522cf1f\">{\"x\":{\"nodes\":{\"id\":[1,2,3,4],\"shape\":[\"image\",\"image\",\"image\",\"image\"],\"title\":[\"<p style='color: black;'>Name: J<br>Age: 30<br>Widgets: 1<\\/p>\",\"<p style='color: black;'>Name: Y<br>Age: 21<br>Widgets: 3<\\/p>\",\"<p style='color: black;'>Name: G<br>Age: 32<br>Widgets: 4<\\/p>\",\"<p style='color: black;'>Name: Z<br>Age: 48<br>Widgets: 8<\\/p>\"],\"image\":[\"../../images/ch14/male-teacher_emoji.png\",\"../../images/ch14/female-student_emoji.png\",\"../../images/ch14/female-health-worker_emoji.png\",\"../../images/ch14/male-scientist_emoji.png\"]},\"edges\":{\"from\":[2,4,3,3],\"to\":[1,2,4,2],\"label\":[\"Siblings\",\"Student\",\"Friends\",\"Parent\"]},\"nodesToDataframe\":true,\"edgesToDataframe\":true,\"options\":{\"width\":\"100%\",\"height\":\"100%\",\"nodes\":{\"shape\":\"dot\",\"size\":50,\"shapeProperties\":{\"useBorderWithImage\":false}},\"manipulation\":{\"enabled\":false},\"edges\":{\"length\":200,\"scaling\":{\"min\":400}},\"interaction\":{\"zoomView\":false,\"zoomSpeed\":1},\"layout\":{\"randomSeed\":2}},\"groups\":null,\"width\":\"100%\",\"height\":null,\"idselection\":{\"enabled\":false},\"byselection\":{\"enabled\":false},\"main\":null,\"submain\":null,\"footer\":null,\"background\":\"rgba(0, 0, 0, 0)\",\"tooltipStay\":300,\"tooltipStyle\":\"position: fixed;visibility:hidden;padding: 5px;white-space: nowrap;font-family: verdana;font-size:14px;font-color:#000000;background-color: #f5f4ed;-moz-border-radius: 3px;-webkit-border-radius: 3px;border-radius: 3px;border: 1px solid #808074;box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\nRather than looking only at attributes of specific data points, we are looking\nat the connections between data. In network analysis, data points are called\n**nodes** or **vertices**, and the connections between them are called\n**edges** or **ties**. Vertices can be anything---people, places, words,\nconcepts---they are usually mapped into rows in a data frame. Edges contain any\ninformation on how these things connect or are related to each other. These\ncomponents create a **network** or **graph**, defined as \"finite set or sets of\nactors and the relation or relations defined on them\"\n[@wassermanSocialNetworkAnalysis1994].\n\n### Networks in Research\n\n#### Social Sciences\n\n![](/images/ch14/who_shall_survive.png){\n  width=25%\n  style=\"float: right; padding: 10px;\"\n  .lightbox\n}\n\nOne of the first instances of social network analysis was originally published\nin 1932 as part of Jacob Moreno's *Who Shall Survive*\n[-@morenoWhoShallSurvive1953]. This study used the friendship networks of girls\nwithin a reform school to show that the ties between them were a stronger\npredictor of runaways than any attribute of the girls themselves. Since then,\nnetworks have been used widely in the social sciences, but only really picked\nup as the tools to understand SNA became more available.\n\n#### Neuroscience\n\n![](/images/ch14/neuronet.jpg){\n  width=25%\n  style=\"float: right; padding: 10px;\"\n  .lightbox\n}\n\nNeuroscientists use networks to study the brain, given their ready application\nto neurons and pathways. Bassett and Sporns [-@bassettNetworkNeuroscience2017]\nprovide an overview of how to translate neuroscience problems into network\nones, and the tools available to study them.\n\n#### Chemistry\n\n![](/images/ch14/chem_graph.jpg){\n  width=25%\n  style=\"float: right; padding: 10px;\"\n  .lightbox\n}\n\nChemistry was quick to see the applications of networks. As early at 1985\npapers were published detailing the potential networks provided in terms of\nunderstanding and finding new ways to measure and understand the bonds between\natoms and molecules [@balabanApplicationsGraphTheory1985].\n\n#### The Internet\n\n![](/images/ch14/page_rank.jpg){\n  width=25%\n  style=\"float: right; padding: 10px;\"\n  .lightbox\n}\n\nThe internet is a network! Beyond the various social network sites, servers\nthemselves act as nodes and the information flows between them along edges.\nGoogle used this property in the first version of their search engine, which\nused the network metric of PageRank to determine which sites to show at the top\nof search results [@pageMethodNodeRanking2001].\n\n#### Infrastructure\n\n![](/images/ch14/infrastructure_net.jpg){\n  width=25%\n  style=\"float: right; padding: 10px;\"\n  .lightbox\n}\n\nFand and Mostafavi [-@fanGraphbasedMethodSocial2019] showed how you can use\nsocial media network data to find where infrastructure is failing during\ndisasters, such as hurricane Harvey in 2017. Their system promises a method to\nmonitor physical infrastructure like roads, bridges, and barriers like more\neasily monitored infrastructure like the electrical grid.\n\n#### Security\n\n![](/images/ch14/terror_net.png){\n  width=25%\n  style=\"float: right; padding: 10px;\"\n  .lightbox\n}\n\nNetwork analysis has also been used for offensive purposes. One of the most\nprominent uses is mapping crime or terror networks\n[@krebsMappingNetworksTerrorist2002], though it is fraught with ethical\nconcerns. There are specific tools made for this purpose, such as the keyplayer\npackage [@anKeyplayerPackageLocating2016], which helps find what nodes in a\nnetwork would fragment them the most if removed.\n\n## Network Data\n\nNetworks are based on relational data. This means the core data requirement is\nthat we have some measure of how nodes are connected. The two most common\nnetwork data formats are the **edgelist** and **adjacency matrix**. Either of\nthese will work for nearly any network purpose, and it is easy to convert\nbetween them. You will also need an **attributes** file, which gives\ninformation about the nodes being connected.\n\n### Edgelist\n\nAn edgelist is a two-column data frame with a *from* and *to* column. Each row\nrepresents one edge or tie, with the possibility of adding in more information.\nHere's an example of a basic edgelist:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load in the data\ntoy_edgelist = read.csv(\n  \"data/toy_edgelist.csv\", header = TRUE, stringsAsFactors = FALSE\n)\n\n# Show the first 10 rows\nhead(toy_edgelist, n = 10)\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|to                                       |from |\n|:----------------------------------------|:----|\n|b33f00bd1109e1ae3ffa757d0aef0a25942f2ba3 |zuko |\n|19d5b2694036f6fab966564c1c44bc74330f22c2 |zuko |\n|9483b16c4904908115f4538525e37f776f4596d4 |zuko |\n|f8452649773eb7e024bfa59c395afa0c302d1928 |zuko |\n|eea677240a425ed7ccdeff69feb2d377a5542599 |zuko |\n|9dbcce359070c879f20843e19564aee545f80d2d |zuko |\n|749e81272630eb4755e4a7bca10fe3e3524d77ce |zuko |\n|toph                                     |zuko |\n|5737a840aa867025dcb506f24cb5546f16b4d777 |zuko |\n|028f5d1f351d38cd6553ab4674b19725d5ea3d3c |zuko |\n\n</div>\n:::\n:::\n\n\n\n\n### Adjacency Matrix\n\nThe same data can also be displayed in a table format. The information is the\nsame, but it is presented in a way more usable by our code to create measures\nwe care out. In this format, every node has both a row and column. If there is\nan edge between two nodes, a 1 is placed in the intersection of their row and\ncolumn.\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|                                         | b33f00bd1109e1ae3ffa757d0aef0a25942f2ba3| 19d5b2694036f6fab966564c1c44bc74330f22c2| 9483b16c4904908115f4538525e37f776f4596d4| f8452649773eb7e024bfa59c395afa0c302d1928| eea677240a425ed7ccdeff69feb2d377a5542599| 9dbcce359070c879f20843e19564aee545f80d2d| 749e81272630eb4755e4a7bca10fe3e3524d77ce| toph| 5737a840aa867025dcb506f24cb5546f16b4d777| 028f5d1f351d38cd6553ab4674b19725d5ea3d3c| zuko|\n|:----------------------------------------|----------------------------------------:|----------------------------------------:|----------------------------------------:|----------------------------------------:|----------------------------------------:|----------------------------------------:|----------------------------------------:|----:|----------------------------------------:|----------------------------------------:|----:|\n|b33f00bd1109e1ae3ffa757d0aef0a25942f2ba3 |                                        0|                                        0|                                        0|                                        0|                                        0|                                        0|                                        0|    0|                                        0|                                        0|    1|\n|19d5b2694036f6fab966564c1c44bc74330f22c2 |                                        0|                                        0|                                        0|                                        0|                                        0|                                        0|                                        0|    0|                                        0|                                        0|    1|\n|9483b16c4904908115f4538525e37f776f4596d4 |                                        0|                                        0|                                        0|                                        0|                                        0|                                        0|                                        0|    0|                                        0|                                        0|    1|\n|f8452649773eb7e024bfa59c395afa0c302d1928 |                                        0|                                        0|                                        0|                                        0|                                        0|                                        0|                                        0|    0|                                        0|                                        0|    1|\n|eea677240a425ed7ccdeff69feb2d377a5542599 |                                        0|                                        0|                                        0|                                        0|                                        0|                                        0|                                        0|    0|                                        0|                                        0|    1|\n|9dbcce359070c879f20843e19564aee545f80d2d |                                        0|                                        0|                                        0|                                        0|                                        0|                                        0|                                        0|    0|                                        0|                                        0|    1|\n|749e81272630eb4755e4a7bca10fe3e3524d77ce |                                        0|                                        0|                                        0|                                        0|                                        0|                                        0|                                        0|    0|                                        0|                                        0|    1|\n|toph                                     |                                        0|                                        0|                                        0|                                        0|                                        0|                                        0|                                        0|    0|                                        0|                                        0|    1|\n|5737a840aa867025dcb506f24cb5546f16b4d777 |                                        0|                                        0|                                        0|                                        0|                                        0|                                        0|                                        0|    0|                                        0|                                        0|    1|\n|028f5d1f351d38cd6553ab4674b19725d5ea3d3c |                                        0|                                        0|                                        0|                                        0|                                        0|                                        0|                                        0|    0|                                        0|                                        0|    1|\n|zuko                                     |                                        0|                                        0|                                        0|                                        0|                                        0|                                        0|                                        0|    0|                                        0|                                        0|    0|\n\n</div>\n:::\n:::\n\n\n\n\n### Edge Weights\n\nEdges can also have weights, meaning some edges are valued more than others. In\nan edgelist, you can add a third \"weight\" column, entering higher numbers to\ndenote a more important connection. In an adjacency matrix, you can put numbers\nother than 1 in the intersection to denote more important connections. For our\nexample, we'll stick with un-weighted connections for now.\n\n### Attributes\n\nEach network also typically has an attributes table, which looks just like\ntypical tabular data, with each row belonging to a specific node in our\nnetwork. Let's load in and look at the sample attributes file.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load in data\ntoy_attributes = read.csv(\n  \"data/toy_attributes.csv\", header = TRUE, stringsAsFactors = FALSE\n)\n\n# Show top of attributes table\nhead(toy_attributes, n = 10)\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|id                       | year|color  |\n|:------------------------|----:|:------|\n|zuko                     |    2|purple |\n|nezuko                   |    2|purple |\n|winnie the pooh          |    2|blue   |\n|toph                     |    2|purple |\n|chicken joe              |    2|green  |\n|the rat from ratatouille |    5|blue   |\n|spider-man               |    3|blue   |\n|yamaguchi tadashi        |    1|purple |\n|jude sweetwine           |    2|purple |\n|lord future              |    2|blue   |\n\n</div>\n:::\n:::\n\n\n\n\n### Create an Example Network\n\nBefore we start exploring specific measures, we'll create a toy network to use\nas an example. Let's start by loading in some packages.\n\nThe statnet package is a popular package for network analysis in R. It allows\nyou to compute many of the most common network measures, and run simulations\ncalled *exponential random graph models*. We'll stick with the basics for now!\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Run this to load statnet, if you need to install it, do so now.\n# install.packages(\"statnet\")\nlibrary(\"statnet\")\n```\n:::\n\n\n\n\nNow that we have our tools loaded, let's create out first network. We'll use\nthe data you loaded in before. This toy network will be used as a visual for\nlearning the measurements below.\n\nWe are going to turn the attributes file and edgelist into a statnet network\nobject. A network object is a special kind of list in R. It is formatted in a\nway that the other statnet functions expect. While you could edit it like a\nnormal list, it is highly recommended you use the other statnet functions to\nmanipulate this object to make sure you don't break any of the data\nexpectations.\n\nWe'll use the `network` function to create our network object. Before we create\nit, we will sort our attributes file alphabetically. This is super important,\nas the network object will automatically sort things itself.\n\n::: {.callout-important}\nIf we do not sort our attributes data frame to match, all of our measures later\nwill be misaligned!\n:::\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Sort your attributes frame alphabetically. Super important!\ntoy_attributes = toy_attributes[order(toy_attributes$id), ]\n\n# Make network!\n# We will cover the `directed = FALSE` argument soon.\ntoy_network = network(toy_edgelist, directed = FALSE)\n```\n:::\n\n\n\n\nBefore we move on, let's add a `net_id` column to our attributes data frame.\nThis will let us easily check what the network object IDs are for our nodes.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Add ID column\ntoy_attributes$net_id = 1:nrow(toy_attributes)\n```\n:::\n\n\n\n\nWe can inspect our new network by calling the `summary` function on it. Don't\nworry too much about the output yet.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(toy_network)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n``` scrolling\nNetwork attributes:\n  vertices = 96\n  directed = FALSE\n  hyper = FALSE\n  loops = FALSE\n  multiple = FALSE\n  bipartite = FALSE\n total edges = 88 \n   missing edges = 0 \n   non-missing edges = 88 \n density = 0.01929825 \n\nVertex attributes:\n  vertex.names:\n   character valued attribute\n   96 valid vertex names\n\nNo edge attributes\n\nNetwork edgelist matrix:\n      [,1] [,2]\n [1,]    1   25\n [2,]    2   25\n [3,]    3   25\n [4,]    4   25\n [5,]    5   25\n [6,]    6   25\n [7,]    7   25\n [8,]    8   25\n [9,]    9   25\n[10,]   10   25\n[11,]   11   87\n[12,]   12   87\n[13,]   13   87\n[14,]   14   87\n[15,]   15   87\n[16,]   16   88\n[17,]   17   88\n[18,]   18   88\n[19,]   19   88\n[20,]   20   88\n[21,]   21   88\n[22,]   22   88\n[23,]   23   88\n[24,]   24   88\n[25,]   25   88\n[26,]   26    8\n[27,]   27    8\n[28,]   28    8\n[29,]   29    8\n[30,]   30    8\n[31,]   31   89\n[32,]   32   89\n[33,]   33   89\n[34,]   34   89\n[35,]   35   89\n[36,]   36   89\n[37,]   37   89\n[38,]   38   89\n[39,]   39   90\n[40,]   40   90\n[41,]   41   90\n[42,]   42   90\n[43,]   43   90\n[44,]   44   90\n[45,]   45   90\n[46,]   46   90\n[47,]   47   90\n[48,]   48   91\n[49,]   49   91\n[50,]   50   91\n[51,]   51   91\n[52,]   52   91\n[53,]   53   91\n[54,]   54   91\n[55,]   55   24\n[56,]   56   24\n[57,]   57   24\n[58,]   58   24\n[59,]   59   24\n[60,]   17   24\n[61,]   60   24\n[62,]   61   24\n[63,]   62   24\n[64,]   63   92\n[65,]   64   92\n[66,]   65   92\n[67,]   66   92\n[68,]   17   92\n[69,]   67   93\n[70,]   68   93\n[71,]   69   93\n[72,]   70   93\n[73,]   71   93\n[74,]   72   94\n[75,]   73   94\n[76,]   74   94\n[77,]   75   94\n[78,]   76   94\n[79,]   77   95\n[80,]   78   95\n[81,]   79   95\n[82,]   80   95\n[83,]   81   95\n[84,]   82   96\n[85,]   83   96\n[86,]   84   96\n[87,]   85   96\n[88,]   86   96\n```\n\n\n:::\n:::\n\n\n\n\nThen we'll add the node attributes to the network object. If you run `summary`\nagain you should see the values from our `toy_attributes` have been added.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Add each attribute to network.\n# Do this by looking at every column, then adding it to the network\nfor(col_name in colnames(toy_attributes)) {\n    toy_network = set.vertex.attribute(\n      x = toy_network, attrname = col_name, value = toy_attributes[,col_name]\n    )\n}\n```\n:::\n\n\n\n\nLet's see what out network looks like!\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(toy_network)\n```\n\n::: {.cell-output-display}\n![](14_network-analysis_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n\nThe default plotting in statnet is ugly. For the sake of our eyes, and for\nexploring some of the measure we create, we'll use the visNetwork package to\nvisualize our networks. It will make the code a bit more cumbersome, but it\nwill be worth it. From now on, we will need to use the edges and attributes\ndata frames for plotting. This means we will often need to run commands twice,\nonce for the network and once for the data frames. When you are working with\nnetworks for research, you would usually do everything you need on your\nnetwork, than create a data frame from it all at once. We will need to deal\nwith a bit of redundancy to take things one step at a time.\n\nLet's try plotting again with `visNetwork`, using the data frames. We'll give\nthe `visNetwork` function our edgelist and attributes data frame. We'll also\ntell it to plot the names from our attributes data frame so we can see them when\nwe hover over the nodes in the plot.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Add pop-up tooltips with names\n# visNetwork uses the \"title\" column to create pop-up boxes\ntoy_attributes$title = toy_attributes$id\n\n# Plot!\nvisNetwork(nodes = toy_attributes, edges = toy_edgelist) %>%\n  visInteraction(zoomView = FALSE)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"visNetwork html-widget html-fill-item\" id=\"htmlwidget-ecd4186ee3574c9a9f18\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-ecd4186ee3574c9a9f18\">{\"x\":{\"nodes\":{\"id\":[\"028f5d1f351d38cd6553ab4674b19725d5ea3d3c\",\"032a3c6dec4cd50ce32fee61dc9730ad189e8fc2\",\"10aac473720a660f85718ccc3128ba5af3f5a6b1\",\"13a96378c480a712cfcdd4d22c25b760e3ca592a\",\"19d5b2694036f6fab966564c1c44bc74330f22c2\",\"1ae1327030b801f0046278d197378603b51de4b7\",\"1d44d751ddd605060dfd40ac036cce9180094d50\",\"22d9da03c847511ef453a00333339356c717ad0c\",\"258f00e649e6a452acb67cb9297c88820c05e2a7\",\"271c4ffb63aed6f306b27b5ce7b06fb6c76a903c\",\"2e1f3d12a06df98fed40062ef3e218034855b127\",\"2e9fed34d6b2d42052850b46aeaa97f9fe6542dc\",\"2ec77935674aa81f77c4d3799de01e57bb549722\",\"31496bf3db33d3a5d3fd8b6a19c7e82556f77f5f\",\"3220545023e21c80db2a4d4e10b3eb4217b90605\",\"3518c5c116d54dc150261f6578f31246fe4c28dd\",\"387d6acd079ce68c66f897287488fcd06f924ac4\",\"3a25d9f807104eb853e65634a29470219645852f\",\"3fa2cb5f2b104e01efc48bbb4fe256d657d3b6ab\",\"3fe579b0c16b93755fd8fe17fafb93a726037966\",\"42dbc8f81531a061a9cf0f7795b3ee411d2338cc\",\"486806b0eac5f2fcdb18231cf6920c7efad072ef\",\"4ca649370bef97f7369166806bad38982028c8be\",\"4da91f8e74eb72d8a7fc68cc6ff87420817184d8\",\"56b6b91cce70132c3f077e22a603e6b8bbe64e8d\",\"56fd67c7167c26a5aa4aa3e81513288facd80978\",\"5737a840aa867025dcb506f24cb5546f16b4d777\",\"5bb9bc3353e4bf9160eb6c2e44525be7ba100b88\",\"5e6f8d1471d06ebcbb895faff1a2f4301c7997c9\",\"6209ec719a337e397e5e24bc355307a079f2b0c0\",\"62a1b0bc2165a42b29fca63862d4e7f0cd512912\",\"62c69187b2329c6ef4ac61ac10ba15c339756b45\",\"648e571b06996e0660f3fa307c83fa65e5cb374d\",\"6884a8d6cb4d933199ff7956da7d547e60fe69a2\",\"6a0b3191d07dcb4c5bd9eb2c9c354e56c0da6881\",\"6ad0f2b2049df01b77644ed789a085cf3ab6e0bf\",\"6be14aee9380bf5b5a4b8c04e2e208cbced799c9\",\"6f79547fc7af60a948c762fe2e2c50b9501d5303\",\"70433c18c71492d3be6ca337f6f36b27eae5964e\",\"71a4f68205a7c7c6988898940d76e7dceb353838\",\"749e81272630eb4755e4a7bca10fe3e3524d77ce\",\"76779b3a3dc5872133c9a7b80f95eb988514f357\",\"79b355a07ae7af13fd0adb50b3b18ac633e3e001\",\"7dcbf56e097d02ce7bb11d3e21cebc11e360c43d\",\"8255aa0ba44907104a233f1cd5a23d65023d73d4\",\"85ad25f409e8542defe8072b36686ae45e28597c\",\"9023778a4cd3703a55405f5538cf8635c3a2348e\",\"92df6aed747824ea55ddd6a350101a82c3a7b555\",\"9483b16c4904908115f4538525e37f776f4596d4\",\"976f08a0378873be20813fcf6ff2d13d25d58d97\",\"9dbcce359070c879f20843e19564aee545f80d2d\",\"a0bb4dea2b072eed35ea2fc538cf37c0ac2e0d2f\",\"a8a2251705f51007e502ec6f7c0cfdc4f882989b\",\"abcc24db2682bcec58f9a26195555ccf9fbfa2a6\",\"af965b068422ab7676986a66bb5b74c6984ab640\",\"b33f00bd1109e1ae3ffa757d0aef0a25942f2ba3\",\"b35ee0f6de6f5364527d73a2a9e92aeb71ffd2be\",\"b7f53186c0ea534a9c388824fd159410cb62c61b\",\"bad649b4f60a51869edde3c2c19eacefe89c616f\",\"bb7412e10348d8832276ade031e81861f379ef03\",\"c0ff15d535015a30d3b9896acf311792c01bfb52\",\"c234aa0c19d2695fe17e2c0a1c40a993bf03a641\",\"c2b73e24c0e52426a804d75948ec994e72bb4532\",\"c42df00e5578237fffabcdb223fe114adeff33cf\",\"c54ab7a0c0184e2cf9dfca1f7d2b80bfe0ac202f\",\"c88d89b2b89d8f771cfca6376498d7f1668fb7ec\",\"c94d516588b5fc171b5d0409f8282b7d1ed4af98\",\"ccb90e9e229d51466f8e9f685c3a273135638ead\",\"chicken joe\",\"d2331f6ee0b42fc61d14229e8182cc02a4be3c6e\",\"dd7a68076b7a15304dbfaf6eabff4a8ea7ba6fc4\",\"dff45b64209379ce181140cd35ab6ba6acd78897\",\"e020c7457351681ca0a64eb285dbc4c1f1cca332\",\"e50deda27ec79f40de1a5d02a7173c087ce53ce2\",\"e52d9407fd858515e6bf3d4d88f0c0a9c2055626\",\"eea677240a425ed7ccdeff69feb2d377a5542599\",\"f13bd82f1cd5dfbb5190d8aa947e9ced0baabdfd\",\"f257911e539971b41d5638b2ed5e6d9bf8c9bc60\",\"f6615da635a610395df9c050e3744bad15debda6\",\"f678cbd85c6930df138cd22dcca0c4426f997a2b\",\"f72769e3a5b2b9cea3a4ddaa8d5eccea0093836b\",\"f8452649773eb7e024bfa59c395afa0c302d1928\",\"fa1163b89af8d4dc7878569b92a2e19e00be48ba\",\"fd6cd715562b01c52d424e62100bdf259150ce86\",\"hamlet\",\"jude sweetwine\",\"lord future\",\"nezuko\",\"puppycat\",\"rosa diaz\",\"spider-man\",\"the rat from ratatouille\",\"toph\",\"winnie the pooh\",\"yamaguchi tadashi\",\"zuko\"],\"year\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,2,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,2,2,2,1,2,3,5,2,2,1,2],\"color\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,\"green\",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,\"green\",\"purple\",\"blue\",\"purple\",\"purple\",\"purple\",\"blue\",\"blue\",\"purple\",\"blue\",\"purple\",\"purple\"],\"net_id\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96],\"title\":[\"028f5d1f351d38cd6553ab4674b19725d5ea3d3c\",\"032a3c6dec4cd50ce32fee61dc9730ad189e8fc2\",\"10aac473720a660f85718ccc3128ba5af3f5a6b1\",\"13a96378c480a712cfcdd4d22c25b760e3ca592a\",\"19d5b2694036f6fab966564c1c44bc74330f22c2\",\"1ae1327030b801f0046278d197378603b51de4b7\",\"1d44d751ddd605060dfd40ac036cce9180094d50\",\"22d9da03c847511ef453a00333339356c717ad0c\",\"258f00e649e6a452acb67cb9297c88820c05e2a7\",\"271c4ffb63aed6f306b27b5ce7b06fb6c76a903c\",\"2e1f3d12a06df98fed40062ef3e218034855b127\",\"2e9fed34d6b2d42052850b46aeaa97f9fe6542dc\",\"2ec77935674aa81f77c4d3799de01e57bb549722\",\"31496bf3db33d3a5d3fd8b6a19c7e82556f77f5f\",\"3220545023e21c80db2a4d4e10b3eb4217b90605\",\"3518c5c116d54dc150261f6578f31246fe4c28dd\",\"387d6acd079ce68c66f897287488fcd06f924ac4\",\"3a25d9f807104eb853e65634a29470219645852f\",\"3fa2cb5f2b104e01efc48bbb4fe256d657d3b6ab\",\"3fe579b0c16b93755fd8fe17fafb93a726037966\",\"42dbc8f81531a061a9cf0f7795b3ee411d2338cc\",\"486806b0eac5f2fcdb18231cf6920c7efad072ef\",\"4ca649370bef97f7369166806bad38982028c8be\",\"4da91f8e74eb72d8a7fc68cc6ff87420817184d8\",\"56b6b91cce70132c3f077e22a603e6b8bbe64e8d\",\"56fd67c7167c26a5aa4aa3e81513288facd80978\",\"5737a840aa867025dcb506f24cb5546f16b4d777\",\"5bb9bc3353e4bf9160eb6c2e44525be7ba100b88\",\"5e6f8d1471d06ebcbb895faff1a2f4301c7997c9\",\"6209ec719a337e397e5e24bc355307a079f2b0c0\",\"62a1b0bc2165a42b29fca63862d4e7f0cd512912\",\"62c69187b2329c6ef4ac61ac10ba15c339756b45\",\"648e571b06996e0660f3fa307c83fa65e5cb374d\",\"6884a8d6cb4d933199ff7956da7d547e60fe69a2\",\"6a0b3191d07dcb4c5bd9eb2c9c354e56c0da6881\",\"6ad0f2b2049df01b77644ed789a085cf3ab6e0bf\",\"6be14aee9380bf5b5a4b8c04e2e208cbced799c9\",\"6f79547fc7af60a948c762fe2e2c50b9501d5303\",\"70433c18c71492d3be6ca337f6f36b27eae5964e\",\"71a4f68205a7c7c6988898940d76e7dceb353838\",\"749e81272630eb4755e4a7bca10fe3e3524d77ce\",\"76779b3a3dc5872133c9a7b80f95eb988514f357\",\"79b355a07ae7af13fd0adb50b3b18ac633e3e001\",\"7dcbf56e097d02ce7bb11d3e21cebc11e360c43d\",\"8255aa0ba44907104a233f1cd5a23d65023d73d4\",\"85ad25f409e8542defe8072b36686ae45e28597c\",\"9023778a4cd3703a55405f5538cf8635c3a2348e\",\"92df6aed747824ea55ddd6a350101a82c3a7b555\",\"9483b16c4904908115f4538525e37f776f4596d4\",\"976f08a0378873be20813fcf6ff2d13d25d58d97\",\"9dbcce359070c879f20843e19564aee545f80d2d\",\"a0bb4dea2b072eed35ea2fc538cf37c0ac2e0d2f\",\"a8a2251705f51007e502ec6f7c0cfdc4f882989b\",\"abcc24db2682bcec58f9a26195555ccf9fbfa2a6\",\"af965b068422ab7676986a66bb5b74c6984ab640\",\"b33f00bd1109e1ae3ffa757d0aef0a25942f2ba3\",\"b35ee0f6de6f5364527d73a2a9e92aeb71ffd2be\",\"b7f53186c0ea534a9c388824fd159410cb62c61b\",\"bad649b4f60a51869edde3c2c19eacefe89c616f\",\"bb7412e10348d8832276ade031e81861f379ef03\",\"c0ff15d535015a30d3b9896acf311792c01bfb52\",\"c234aa0c19d2695fe17e2c0a1c40a993bf03a641\",\"c2b73e24c0e52426a804d75948ec994e72bb4532\",\"c42df00e5578237fffabcdb223fe114adeff33cf\",\"c54ab7a0c0184e2cf9dfca1f7d2b80bfe0ac202f\",\"c88d89b2b89d8f771cfca6376498d7f1668fb7ec\",\"c94d516588b5fc171b5d0409f8282b7d1ed4af98\",\"ccb90e9e229d51466f8e9f685c3a273135638ead\",\"chicken joe\",\"d2331f6ee0b42fc61d14229e8182cc02a4be3c6e\",\"dd7a68076b7a15304dbfaf6eabff4a8ea7ba6fc4\",\"dff45b64209379ce181140cd35ab6ba6acd78897\",\"e020c7457351681ca0a64eb285dbc4c1f1cca332\",\"e50deda27ec79f40de1a5d02a7173c087ce53ce2\",\"e52d9407fd858515e6bf3d4d88f0c0a9c2055626\",\"eea677240a425ed7ccdeff69feb2d377a5542599\",\"f13bd82f1cd5dfbb5190d8aa947e9ced0baabdfd\",\"f257911e539971b41d5638b2ed5e6d9bf8c9bc60\",\"f6615da635a610395df9c050e3744bad15debda6\",\"f678cbd85c6930df138cd22dcca0c4426f997a2b\",\"f72769e3a5b2b9cea3a4ddaa8d5eccea0093836b\",\"f8452649773eb7e024bfa59c395afa0c302d1928\",\"fa1163b89af8d4dc7878569b92a2e19e00be48ba\",\"fd6cd715562b01c52d424e62100bdf259150ce86\",\"hamlet\",\"jude sweetwine\",\"lord future\",\"nezuko\",\"puppycat\",\"rosa diaz\",\"spider-man\",\"the rat from ratatouille\",\"toph\",\"winnie the pooh\",\"yamaguchi tadashi\",\"zuko\"]},\"edges\":{\"to\":[\"b33f00bd1109e1ae3ffa757d0aef0a25942f2ba3\",\"19d5b2694036f6fab966564c1c44bc74330f22c2\",\"9483b16c4904908115f4538525e37f776f4596d4\",\"f8452649773eb7e024bfa59c395afa0c302d1928\",\"eea677240a425ed7ccdeff69feb2d377a5542599\",\"9dbcce359070c879f20843e19564aee545f80d2d\",\"749e81272630eb4755e4a7bca10fe3e3524d77ce\",\"toph\",\"5737a840aa867025dcb506f24cb5546f16b4d777\",\"028f5d1f351d38cd6553ab4674b19725d5ea3d3c\",\"56b6b91cce70132c3f077e22a603e6b8bbe64e8d\",\"486806b0eac5f2fcdb18231cf6920c7efad072ef\",\"13a96378c480a712cfcdd4d22c25b760e3ca592a\",\"3518c5c116d54dc150261f6578f31246fe4c28dd\",\"c42df00e5578237fffabcdb223fe114adeff33cf\",\"387d6acd079ce68c66f897287488fcd06f924ac4\",\"e020c7457351681ca0a64eb285dbc4c1f1cca332\",\"1ae1327030b801f0046278d197378603b51de4b7\",\"f678cbd85c6930df138cd22dcca0c4426f997a2b\",\"c88d89b2b89d8f771cfca6376498d7f1668fb7ec\",\"e52d9407fd858515e6bf3d4d88f0c0a9c2055626\",\"d2331f6ee0b42fc61d14229e8182cc02a4be3c6e\",\"c0ff15d535015a30d3b9896acf311792c01bfb52\",\"yamaguchi tadashi\",\"zuko\",\"85ad25f409e8542defe8072b36686ae45e28597c\",\"c54ab7a0c0184e2cf9dfca1f7d2b80bfe0ac202f\",\"6209ec719a337e397e5e24bc355307a079f2b0c0\",\"70433c18c71492d3be6ca337f6f36b27eae5964e\",\"6ad0f2b2049df01b77644ed789a085cf3ab6e0bf\",\"f6615da635a610395df9c050e3744bad15debda6\",\"1d44d751ddd605060dfd40ac036cce9180094d50\",\"2e1f3d12a06df98fed40062ef3e218034855b127\",\"271c4ffb63aed6f306b27b5ce7b06fb6c76a903c\",\"79b355a07ae7af13fd0adb50b3b18ac633e3e001\",\"648e571b06996e0660f3fa307c83fa65e5cb374d\",\"b7f53186c0ea534a9c388824fd159410cb62c61b\",\"fa1163b89af8d4dc7878569b92a2e19e00be48ba\",\"3fe579b0c16b93755fd8fe17fafb93a726037966\",\"6be14aee9380bf5b5a4b8c04e2e208cbced799c9\",\"b35ee0f6de6f5364527d73a2a9e92aeb71ffd2be\",\"e50deda27ec79f40de1a5d02a7173c087ce53ce2\",\"dd7a68076b7a15304dbfaf6eabff4a8ea7ba6fc4\",\"3a25d9f807104eb853e65634a29470219645852f\",\"032a3c6dec4cd50ce32fee61dc9730ad189e8fc2\",\"c2b73e24c0e52426a804d75948ec994e72bb4532\",\"976f08a0378873be20813fcf6ff2d13d25d58d97\",\"92df6aed747824ea55ddd6a350101a82c3a7b555\",\"bb7412e10348d8832276ade031e81861f379ef03\",\"6884a8d6cb4d933199ff7956da7d547e60fe69a2\",\"56fd67c7167c26a5aa4aa3e81513288facd80978\",\"2ec77935674aa81f77c4d3799de01e57bb549722\",\"6f79547fc7af60a948c762fe2e2c50b9501d5303\",\"fd6cd715562b01c52d424e62100bdf259150ce86\",\"2e9fed34d6b2d42052850b46aeaa97f9fe6542dc\",\"5bb9bc3353e4bf9160eb6c2e44525be7ba100b88\",\"258f00e649e6a452acb67cb9297c88820c05e2a7\",\"bad649b4f60a51869edde3c2c19eacefe89c616f\",\"5e6f8d1471d06ebcbb895faff1a2f4301c7997c9\",\"e020c7457351681ca0a64eb285dbc4c1f1cca332\",\"a0bb4dea2b072eed35ea2fc538cf37c0ac2e0d2f\",\"c234aa0c19d2695fe17e2c0a1c40a993bf03a641\",\"3fa2cb5f2b104e01efc48bbb4fe256d657d3b6ab\",\"62a1b0bc2165a42b29fca63862d4e7f0cd512912\",\"f257911e539971b41d5638b2ed5e6d9bf8c9bc60\",\"3220545023e21c80db2a4d4e10b3eb4217b90605\",\"4ca649370bef97f7369166806bad38982028c8be\",\"e020c7457351681ca0a64eb285dbc4c1f1cca332\",\"6a0b3191d07dcb4c5bd9eb2c9c354e56c0da6881\",\"62c69187b2329c6ef4ac61ac10ba15c339756b45\",\"abcc24db2682bcec58f9a26195555ccf9fbfa2a6\",\"71a4f68205a7c7c6988898940d76e7dceb353838\",\"f13bd82f1cd5dfbb5190d8aa947e9ced0baabdfd\",\"4da91f8e74eb72d8a7fc68cc6ff87420817184d8\",\"dff45b64209379ce181140cd35ab6ba6acd78897\",\"f72769e3a5b2b9cea3a4ddaa8d5eccea0093836b\",\"8255aa0ba44907104a233f1cd5a23d65023d73d4\",\"10aac473720a660f85718ccc3128ba5af3f5a6b1\",\"31496bf3db33d3a5d3fd8b6a19c7e82556f77f5f\",\"c94d516588b5fc171b5d0409f8282b7d1ed4af98\",\"ccb90e9e229d51466f8e9f685c3a273135638ead\",\"22d9da03c847511ef453a00333339356c717ad0c\",\"af965b068422ab7676986a66bb5b74c6984ab640\",\"42dbc8f81531a061a9cf0f7795b3ee411d2338cc\",\"7dcbf56e097d02ce7bb11d3e21cebc11e360c43d\",\"9023778a4cd3703a55405f5538cf8635c3a2348e\",\"a8a2251705f51007e502ec6f7c0cfdc4f882989b\",\"76779b3a3dc5872133c9a7b80f95eb988514f357\"],\"from\":[\"zuko\",\"zuko\",\"zuko\",\"zuko\",\"zuko\",\"zuko\",\"zuko\",\"zuko\",\"zuko\",\"zuko\",\"nezuko\",\"nezuko\",\"nezuko\",\"nezuko\",\"nezuko\",\"winnie the pooh\",\"winnie the pooh\",\"winnie the pooh\",\"winnie the pooh\",\"winnie the pooh\",\"winnie the pooh\",\"winnie the pooh\",\"winnie the pooh\",\"winnie the pooh\",\"winnie the pooh\",\"toph\",\"toph\",\"toph\",\"toph\",\"toph\",\"chicken joe\",\"chicken joe\",\"chicken joe\",\"chicken joe\",\"chicken joe\",\"chicken joe\",\"chicken joe\",\"chicken joe\",\"the rat from ratatouille\",\"the rat from ratatouille\",\"the rat from ratatouille\",\"the rat from ratatouille\",\"the rat from ratatouille\",\"the rat from ratatouille\",\"the rat from ratatouille\",\"the rat from ratatouille\",\"the rat from ratatouille\",\"spider-man\",\"spider-man\",\"spider-man\",\"spider-man\",\"spider-man\",\"spider-man\",\"spider-man\",\"yamaguchi tadashi\",\"yamaguchi tadashi\",\"yamaguchi tadashi\",\"yamaguchi tadashi\",\"yamaguchi tadashi\",\"yamaguchi tadashi\",\"yamaguchi tadashi\",\"yamaguchi tadashi\",\"yamaguchi tadashi\",\"jude sweetwine\",\"jude sweetwine\",\"jude sweetwine\",\"jude sweetwine\",\"jude sweetwine\",\"lord future\",\"lord future\",\"lord future\",\"lord future\",\"lord future\",\"puppycat\",\"puppycat\",\"puppycat\",\"puppycat\",\"puppycat\",\"hamlet\",\"hamlet\",\"hamlet\",\"hamlet\",\"hamlet\",\"rosa diaz\",\"rosa diaz\",\"rosa diaz\",\"rosa diaz\",\"rosa diaz\"]},\"nodesToDataframe\":true,\"edgesToDataframe\":true,\"options\":{\"width\":\"100%\",\"height\":\"100%\",\"nodes\":{\"shape\":\"dot\"},\"manipulation\":{\"enabled\":false},\"interaction\":{\"zoomView\":false,\"zoomSpeed\":1}},\"groups\":null,\"width\":null,\"height\":null,\"idselection\":{\"enabled\":false},\"byselection\":{\"enabled\":false},\"main\":null,\"submain\":null,\"footer\":null,\"background\":\"rgba(0, 0, 0, 0)\",\"tooltipStay\":300,\"tooltipStyle\":\"position: fixed;visibility:hidden;padding: 5px;white-space: nowrap;font-family: verdana;font-size:14px;font-color:#000000;background-color: #f5f4ed;-moz-border-radius: 3px;-webkit-border-radius: 3px;border-radius: 3px;border: 1px solid #808074;box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\nNice.\n\n### Components\n\nMost often when working with networks you want to limit your analysis to one\ncluster or **component**, typically the largest one in your network. If\nsegments of your network aren't connected, you can't answer many of the\nrelational questions network analysis is good for! Let's limit our network to\nthe largest component:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Find what nodes are part of the largest component\ntoy_network%v%\"lc\" = component.largest(toy_network)\n\n# Delete those nodes that are not in the network\nin_lc = toy_network%v%\"lc\"\ntoy_network = delete.vertices(toy_network, which(!in_lc))\n\n# In our data frames\ntoy_attributes = toy_attributes[\n  toy_attributes$id %in% as.character(toy_network%v%\"id\"),\n]\n\nin_lc = toy_edgelist$to %in% toy_attributes$id |\n  toy_edgelist$from %in% toy_attributes$id\ntoy_edgelist = toy_edgelist[which(in_lc), ]\n\n# Plot!\nvisNetwork(nodes = toy_attributes, edges = toy_edgelist) %>%\n  visInteraction(zoomView = FALSE)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"visNetwork html-widget html-fill-item\" id=\"htmlwidget-1a8f5e092947203c5377\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-1a8f5e092947203c5377\">{\"x\":{\"nodes\":{\"id\":[\"028f5d1f351d38cd6553ab4674b19725d5ea3d3c\",\"032a3c6dec4cd50ce32fee61dc9730ad189e8fc2\",\"10aac473720a660f85718ccc3128ba5af3f5a6b1\",\"13a96378c480a712cfcdd4d22c25b760e3ca592a\",\"19d5b2694036f6fab966564c1c44bc74330f22c2\",\"1ae1327030b801f0046278d197378603b51de4b7\",\"1d44d751ddd605060dfd40ac036cce9180094d50\",\"22d9da03c847511ef453a00333339356c717ad0c\",\"258f00e649e6a452acb67cb9297c88820c05e2a7\",\"271c4ffb63aed6f306b27b5ce7b06fb6c76a903c\",\"3518c5c116d54dc150261f6578f31246fe4c28dd\",\"387d6acd079ce68c66f897287488fcd06f924ac4\",\"3a25d9f807104eb853e65634a29470219645852f\",\"3fa2cb5f2b104e01efc48bbb4fe256d657d3b6ab\",\"3fe579b0c16b93755fd8fe17fafb93a726037966\",\"42dbc8f81531a061a9cf0f7795b3ee411d2338cc\",\"486806b0eac5f2fcdb18231cf6920c7efad072ef\",\"4ca649370bef97f7369166806bad38982028c8be\",\"4da91f8e74eb72d8a7fc68cc6ff87420817184d8\",\"56b6b91cce70132c3f077e22a603e6b8bbe64e8d\",\"56fd67c7167c26a5aa4aa3e81513288facd80978\",\"5737a840aa867025dcb506f24cb5546f16b4d777\",\"5bb9bc3353e4bf9160eb6c2e44525be7ba100b88\",\"5e6f8d1471d06ebcbb895faff1a2f4301c7997c9\",\"6209ec719a337e397e5e24bc355307a079f2b0c0\",\"af965b068422ab7676986a66bb5b74c6984ab640\",\"b33f00bd1109e1ae3ffa757d0aef0a25942f2ba3\",\"b35ee0f6de6f5364527d73a2a9e92aeb71ffd2be\",\"b7f53186c0ea534a9c388824fd159410cb62c61b\",\"bad649b4f60a51869edde3c2c19eacefe89c616f\",\"bb7412e10348d8832276ade031e81861f379ef03\",\"c0ff15d535015a30d3b9896acf311792c01bfb52\",\"c234aa0c19d2695fe17e2c0a1c40a993bf03a641\",\"c2b73e24c0e52426a804d75948ec994e72bb4532\",\"c42df00e5578237fffabcdb223fe114adeff33cf\",\"c54ab7a0c0184e2cf9dfca1f7d2b80bfe0ac202f\",\"c88d89b2b89d8f771cfca6376498d7f1668fb7ec\",\"nezuko\",\"the rat from ratatouille\"],\"year\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,2,5],\"color\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,\"purple\",\"blue\"],\"net_id\":[1,2,3,4,5,6,7,8,9,10,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,55,56,57,58,59,60,61,62,63,64,65,66,88,92],\"title\":[\"028f5d1f351d38cd6553ab4674b19725d5ea3d3c\",\"032a3c6dec4cd50ce32fee61dc9730ad189e8fc2\",\"10aac473720a660f85718ccc3128ba5af3f5a6b1\",\"13a96378c480a712cfcdd4d22c25b760e3ca592a\",\"19d5b2694036f6fab966564c1c44bc74330f22c2\",\"1ae1327030b801f0046278d197378603b51de4b7\",\"1d44d751ddd605060dfd40ac036cce9180094d50\",\"22d9da03c847511ef453a00333339356c717ad0c\",\"258f00e649e6a452acb67cb9297c88820c05e2a7\",\"271c4ffb63aed6f306b27b5ce7b06fb6c76a903c\",\"3518c5c116d54dc150261f6578f31246fe4c28dd\",\"387d6acd079ce68c66f897287488fcd06f924ac4\",\"3a25d9f807104eb853e65634a29470219645852f\",\"3fa2cb5f2b104e01efc48bbb4fe256d657d3b6ab\",\"3fe579b0c16b93755fd8fe17fafb93a726037966\",\"42dbc8f81531a061a9cf0f7795b3ee411d2338cc\",\"486806b0eac5f2fcdb18231cf6920c7efad072ef\",\"4ca649370bef97f7369166806bad38982028c8be\",\"4da91f8e74eb72d8a7fc68cc6ff87420817184d8\",\"56b6b91cce70132c3f077e22a603e6b8bbe64e8d\",\"56fd67c7167c26a5aa4aa3e81513288facd80978\",\"5737a840aa867025dcb506f24cb5546f16b4d777\",\"5bb9bc3353e4bf9160eb6c2e44525be7ba100b88\",\"5e6f8d1471d06ebcbb895faff1a2f4301c7997c9\",\"6209ec719a337e397e5e24bc355307a079f2b0c0\",\"af965b068422ab7676986a66bb5b74c6984ab640\",\"b33f00bd1109e1ae3ffa757d0aef0a25942f2ba3\",\"b35ee0f6de6f5364527d73a2a9e92aeb71ffd2be\",\"b7f53186c0ea534a9c388824fd159410cb62c61b\",\"bad649b4f60a51869edde3c2c19eacefe89c616f\",\"bb7412e10348d8832276ade031e81861f379ef03\",\"c0ff15d535015a30d3b9896acf311792c01bfb52\",\"c234aa0c19d2695fe17e2c0a1c40a993bf03a641\",\"c2b73e24c0e52426a804d75948ec994e72bb4532\",\"c42df00e5578237fffabcdb223fe114adeff33cf\",\"c54ab7a0c0184e2cf9dfca1f7d2b80bfe0ac202f\",\"c88d89b2b89d8f771cfca6376498d7f1668fb7ec\",\"nezuko\",\"the rat from ratatouille\"]},\"edges\":{\"to\":[\"56b6b91cce70132c3f077e22a603e6b8bbe64e8d\",\"486806b0eac5f2fcdb18231cf6920c7efad072ef\",\"13a96378c480a712cfcdd4d22c25b760e3ca592a\",\"3518c5c116d54dc150261f6578f31246fe4c28dd\",\"c42df00e5578237fffabcdb223fe114adeff33cf\",\"3fe579b0c16b93755fd8fe17fafb93a726037966\",\"b35ee0f6de6f5364527d73a2a9e92aeb71ffd2be\",\"3a25d9f807104eb853e65634a29470219645852f\",\"032a3c6dec4cd50ce32fee61dc9730ad189e8fc2\",\"c2b73e24c0e52426a804d75948ec994e72bb4532\"],\"from\":[\"nezuko\",\"nezuko\",\"nezuko\",\"nezuko\",\"nezuko\",\"the rat from ratatouille\",\"the rat from ratatouille\",\"the rat from ratatouille\",\"the rat from ratatouille\",\"the rat from ratatouille\"]},\"nodesToDataframe\":true,\"edgesToDataframe\":true,\"options\":{\"width\":\"100%\",\"height\":\"100%\",\"nodes\":{\"shape\":\"dot\"},\"manipulation\":{\"enabled\":false},\"interaction\":{\"zoomView\":false,\"zoomSpeed\":1}},\"groups\":null,\"width\":null,\"height\":null,\"idselection\":{\"enabled\":false},\"byselection\":{\"enabled\":false},\"main\":null,\"submain\":null,\"footer\":null,\"background\":\"rgba(0, 0, 0, 0)\",\"tooltipStay\":300,\"tooltipStyle\":\"position: fixed;visibility:hidden;padding: 5px;white-space: nowrap;font-family: verdana;font-size:14px;font-color:#000000;background-color: #f5f4ed;-moz-border-radius: 3px;-webkit-border-radius: 3px;border-radius: 3px;border: 1px solid #808074;box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n### Limitations of Network Data\n\nBefore we move on we should take a moment to talk about some the the caveats\nwhen using network data. While powerful, network analysis is particularly picky\nwhen in comes to data requirements. I'll cover the two biggest ones below. You\nshould *always* keep these in mind when using or interpreting network tools.\n\n#### Missing Data\n\nNetwork analysis is very vulnerable to missing data. A simple way to understand\nwhy is to make a small adjustment to our network. I've highlighted one node in\ngreen. This node is structurally vital to the network; without it, the shape of\nthe network as a whole will change.\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"visNetwork html-widget html-fill-item\" id=\"htmlwidget-9451a3328d4980d72138\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-9451a3328d4980d72138\">{\"x\":{\"nodes\":{\"id\":[\"028f5d1f351d38cd6553ab4674b19725d5ea3d3c\",\"032a3c6dec4cd50ce32fee61dc9730ad189e8fc2\",\"10aac473720a660f85718ccc3128ba5af3f5a6b1\",\"13a96378c480a712cfcdd4d22c25b760e3ca592a\",\"19d5b2694036f6fab966564c1c44bc74330f22c2\",\"1ae1327030b801f0046278d197378603b51de4b7\",\"1d44d751ddd605060dfd40ac036cce9180094d50\",\"22d9da03c847511ef453a00333339356c717ad0c\",\"258f00e649e6a452acb67cb9297c88820c05e2a7\",\"271c4ffb63aed6f306b27b5ce7b06fb6c76a903c\",\"3518c5c116d54dc150261f6578f31246fe4c28dd\",\"387d6acd079ce68c66f897287488fcd06f924ac4\",\"3a25d9f807104eb853e65634a29470219645852f\",\"3fa2cb5f2b104e01efc48bbb4fe256d657d3b6ab\",\"3fe579b0c16b93755fd8fe17fafb93a726037966\",\"42dbc8f81531a061a9cf0f7795b3ee411d2338cc\",\"486806b0eac5f2fcdb18231cf6920c7efad072ef\",\"4ca649370bef97f7369166806bad38982028c8be\",\"4da91f8e74eb72d8a7fc68cc6ff87420817184d8\",\"56b6b91cce70132c3f077e22a603e6b8bbe64e8d\",\"56fd67c7167c26a5aa4aa3e81513288facd80978\",\"5737a840aa867025dcb506f24cb5546f16b4d777\",\"5bb9bc3353e4bf9160eb6c2e44525be7ba100b88\",\"5e6f8d1471d06ebcbb895faff1a2f4301c7997c9\",\"6209ec719a337e397e5e24bc355307a079f2b0c0\",\"af965b068422ab7676986a66bb5b74c6984ab640\",\"b33f00bd1109e1ae3ffa757d0aef0a25942f2ba3\",\"b35ee0f6de6f5364527d73a2a9e92aeb71ffd2be\",\"b7f53186c0ea534a9c388824fd159410cb62c61b\",\"bad649b4f60a51869edde3c2c19eacefe89c616f\",\"bb7412e10348d8832276ade031e81861f379ef03\",\"c0ff15d535015a30d3b9896acf311792c01bfb52\",\"c234aa0c19d2695fe17e2c0a1c40a993bf03a641\",\"c2b73e24c0e52426a804d75948ec994e72bb4532\",\"c42df00e5578237fffabcdb223fe114adeff33cf\",\"c54ab7a0c0184e2cf9dfca1f7d2b80bfe0ac202f\",\"c88d89b2b89d8f771cfca6376498d7f1668fb7ec\",\"nezuko\",\"the rat from ratatouille\"],\"year\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,2,5],\"color\":[\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"green\",\"grey\"],\"net_id\":[1,2,3,4,5,6,7,8,9,10,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,55,56,57,58,59,60,61,62,63,64,65,66,88,92],\"title\":[\"028f5d1f351d38cd6553ab4674b19725d5ea3d3c\",\"032a3c6dec4cd50ce32fee61dc9730ad189e8fc2\",\"10aac473720a660f85718ccc3128ba5af3f5a6b1\",\"13a96378c480a712cfcdd4d22c25b760e3ca592a\",\"19d5b2694036f6fab966564c1c44bc74330f22c2\",\"1ae1327030b801f0046278d197378603b51de4b7\",\"1d44d751ddd605060dfd40ac036cce9180094d50\",\"22d9da03c847511ef453a00333339356c717ad0c\",\"258f00e649e6a452acb67cb9297c88820c05e2a7\",\"271c4ffb63aed6f306b27b5ce7b06fb6c76a903c\",\"3518c5c116d54dc150261f6578f31246fe4c28dd\",\"387d6acd079ce68c66f897287488fcd06f924ac4\",\"3a25d9f807104eb853e65634a29470219645852f\",\"3fa2cb5f2b104e01efc48bbb4fe256d657d3b6ab\",\"3fe579b0c16b93755fd8fe17fafb93a726037966\",\"42dbc8f81531a061a9cf0f7795b3ee411d2338cc\",\"486806b0eac5f2fcdb18231cf6920c7efad072ef\",\"4ca649370bef97f7369166806bad38982028c8be\",\"4da91f8e74eb72d8a7fc68cc6ff87420817184d8\",\"56b6b91cce70132c3f077e22a603e6b8bbe64e8d\",\"56fd67c7167c26a5aa4aa3e81513288facd80978\",\"5737a840aa867025dcb506f24cb5546f16b4d777\",\"5bb9bc3353e4bf9160eb6c2e44525be7ba100b88\",\"5e6f8d1471d06ebcbb895faff1a2f4301c7997c9\",\"6209ec719a337e397e5e24bc355307a079f2b0c0\",\"af965b068422ab7676986a66bb5b74c6984ab640\",\"b33f00bd1109e1ae3ffa757d0aef0a25942f2ba3\",\"b35ee0f6de6f5364527d73a2a9e92aeb71ffd2be\",\"b7f53186c0ea534a9c388824fd159410cb62c61b\",\"bad649b4f60a51869edde3c2c19eacefe89c616f\",\"bb7412e10348d8832276ade031e81861f379ef03\",\"c0ff15d535015a30d3b9896acf311792c01bfb52\",\"c234aa0c19d2695fe17e2c0a1c40a993bf03a641\",\"c2b73e24c0e52426a804d75948ec994e72bb4532\",\"c42df00e5578237fffabcdb223fe114adeff33cf\",\"c54ab7a0c0184e2cf9dfca1f7d2b80bfe0ac202f\",\"c88d89b2b89d8f771cfca6376498d7f1668fb7ec\",\"nezuko\",\"the rat from ratatouille\"]},\"edges\":{\"to\":[\"56b6b91cce70132c3f077e22a603e6b8bbe64e8d\",\"486806b0eac5f2fcdb18231cf6920c7efad072ef\",\"13a96378c480a712cfcdd4d22c25b760e3ca592a\",\"3518c5c116d54dc150261f6578f31246fe4c28dd\",\"c42df00e5578237fffabcdb223fe114adeff33cf\",\"3fe579b0c16b93755fd8fe17fafb93a726037966\",\"b35ee0f6de6f5364527d73a2a9e92aeb71ffd2be\",\"3a25d9f807104eb853e65634a29470219645852f\",\"032a3c6dec4cd50ce32fee61dc9730ad189e8fc2\",\"c2b73e24c0e52426a804d75948ec994e72bb4532\"],\"from\":[\"nezuko\",\"nezuko\",\"nezuko\",\"nezuko\",\"nezuko\",\"the rat from ratatouille\",\"the rat from ratatouille\",\"the rat from ratatouille\",\"the rat from ratatouille\",\"the rat from ratatouille\"],\"color\":[\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\"]},\"nodesToDataframe\":true,\"edgesToDataframe\":true,\"options\":{\"width\":\"100%\",\"height\":\"100%\",\"nodes\":{\"shape\":\"dot\"},\"manipulation\":{\"enabled\":false},\"interaction\":{\"zoomView\":false,\"zoomSpeed\":1}},\"groups\":null,\"width\":null,\"height\":null,\"idselection\":{\"enabled\":false},\"byselection\":{\"enabled\":false},\"main\":null,\"submain\":null,\"footer\":null,\"background\":\"rgba(0, 0, 0, 0)\",\"tooltipStay\":300,\"tooltipStyle\":\"position: fixed;visibility:hidden;padding: 5px;white-space: nowrap;font-family: verdana;font-size:14px;font-color:#000000;background-color: #f5f4ed;-moz-border-radius: 3px;-webkit-border-radius: 3px;border-radius: 3px;border: 1px solid #808074;box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\nIf we remove this node, the network changes in a major way! Imagine these nodes\nare people, and that missing node is the *one* person you forget to survey, or\nwas sick the day data was collected. This could massively change the outcome of\nyour analyses. There is some advanced research going on to detect and replace\nmissing data like this if you have enough context, but it is not something to\nrely on.\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"visNetwork html-widget html-fill-item\" id=\"htmlwidget-7d8c7dbb48fdd381a0de\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-7d8c7dbb48fdd381a0de\">{\"x\":{\"nodes\":{\"id\":[\"028f5d1f351d38cd6553ab4674b19725d5ea3d3c\",\"032a3c6dec4cd50ce32fee61dc9730ad189e8fc2\",\"10aac473720a660f85718ccc3128ba5af3f5a6b1\",\"13a96378c480a712cfcdd4d22c25b760e3ca592a\",\"19d5b2694036f6fab966564c1c44bc74330f22c2\",\"1ae1327030b801f0046278d197378603b51de4b7\",\"1d44d751ddd605060dfd40ac036cce9180094d50\",\"22d9da03c847511ef453a00333339356c717ad0c\",\"258f00e649e6a452acb67cb9297c88820c05e2a7\",\"271c4ffb63aed6f306b27b5ce7b06fb6c76a903c\",\"3518c5c116d54dc150261f6578f31246fe4c28dd\",\"387d6acd079ce68c66f897287488fcd06f924ac4\",\"3a25d9f807104eb853e65634a29470219645852f\",\"3fa2cb5f2b104e01efc48bbb4fe256d657d3b6ab\",\"3fe579b0c16b93755fd8fe17fafb93a726037966\",\"42dbc8f81531a061a9cf0f7795b3ee411d2338cc\",\"486806b0eac5f2fcdb18231cf6920c7efad072ef\",\"4ca649370bef97f7369166806bad38982028c8be\",\"4da91f8e74eb72d8a7fc68cc6ff87420817184d8\",\"56b6b91cce70132c3f077e22a603e6b8bbe64e8d\",\"56fd67c7167c26a5aa4aa3e81513288facd80978\",\"5737a840aa867025dcb506f24cb5546f16b4d777\",\"5bb9bc3353e4bf9160eb6c2e44525be7ba100b88\",\"5e6f8d1471d06ebcbb895faff1a2f4301c7997c9\",\"6209ec719a337e397e5e24bc355307a079f2b0c0\",\"af965b068422ab7676986a66bb5b74c6984ab640\",\"b33f00bd1109e1ae3ffa757d0aef0a25942f2ba3\",\"b35ee0f6de6f5364527d73a2a9e92aeb71ffd2be\",\"b7f53186c0ea534a9c388824fd159410cb62c61b\",\"bad649b4f60a51869edde3c2c19eacefe89c616f\",\"bb7412e10348d8832276ade031e81861f379ef03\",\"c0ff15d535015a30d3b9896acf311792c01bfb52\",\"c234aa0c19d2695fe17e2c0a1c40a993bf03a641\",\"c2b73e24c0e52426a804d75948ec994e72bb4532\",\"c42df00e5578237fffabcdb223fe114adeff33cf\",\"c54ab7a0c0184e2cf9dfca1f7d2b80bfe0ac202f\",\"c88d89b2b89d8f771cfca6376498d7f1668fb7ec\",\"the rat from ratatouille\"],\"year\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,5],\"color\":[\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\"],\"net_id\":[1,2,3,4,5,6,7,8,9,10,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,55,56,57,58,59,60,61,62,63,64,65,66,92],\"title\":[\"028f5d1f351d38cd6553ab4674b19725d5ea3d3c\",\"032a3c6dec4cd50ce32fee61dc9730ad189e8fc2\",\"10aac473720a660f85718ccc3128ba5af3f5a6b1\",\"13a96378c480a712cfcdd4d22c25b760e3ca592a\",\"19d5b2694036f6fab966564c1c44bc74330f22c2\",\"1ae1327030b801f0046278d197378603b51de4b7\",\"1d44d751ddd605060dfd40ac036cce9180094d50\",\"22d9da03c847511ef453a00333339356c717ad0c\",\"258f00e649e6a452acb67cb9297c88820c05e2a7\",\"271c4ffb63aed6f306b27b5ce7b06fb6c76a903c\",\"3518c5c116d54dc150261f6578f31246fe4c28dd\",\"387d6acd079ce68c66f897287488fcd06f924ac4\",\"3a25d9f807104eb853e65634a29470219645852f\",\"3fa2cb5f2b104e01efc48bbb4fe256d657d3b6ab\",\"3fe579b0c16b93755fd8fe17fafb93a726037966\",\"42dbc8f81531a061a9cf0f7795b3ee411d2338cc\",\"486806b0eac5f2fcdb18231cf6920c7efad072ef\",\"4ca649370bef97f7369166806bad38982028c8be\",\"4da91f8e74eb72d8a7fc68cc6ff87420817184d8\",\"56b6b91cce70132c3f077e22a603e6b8bbe64e8d\",\"56fd67c7167c26a5aa4aa3e81513288facd80978\",\"5737a840aa867025dcb506f24cb5546f16b4d777\",\"5bb9bc3353e4bf9160eb6c2e44525be7ba100b88\",\"5e6f8d1471d06ebcbb895faff1a2f4301c7997c9\",\"6209ec719a337e397e5e24bc355307a079f2b0c0\",\"af965b068422ab7676986a66bb5b74c6984ab640\",\"b33f00bd1109e1ae3ffa757d0aef0a25942f2ba3\",\"b35ee0f6de6f5364527d73a2a9e92aeb71ffd2be\",\"b7f53186c0ea534a9c388824fd159410cb62c61b\",\"bad649b4f60a51869edde3c2c19eacefe89c616f\",\"bb7412e10348d8832276ade031e81861f379ef03\",\"c0ff15d535015a30d3b9896acf311792c01bfb52\",\"c234aa0c19d2695fe17e2c0a1c40a993bf03a641\",\"c2b73e24c0e52426a804d75948ec994e72bb4532\",\"c42df00e5578237fffabcdb223fe114adeff33cf\",\"c54ab7a0c0184e2cf9dfca1f7d2b80bfe0ac202f\",\"c88d89b2b89d8f771cfca6376498d7f1668fb7ec\",\"the rat from ratatouille\"]},\"edges\":{\"to\":[\"3fe579b0c16b93755fd8fe17fafb93a726037966\",\"b35ee0f6de6f5364527d73a2a9e92aeb71ffd2be\",\"3a25d9f807104eb853e65634a29470219645852f\",\"032a3c6dec4cd50ce32fee61dc9730ad189e8fc2\",\"c2b73e24c0e52426a804d75948ec994e72bb4532\"],\"from\":[\"the rat from ratatouille\",\"the rat from ratatouille\",\"the rat from ratatouille\",\"the rat from ratatouille\",\"the rat from ratatouille\"],\"color\":[\"grey\",\"grey\",\"grey\",\"grey\",\"grey\"]},\"nodesToDataframe\":true,\"edgesToDataframe\":true,\"options\":{\"width\":\"100%\",\"height\":\"100%\",\"nodes\":{\"shape\":\"dot\"},\"manipulation\":{\"enabled\":false},\"interaction\":{\"zoomView\":false,\"zoomSpeed\":1}},\"groups\":null,\"width\":null,\"height\":null,\"idselection\":{\"enabled\":false},\"byselection\":{\"enabled\":false},\"main\":null,\"submain\":null,\"footer\":null,\"background\":\"rgba(0, 0, 0, 0)\",\"tooltipStay\":300,\"tooltipStyle\":\"position: fixed;visibility:hidden;padding: 5px;white-space: nowrap;font-family: verdana;font-size:14px;font-color:#000000;background-color: #f5f4ed;-moz-border-radius: 3px;-webkit-border-radius: 3px;border-radius: 3px;border: 1px solid #808074;box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n#### Network Boundaries\n\nNetwork analysis is all about looking at the relationships between entities.\nHowever, following all connections an entity has can quickly spiral out of\nhand. For example, if you wanted to map your own social network, where would\nyou start? You would include yourself, then your friends and family, but what\nabout after that? Your friends and family have friends and family, as do their\nfriends and family, and so on. If you are looking at human networks, *every*\nhuman will be included if you look far enough, so how do you decide when to\nstop?\n\nThere is no easy answer. If you are looking at a pre-defined group (for\nexample, this class), you can set the boundaries to include everyone in this\nclass and the connection between them. However, that doesn't really capture the\nsocial networks of people in this class as most people will have friends\nelsewhere.\n\nAnother common method is setting an arbitrary number of \"steps\" or connections\nfrom a target population. If we were interested in a 2-step network from an\nindividual, we would collect all of their relevant connections, and then ask\nall the people they nominated about their connections. Some sort of\njustification will be needed as to why you picked the number of steps that you\ndid.\n\n::: {#fig-2-step}\n![](/images/ch14/2_step.png)\n:::\n\n### Projected Networks\n\nOften, you will not have individual level network data, but you will have data\non group membership. For example, if you wanted to map the social networks of\nstudent, but don't know who they actually hang around with, you may be able to\nuse class rosters to build an approximate network. This is call a **bipartite\nnetwork**, **two-mode network**, or **projected network**. You can see an\nexample below.\n\n::: {#fig-2-mode}\n![](/images/ch14/2mode.png)\n\nIn this figure there are two kinds of nodes, students and classes. You can\n\"collapse\" this into a student network by assuming every student connected to a\nclass is connected to each other. The same is true with classes, such that\nclasses are related to each other if a single student is enrolled in both. This\nassumption may not always be correct, and you need to take care if you are\ngoing to make it in your research. If a class has 300 students, it is most\nlikely not correct to assume every student knows every other student in that\nclass.\n:::\n\nFor reference, this is what out projected class network looks like:\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"visNetwork html-widget html-fill-item\" id=\"htmlwidget-5a3f6149270e222804e1\" style=\"width:100%;height:480px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-5a3f6149270e222804e1\">{\"x\":{\"nodes\":{\"id\":[\"zuko\",\"nezuko\",\"winnie the pooh\",\"toph\",\"chicken joe\",\"the rat from ratatouille\",\"spider-man\",\"yamaguchi tadashi\",\"jude sweetwine\",\"lord future\",\"puppycat\",\"hamlet\",\"rosa diaz\"],\"year\":[2,2,2,2,2,5,3,1,2,2,1,1,2],\"color\":[\"purple\",\"purple\",\"blue\",\"purple\",\"green\",\"blue\",\"blue\",\"purple\",\"purple\",\"blue\",\"purple\",\"green\",\"purple\"],\"title\":[\"zuko\",\"nezuko\",\"winnie the pooh\",\"toph\",\"chicken joe\",\"the rat from ratatouille\",\"spider-man\",\"yamaguchi tadashi\",\"jude sweetwine\",\"lord future\",\"puppycat\",\"hamlet\",\"rosa diaz\"]},\"edges\":{\"from\":[\"hamlet\",\"hamlet\",\"hamlet\",\"hamlet\",\"hamlet\",\"hamlet\",\"hamlet\",\"lord future\",\"lord future\",\"lord future\",\"lord future\",\"jude sweetwine\",\"jude sweetwine\",\"jude sweetwine\",\"jude sweetwine\",\"jude sweetwine\",\"spider-man\",\"spider-man\",\"spider-man\",\"spider-man\",\"spider-man\",\"zuko\",\"zuko\",\"zuko\",\"zuko\",\"zuko\",\"zuko\",\"puppycat\",\"puppycat\",\"the rat from ratatouille\",\"the rat from ratatouille\",\"the rat from ratatouille\",\"rosa diaz\",\"rosa diaz\",\"nezuko\",\"nezuko\",\"toph\"],\"to\":[\"puppycat\",\"spider-man\",\"zuko\",\"the rat from ratatouille\",\"rosa diaz\",\"toph\",\"winnie the pooh\",\"toph\",\"puppycat\",\"jude sweetwine\",\"nezuko\",\"puppycat\",\"winnie the pooh\",\"zuko\",\"nezuko\",\"toph\",\"zuko\",\"the rat from ratatouille\",\"rosa diaz\",\"toph\",\"winnie the pooh\",\"the rat from ratatouille\",\"rosa diaz\",\"toph\",\"winnie the pooh\",\"puppycat\",\"nezuko\",\"nezuko\",\"toph\",\"rosa diaz\",\"toph\",\"winnie the pooh\",\"toph\",\"winnie the pooh\",\"toph\",\"winnie the pooh\",\"winnie the pooh\"]},\"nodesToDataframe\":true,\"edgesToDataframe\":true,\"options\":{\"width\":\"100%\",\"height\":\"100%\",\"nodes\":{\"shape\":\"dot\"},\"manipulation\":{\"enabled\":false},\"interaction\":{\"zoomView\":false,\"zoomSpeed\":1}},\"groups\":null,\"width\":null,\"height\":null,\"idselection\":{\"enabled\":false},\"byselection\":{\"enabled\":false},\"main\":null,\"submain\":null,\"footer\":null,\"background\":\"rgba(0, 0, 0, 0)\",\"tooltipStay\":300,\"tooltipStyle\":\"position: fixed;visibility:hidden;padding: 5px;white-space: nowrap;font-family: verdana;font-size:14px;font-color:#000000;background-color: #f5f4ed;-moz-border-radius: 3px;-webkit-border-radius: 3px;border-radius: 3px;border: 1px solid #808074;box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n## Graph Level Properties\n\nNow that we know what networks are and have some examples of how they are used\nand the data required, let's get into actually analyzing them. There are a\nnumber of measures we can compute to understand the structure of a network as a\nwhole. We will go over some basic network level ones here. These are single\nmeasures or attributes used to describe the entire network, and can be used to\ncompare one network against another.\n\n* Directed or Undirected\n* Density\n* Centralization\n\n### Directed or Undirected\n\nNetworks can either be **directed** or **undirected**. A directed network\ntreats the edges between nodes as having a specific direction of flow, while an\nundirected network considers all edges to be mutual. An example of each is\npresented below.\n\nBoth edgelist and adjacency matrix datasets are inherently directed. For\nedgelists, the sender is often the first column, and the receiver is the\nsecond. For adjacency matrices the rows are considered senders and columns are\nreceivers. Directionality is often specified when the network objects are\ncreated. When we created our toy network, we specified `directed = FALSE` to\nsimplify things. If you want a directed network, the default is `directed =\nTRUE` for `statnet` networks.\n\nA directed network tracks which node is the source and which node is the\nreceiver for an edge. Take for example the *follow* mechanic on Twitter. User A\ncan follow User B, creating a directed edge from A to B, but B does not have to\nfollow A in return. This can be useful when trying to understand the flows of\nresources that are finite such as money or goods.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# visNetwork uses a column called \"arrows\" to show directionality in its plots.\n# For our edgelist, we'll just say every row is \"to\" for now\ntoy_edgelist$arrows = \"to\"\n\n# This will show us what our network would look like if it was directed.\nvisNetwork(toy_attributes, toy_edgelist, main = \"Directed\") %>%\n  visInteraction(zoomView = FALSE)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"visNetwork html-widget html-fill-item\" id=\"htmlwidget-2b104c8ae818e2e89968\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-2b104c8ae818e2e89968\">{\"x\":{\"nodes\":{\"id\":[\"028f5d1f351d38cd6553ab4674b19725d5ea3d3c\",\"032a3c6dec4cd50ce32fee61dc9730ad189e8fc2\",\"10aac473720a660f85718ccc3128ba5af3f5a6b1\",\"13a96378c480a712cfcdd4d22c25b760e3ca592a\",\"19d5b2694036f6fab966564c1c44bc74330f22c2\",\"1ae1327030b801f0046278d197378603b51de4b7\",\"1d44d751ddd605060dfd40ac036cce9180094d50\",\"22d9da03c847511ef453a00333339356c717ad0c\",\"258f00e649e6a452acb67cb9297c88820c05e2a7\",\"271c4ffb63aed6f306b27b5ce7b06fb6c76a903c\",\"3518c5c116d54dc150261f6578f31246fe4c28dd\",\"387d6acd079ce68c66f897287488fcd06f924ac4\",\"3a25d9f807104eb853e65634a29470219645852f\",\"3fa2cb5f2b104e01efc48bbb4fe256d657d3b6ab\",\"3fe579b0c16b93755fd8fe17fafb93a726037966\",\"42dbc8f81531a061a9cf0f7795b3ee411d2338cc\",\"486806b0eac5f2fcdb18231cf6920c7efad072ef\",\"4ca649370bef97f7369166806bad38982028c8be\",\"4da91f8e74eb72d8a7fc68cc6ff87420817184d8\",\"56b6b91cce70132c3f077e22a603e6b8bbe64e8d\",\"56fd67c7167c26a5aa4aa3e81513288facd80978\",\"5737a840aa867025dcb506f24cb5546f16b4d777\",\"5bb9bc3353e4bf9160eb6c2e44525be7ba100b88\",\"5e6f8d1471d06ebcbb895faff1a2f4301c7997c9\",\"6209ec719a337e397e5e24bc355307a079f2b0c0\",\"af965b068422ab7676986a66bb5b74c6984ab640\",\"b33f00bd1109e1ae3ffa757d0aef0a25942f2ba3\",\"b35ee0f6de6f5364527d73a2a9e92aeb71ffd2be\",\"b7f53186c0ea534a9c388824fd159410cb62c61b\",\"bad649b4f60a51869edde3c2c19eacefe89c616f\",\"bb7412e10348d8832276ade031e81861f379ef03\",\"c0ff15d535015a30d3b9896acf311792c01bfb52\",\"c234aa0c19d2695fe17e2c0a1c40a993bf03a641\",\"c2b73e24c0e52426a804d75948ec994e72bb4532\",\"c42df00e5578237fffabcdb223fe114adeff33cf\",\"c54ab7a0c0184e2cf9dfca1f7d2b80bfe0ac202f\",\"c88d89b2b89d8f771cfca6376498d7f1668fb7ec\",\"nezuko\",\"the rat from ratatouille\"],\"year\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,2,5],\"color\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,\"purple\",\"blue\"],\"net_id\":[1,2,3,4,5,6,7,8,9,10,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,55,56,57,58,59,60,61,62,63,64,65,66,88,92],\"title\":[\"028f5d1f351d38cd6553ab4674b19725d5ea3d3c\",\"032a3c6dec4cd50ce32fee61dc9730ad189e8fc2\",\"10aac473720a660f85718ccc3128ba5af3f5a6b1\",\"13a96378c480a712cfcdd4d22c25b760e3ca592a\",\"19d5b2694036f6fab966564c1c44bc74330f22c2\",\"1ae1327030b801f0046278d197378603b51de4b7\",\"1d44d751ddd605060dfd40ac036cce9180094d50\",\"22d9da03c847511ef453a00333339356c717ad0c\",\"258f00e649e6a452acb67cb9297c88820c05e2a7\",\"271c4ffb63aed6f306b27b5ce7b06fb6c76a903c\",\"3518c5c116d54dc150261f6578f31246fe4c28dd\",\"387d6acd079ce68c66f897287488fcd06f924ac4\",\"3a25d9f807104eb853e65634a29470219645852f\",\"3fa2cb5f2b104e01efc48bbb4fe256d657d3b6ab\",\"3fe579b0c16b93755fd8fe17fafb93a726037966\",\"42dbc8f81531a061a9cf0f7795b3ee411d2338cc\",\"486806b0eac5f2fcdb18231cf6920c7efad072ef\",\"4ca649370bef97f7369166806bad38982028c8be\",\"4da91f8e74eb72d8a7fc68cc6ff87420817184d8\",\"56b6b91cce70132c3f077e22a603e6b8bbe64e8d\",\"56fd67c7167c26a5aa4aa3e81513288facd80978\",\"5737a840aa867025dcb506f24cb5546f16b4d777\",\"5bb9bc3353e4bf9160eb6c2e44525be7ba100b88\",\"5e6f8d1471d06ebcbb895faff1a2f4301c7997c9\",\"6209ec719a337e397e5e24bc355307a079f2b0c0\",\"af965b068422ab7676986a66bb5b74c6984ab640\",\"b33f00bd1109e1ae3ffa757d0aef0a25942f2ba3\",\"b35ee0f6de6f5364527d73a2a9e92aeb71ffd2be\",\"b7f53186c0ea534a9c388824fd159410cb62c61b\",\"bad649b4f60a51869edde3c2c19eacefe89c616f\",\"bb7412e10348d8832276ade031e81861f379ef03\",\"c0ff15d535015a30d3b9896acf311792c01bfb52\",\"c234aa0c19d2695fe17e2c0a1c40a993bf03a641\",\"c2b73e24c0e52426a804d75948ec994e72bb4532\",\"c42df00e5578237fffabcdb223fe114adeff33cf\",\"c54ab7a0c0184e2cf9dfca1f7d2b80bfe0ac202f\",\"c88d89b2b89d8f771cfca6376498d7f1668fb7ec\",\"nezuko\",\"the rat from ratatouille\"]},\"edges\":{\"to\":[\"56b6b91cce70132c3f077e22a603e6b8bbe64e8d\",\"486806b0eac5f2fcdb18231cf6920c7efad072ef\",\"13a96378c480a712cfcdd4d22c25b760e3ca592a\",\"3518c5c116d54dc150261f6578f31246fe4c28dd\",\"c42df00e5578237fffabcdb223fe114adeff33cf\",\"3fe579b0c16b93755fd8fe17fafb93a726037966\",\"b35ee0f6de6f5364527d73a2a9e92aeb71ffd2be\",\"3a25d9f807104eb853e65634a29470219645852f\",\"032a3c6dec4cd50ce32fee61dc9730ad189e8fc2\",\"c2b73e24c0e52426a804d75948ec994e72bb4532\"],\"from\":[\"nezuko\",\"nezuko\",\"nezuko\",\"nezuko\",\"nezuko\",\"the rat from ratatouille\",\"the rat from ratatouille\",\"the rat from ratatouille\",\"the rat from ratatouille\",\"the rat from ratatouille\"],\"arrows\":[\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\"]},\"nodesToDataframe\":true,\"edgesToDataframe\":true,\"options\":{\"width\":\"100%\",\"height\":\"100%\",\"nodes\":{\"shape\":\"dot\"},\"manipulation\":{\"enabled\":false},\"interaction\":{\"zoomView\":false,\"zoomSpeed\":1}},\"groups\":null,\"width\":null,\"height\":null,\"idselection\":{\"enabled\":false},\"byselection\":{\"enabled\":false},\"main\":{\"text\":\"Directed\",\"style\":\"font-family:Georgia, Times New Roman, Times, serif;font-weight:bold;font-size:20px;text-align:center;\"},\"submain\":null,\"footer\":null,\"background\":\"rgba(0, 0, 0, 0)\",\"tooltipStay\":300,\"tooltipStyle\":\"position: fixed;visibility:hidden;padding: 5px;white-space: nowrap;font-family: verdana;font-size:14px;font-color:#000000;background-color: #f5f4ed;-moz-border-radius: 3px;-webkit-border-radius: 3px;border-radius: 3px;border: 1px solid #808074;box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\nAn undirected network treats all ties as mutual, such that A and B are both\ninvolved equally in a tie. An example is the *friend* mechanic on Facebook.\nOnce a friendship is established, both users are considered equal in the tie.\nThis can be helpful when you do not have information on what node initiates a\ntie, or when events happen equally to a group of nodes, such as all nodes being\nconnected through co-membership in a group.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Let's drop the arrow column for now since our network is undirected.\ntoy_edgelist = toy_edgelist[,c(\"from\", \"to\")]\n\n# Plot\nvisNetwork(toy_attributes, toy_edgelist, main = \"Undirected\") %>%\n  visInteraction(zoomView = FALSE)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"visNetwork html-widget html-fill-item\" id=\"htmlwidget-b9215e003b5f42019276\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-b9215e003b5f42019276\">{\"x\":{\"nodes\":{\"id\":[\"028f5d1f351d38cd6553ab4674b19725d5ea3d3c\",\"032a3c6dec4cd50ce32fee61dc9730ad189e8fc2\",\"10aac473720a660f85718ccc3128ba5af3f5a6b1\",\"13a96378c480a712cfcdd4d22c25b760e3ca592a\",\"19d5b2694036f6fab966564c1c44bc74330f22c2\",\"1ae1327030b801f0046278d197378603b51de4b7\",\"1d44d751ddd605060dfd40ac036cce9180094d50\",\"22d9da03c847511ef453a00333339356c717ad0c\",\"258f00e649e6a452acb67cb9297c88820c05e2a7\",\"271c4ffb63aed6f306b27b5ce7b06fb6c76a903c\",\"3518c5c116d54dc150261f6578f31246fe4c28dd\",\"387d6acd079ce68c66f897287488fcd06f924ac4\",\"3a25d9f807104eb853e65634a29470219645852f\",\"3fa2cb5f2b104e01efc48bbb4fe256d657d3b6ab\",\"3fe579b0c16b93755fd8fe17fafb93a726037966\",\"42dbc8f81531a061a9cf0f7795b3ee411d2338cc\",\"486806b0eac5f2fcdb18231cf6920c7efad072ef\",\"4ca649370bef97f7369166806bad38982028c8be\",\"4da91f8e74eb72d8a7fc68cc6ff87420817184d8\",\"56b6b91cce70132c3f077e22a603e6b8bbe64e8d\",\"56fd67c7167c26a5aa4aa3e81513288facd80978\",\"5737a840aa867025dcb506f24cb5546f16b4d777\",\"5bb9bc3353e4bf9160eb6c2e44525be7ba100b88\",\"5e6f8d1471d06ebcbb895faff1a2f4301c7997c9\",\"6209ec719a337e397e5e24bc355307a079f2b0c0\",\"af965b068422ab7676986a66bb5b74c6984ab640\",\"b33f00bd1109e1ae3ffa757d0aef0a25942f2ba3\",\"b35ee0f6de6f5364527d73a2a9e92aeb71ffd2be\",\"b7f53186c0ea534a9c388824fd159410cb62c61b\",\"bad649b4f60a51869edde3c2c19eacefe89c616f\",\"bb7412e10348d8832276ade031e81861f379ef03\",\"c0ff15d535015a30d3b9896acf311792c01bfb52\",\"c234aa0c19d2695fe17e2c0a1c40a993bf03a641\",\"c2b73e24c0e52426a804d75948ec994e72bb4532\",\"c42df00e5578237fffabcdb223fe114adeff33cf\",\"c54ab7a0c0184e2cf9dfca1f7d2b80bfe0ac202f\",\"c88d89b2b89d8f771cfca6376498d7f1668fb7ec\",\"nezuko\",\"the rat from ratatouille\"],\"year\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,2,5],\"color\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,\"purple\",\"blue\"],\"net_id\":[1,2,3,4,5,6,7,8,9,10,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,55,56,57,58,59,60,61,62,63,64,65,66,88,92],\"title\":[\"028f5d1f351d38cd6553ab4674b19725d5ea3d3c\",\"032a3c6dec4cd50ce32fee61dc9730ad189e8fc2\",\"10aac473720a660f85718ccc3128ba5af3f5a6b1\",\"13a96378c480a712cfcdd4d22c25b760e3ca592a\",\"19d5b2694036f6fab966564c1c44bc74330f22c2\",\"1ae1327030b801f0046278d197378603b51de4b7\",\"1d44d751ddd605060dfd40ac036cce9180094d50\",\"22d9da03c847511ef453a00333339356c717ad0c\",\"258f00e649e6a452acb67cb9297c88820c05e2a7\",\"271c4ffb63aed6f306b27b5ce7b06fb6c76a903c\",\"3518c5c116d54dc150261f6578f31246fe4c28dd\",\"387d6acd079ce68c66f897287488fcd06f924ac4\",\"3a25d9f807104eb853e65634a29470219645852f\",\"3fa2cb5f2b104e01efc48bbb4fe256d657d3b6ab\",\"3fe579b0c16b93755fd8fe17fafb93a726037966\",\"42dbc8f81531a061a9cf0f7795b3ee411d2338cc\",\"486806b0eac5f2fcdb18231cf6920c7efad072ef\",\"4ca649370bef97f7369166806bad38982028c8be\",\"4da91f8e74eb72d8a7fc68cc6ff87420817184d8\",\"56b6b91cce70132c3f077e22a603e6b8bbe64e8d\",\"56fd67c7167c26a5aa4aa3e81513288facd80978\",\"5737a840aa867025dcb506f24cb5546f16b4d777\",\"5bb9bc3353e4bf9160eb6c2e44525be7ba100b88\",\"5e6f8d1471d06ebcbb895faff1a2f4301c7997c9\",\"6209ec719a337e397e5e24bc355307a079f2b0c0\",\"af965b068422ab7676986a66bb5b74c6984ab640\",\"b33f00bd1109e1ae3ffa757d0aef0a25942f2ba3\",\"b35ee0f6de6f5364527d73a2a9e92aeb71ffd2be\",\"b7f53186c0ea534a9c388824fd159410cb62c61b\",\"bad649b4f60a51869edde3c2c19eacefe89c616f\",\"bb7412e10348d8832276ade031e81861f379ef03\",\"c0ff15d535015a30d3b9896acf311792c01bfb52\",\"c234aa0c19d2695fe17e2c0a1c40a993bf03a641\",\"c2b73e24c0e52426a804d75948ec994e72bb4532\",\"c42df00e5578237fffabcdb223fe114adeff33cf\",\"c54ab7a0c0184e2cf9dfca1f7d2b80bfe0ac202f\",\"c88d89b2b89d8f771cfca6376498d7f1668fb7ec\",\"nezuko\",\"the rat from ratatouille\"]},\"edges\":{\"from\":[\"nezuko\",\"nezuko\",\"nezuko\",\"nezuko\",\"nezuko\",\"the rat from ratatouille\",\"the rat from ratatouille\",\"the rat from ratatouille\",\"the rat from ratatouille\",\"the rat from ratatouille\"],\"to\":[\"56b6b91cce70132c3f077e22a603e6b8bbe64e8d\",\"486806b0eac5f2fcdb18231cf6920c7efad072ef\",\"13a96378c480a712cfcdd4d22c25b760e3ca592a\",\"3518c5c116d54dc150261f6578f31246fe4c28dd\",\"c42df00e5578237fffabcdb223fe114adeff33cf\",\"3fe579b0c16b93755fd8fe17fafb93a726037966\",\"b35ee0f6de6f5364527d73a2a9e92aeb71ffd2be\",\"3a25d9f807104eb853e65634a29470219645852f\",\"032a3c6dec4cd50ce32fee61dc9730ad189e8fc2\",\"c2b73e24c0e52426a804d75948ec994e72bb4532\"]},\"nodesToDataframe\":true,\"edgesToDataframe\":true,\"options\":{\"width\":\"100%\",\"height\":\"100%\",\"nodes\":{\"shape\":\"dot\"},\"manipulation\":{\"enabled\":false},\"interaction\":{\"zoomView\":false,\"zoomSpeed\":1}},\"groups\":null,\"width\":null,\"height\":null,\"idselection\":{\"enabled\":false},\"byselection\":{\"enabled\":false},\"main\":{\"text\":\"Undirected\",\"style\":\"font-family:Georgia, Times New Roman, Times, serif;font-weight:bold;font-size:20px;text-align:center;\"},\"submain\":null,\"footer\":null,\"background\":\"rgba(0, 0, 0, 0)\",\"tooltipStay\":300,\"tooltipStyle\":\"position: fixed;visibility:hidden;padding: 5px;white-space: nowrap;font-family: verdana;font-size:14px;font-color:#000000;background-color: #f5f4ed;-moz-border-radius: 3px;-webkit-border-radius: 3px;border-radius: 3px;border: 1px solid #808074;box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\nWhich of these will be useful to you will likely change from project to\nproject. However, it is vital to understand what kind of network you are\nworking with, as many network calculations we will talk about later change\ntheir behavior based on if the network is directed or not.\n\n### Density\n\n**Density** is the first real graph level metric that helps you understand what\nis particular about the network you are looking at. The density of a network is\na numerical score showing how many ties exist in a network, given the max\npossible in that network. Mathematically that is $\\frac{Actual Edges}{Possible\nEdges}$, where actual edges is the number of edges in the network, and possible\nedges is the number of edges if every single node in the network was connected\nto every other node.\n\nNetworks that are more densely connected are considered to be more cohesive and\nrobust. This means that the removal of any specific edge or node will not have\na great effect of the network as a whole. It also typically means that any one\nnode in the network will be more likely to have access to whatever resources\nare in the network, as there are more potential connections in the network to\nsearch for resources.\n\nTo calculate the density of a network, we use the `network.density` function.\nYou can also see it if you use `summary` on your network object. Below is our\ntoy network and a less dense version to try and visualize the difference.\nDensity is all about how many edges exist in the network. Notice that there are\nthe same number of nodes in both of these networks.\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"visNetwork html-widget html-fill-item\" id=\"htmlwidget-80418629a95559819d94\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-80418629a95559819d94\">{\"x\":{\"nodes\":{\"id\":[\"028f5d1f351d38cd6553ab4674b19725d5ea3d3c\",\"032a3c6dec4cd50ce32fee61dc9730ad189e8fc2\",\"10aac473720a660f85718ccc3128ba5af3f5a6b1\",\"13a96378c480a712cfcdd4d22c25b760e3ca592a\",\"19d5b2694036f6fab966564c1c44bc74330f22c2\",\"1ae1327030b801f0046278d197378603b51de4b7\",\"1d44d751ddd605060dfd40ac036cce9180094d50\",\"22d9da03c847511ef453a00333339356c717ad0c\",\"258f00e649e6a452acb67cb9297c88820c05e2a7\",\"271c4ffb63aed6f306b27b5ce7b06fb6c76a903c\",\"3518c5c116d54dc150261f6578f31246fe4c28dd\",\"387d6acd079ce68c66f897287488fcd06f924ac4\",\"3a25d9f807104eb853e65634a29470219645852f\",\"3fa2cb5f2b104e01efc48bbb4fe256d657d3b6ab\",\"3fe579b0c16b93755fd8fe17fafb93a726037966\",\"42dbc8f81531a061a9cf0f7795b3ee411d2338cc\",\"486806b0eac5f2fcdb18231cf6920c7efad072ef\",\"4ca649370bef97f7369166806bad38982028c8be\",\"4da91f8e74eb72d8a7fc68cc6ff87420817184d8\",\"56b6b91cce70132c3f077e22a603e6b8bbe64e8d\",\"56fd67c7167c26a5aa4aa3e81513288facd80978\",\"5737a840aa867025dcb506f24cb5546f16b4d777\",\"5bb9bc3353e4bf9160eb6c2e44525be7ba100b88\",\"5e6f8d1471d06ebcbb895faff1a2f4301c7997c9\",\"6209ec719a337e397e5e24bc355307a079f2b0c0\",\"af965b068422ab7676986a66bb5b74c6984ab640\",\"b33f00bd1109e1ae3ffa757d0aef0a25942f2ba3\",\"b35ee0f6de6f5364527d73a2a9e92aeb71ffd2be\",\"b7f53186c0ea534a9c388824fd159410cb62c61b\",\"bad649b4f60a51869edde3c2c19eacefe89c616f\",\"bb7412e10348d8832276ade031e81861f379ef03\",\"c0ff15d535015a30d3b9896acf311792c01bfb52\",\"c234aa0c19d2695fe17e2c0a1c40a993bf03a641\",\"c2b73e24c0e52426a804d75948ec994e72bb4532\",\"c42df00e5578237fffabcdb223fe114adeff33cf\",\"c54ab7a0c0184e2cf9dfca1f7d2b80bfe0ac202f\",\"c88d89b2b89d8f771cfca6376498d7f1668fb7ec\",\"nezuko\",\"the rat from ratatouille\"],\"year\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,2,5],\"color\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,\"purple\",\"blue\"],\"net_id\":[1,2,3,4,5,6,7,8,9,10,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,55,56,57,58,59,60,61,62,63,64,65,66,88,92],\"title\":[\"028f5d1f351d38cd6553ab4674b19725d5ea3d3c\",\"032a3c6dec4cd50ce32fee61dc9730ad189e8fc2\",\"10aac473720a660f85718ccc3128ba5af3f5a6b1\",\"13a96378c480a712cfcdd4d22c25b760e3ca592a\",\"19d5b2694036f6fab966564c1c44bc74330f22c2\",\"1ae1327030b801f0046278d197378603b51de4b7\",\"1d44d751ddd605060dfd40ac036cce9180094d50\",\"22d9da03c847511ef453a00333339356c717ad0c\",\"258f00e649e6a452acb67cb9297c88820c05e2a7\",\"271c4ffb63aed6f306b27b5ce7b06fb6c76a903c\",\"3518c5c116d54dc150261f6578f31246fe4c28dd\",\"387d6acd079ce68c66f897287488fcd06f924ac4\",\"3a25d9f807104eb853e65634a29470219645852f\",\"3fa2cb5f2b104e01efc48bbb4fe256d657d3b6ab\",\"3fe579b0c16b93755fd8fe17fafb93a726037966\",\"42dbc8f81531a061a9cf0f7795b3ee411d2338cc\",\"486806b0eac5f2fcdb18231cf6920c7efad072ef\",\"4ca649370bef97f7369166806bad38982028c8be\",\"4da91f8e74eb72d8a7fc68cc6ff87420817184d8\",\"56b6b91cce70132c3f077e22a603e6b8bbe64e8d\",\"56fd67c7167c26a5aa4aa3e81513288facd80978\",\"5737a840aa867025dcb506f24cb5546f16b4d777\",\"5bb9bc3353e4bf9160eb6c2e44525be7ba100b88\",\"5e6f8d1471d06ebcbb895faff1a2f4301c7997c9\",\"6209ec719a337e397e5e24bc355307a079f2b0c0\",\"af965b068422ab7676986a66bb5b74c6984ab640\",\"b33f00bd1109e1ae3ffa757d0aef0a25942f2ba3\",\"b35ee0f6de6f5364527d73a2a9e92aeb71ffd2be\",\"b7f53186c0ea534a9c388824fd159410cb62c61b\",\"bad649b4f60a51869edde3c2c19eacefe89c616f\",\"bb7412e10348d8832276ade031e81861f379ef03\",\"c0ff15d535015a30d3b9896acf311792c01bfb52\",\"c234aa0c19d2695fe17e2c0a1c40a993bf03a641\",\"c2b73e24c0e52426a804d75948ec994e72bb4532\",\"c42df00e5578237fffabcdb223fe114adeff33cf\",\"c54ab7a0c0184e2cf9dfca1f7d2b80bfe0ac202f\",\"c88d89b2b89d8f771cfca6376498d7f1668fb7ec\",\"nezuko\",\"the rat from ratatouille\"]},\"edges\":{\"from\":[\"nezuko\",\"nezuko\",\"nezuko\",\"nezuko\",\"nezuko\",\"the rat from ratatouille\",\"the rat from ratatouille\",\"the rat from ratatouille\",\"the rat from ratatouille\",\"the rat from ratatouille\"],\"to\":[\"56b6b91cce70132c3f077e22a603e6b8bbe64e8d\",\"486806b0eac5f2fcdb18231cf6920c7efad072ef\",\"13a96378c480a712cfcdd4d22c25b760e3ca592a\",\"3518c5c116d54dc150261f6578f31246fe4c28dd\",\"c42df00e5578237fffabcdb223fe114adeff33cf\",\"3fe579b0c16b93755fd8fe17fafb93a726037966\",\"b35ee0f6de6f5364527d73a2a9e92aeb71ffd2be\",\"3a25d9f807104eb853e65634a29470219645852f\",\"032a3c6dec4cd50ce32fee61dc9730ad189e8fc2\",\"c2b73e24c0e52426a804d75948ec994e72bb4532\"]},\"nodesToDataframe\":true,\"edgesToDataframe\":true,\"options\":{\"width\":\"100%\",\"height\":\"100%\",\"nodes\":{\"shape\":\"dot\"},\"manipulation\":{\"enabled\":false},\"interaction\":{\"zoomView\":false,\"zoomSpeed\":1}},\"groups\":null,\"width\":null,\"height\":null,\"idselection\":{\"enabled\":false},\"byselection\":{\"enabled\":false},\"main\":{\"text\":\"High Density\",\"style\":\"font-family:Georgia, Times New Roman, Times, serif;font-weight:bold;font-size:20px;text-align:center;\"},\"submain\":null,\"footer\":null,\"background\":\"rgba(0, 0, 0, 0)\",\"tooltipStay\":300,\"tooltipStyle\":\"position: fixed;visibility:hidden;padding: 5px;white-space: nowrap;font-family: verdana;font-size:14px;font-color:#000000;background-color: #f5f4ed;-moz-border-radius: 3px;-webkit-border-radius: 3px;border-radius: 3px;border: 1px solid #808074;box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"visNetwork html-widget html-fill-item\" id=\"htmlwidget-90aba02db82f3008dac1\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-90aba02db82f3008dac1\">{\"x\":{\"nodes\":{\"id\":[\"028f5d1f351d38cd6553ab4674b19725d5ea3d3c\",\"032a3c6dec4cd50ce32fee61dc9730ad189e8fc2\",\"10aac473720a660f85718ccc3128ba5af3f5a6b1\",\"13a96378c480a712cfcdd4d22c25b760e3ca592a\",\"19d5b2694036f6fab966564c1c44bc74330f22c2\",\"1ae1327030b801f0046278d197378603b51de4b7\",\"1d44d751ddd605060dfd40ac036cce9180094d50\",\"22d9da03c847511ef453a00333339356c717ad0c\",\"258f00e649e6a452acb67cb9297c88820c05e2a7\",\"271c4ffb63aed6f306b27b5ce7b06fb6c76a903c\",\"3518c5c116d54dc150261f6578f31246fe4c28dd\",\"387d6acd079ce68c66f897287488fcd06f924ac4\",\"3a25d9f807104eb853e65634a29470219645852f\",\"3fa2cb5f2b104e01efc48bbb4fe256d657d3b6ab\",\"3fe579b0c16b93755fd8fe17fafb93a726037966\",\"42dbc8f81531a061a9cf0f7795b3ee411d2338cc\",\"486806b0eac5f2fcdb18231cf6920c7efad072ef\",\"4ca649370bef97f7369166806bad38982028c8be\",\"4da91f8e74eb72d8a7fc68cc6ff87420817184d8\",\"56b6b91cce70132c3f077e22a603e6b8bbe64e8d\",\"56fd67c7167c26a5aa4aa3e81513288facd80978\",\"5737a840aa867025dcb506f24cb5546f16b4d777\",\"5bb9bc3353e4bf9160eb6c2e44525be7ba100b88\",\"5e6f8d1471d06ebcbb895faff1a2f4301c7997c9\",\"6209ec719a337e397e5e24bc355307a079f2b0c0\",\"af965b068422ab7676986a66bb5b74c6984ab640\",\"b33f00bd1109e1ae3ffa757d0aef0a25942f2ba3\",\"b35ee0f6de6f5364527d73a2a9e92aeb71ffd2be\",\"b7f53186c0ea534a9c388824fd159410cb62c61b\",\"bad649b4f60a51869edde3c2c19eacefe89c616f\",\"bb7412e10348d8832276ade031e81861f379ef03\",\"c0ff15d535015a30d3b9896acf311792c01bfb52\",\"c234aa0c19d2695fe17e2c0a1c40a993bf03a641\",\"c2b73e24c0e52426a804d75948ec994e72bb4532\",\"c42df00e5578237fffabcdb223fe114adeff33cf\",\"c54ab7a0c0184e2cf9dfca1f7d2b80bfe0ac202f\",\"c88d89b2b89d8f771cfca6376498d7f1668fb7ec\",\"nezuko\",\"the rat from ratatouille\"],\"year\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,2,5],\"color\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,\"purple\",\"blue\"],\"net_id\":[1,2,3,4,5,6,7,8,9,10,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,55,56,57,58,59,60,61,62,63,64,65,66,88,92],\"title\":[\"028f5d1f351d38cd6553ab4674b19725d5ea3d3c\",\"032a3c6dec4cd50ce32fee61dc9730ad189e8fc2\",\"10aac473720a660f85718ccc3128ba5af3f5a6b1\",\"13a96378c480a712cfcdd4d22c25b760e3ca592a\",\"19d5b2694036f6fab966564c1c44bc74330f22c2\",\"1ae1327030b801f0046278d197378603b51de4b7\",\"1d44d751ddd605060dfd40ac036cce9180094d50\",\"22d9da03c847511ef453a00333339356c717ad0c\",\"258f00e649e6a452acb67cb9297c88820c05e2a7\",\"271c4ffb63aed6f306b27b5ce7b06fb6c76a903c\",\"3518c5c116d54dc150261f6578f31246fe4c28dd\",\"387d6acd079ce68c66f897287488fcd06f924ac4\",\"3a25d9f807104eb853e65634a29470219645852f\",\"3fa2cb5f2b104e01efc48bbb4fe256d657d3b6ab\",\"3fe579b0c16b93755fd8fe17fafb93a726037966\",\"42dbc8f81531a061a9cf0f7795b3ee411d2338cc\",\"486806b0eac5f2fcdb18231cf6920c7efad072ef\",\"4ca649370bef97f7369166806bad38982028c8be\",\"4da91f8e74eb72d8a7fc68cc6ff87420817184d8\",\"56b6b91cce70132c3f077e22a603e6b8bbe64e8d\",\"56fd67c7167c26a5aa4aa3e81513288facd80978\",\"5737a840aa867025dcb506f24cb5546f16b4d777\",\"5bb9bc3353e4bf9160eb6c2e44525be7ba100b88\",\"5e6f8d1471d06ebcbb895faff1a2f4301c7997c9\",\"6209ec719a337e397e5e24bc355307a079f2b0c0\",\"af965b068422ab7676986a66bb5b74c6984ab640\",\"b33f00bd1109e1ae3ffa757d0aef0a25942f2ba3\",\"b35ee0f6de6f5364527d73a2a9e92aeb71ffd2be\",\"b7f53186c0ea534a9c388824fd159410cb62c61b\",\"bad649b4f60a51869edde3c2c19eacefe89c616f\",\"bb7412e10348d8832276ade031e81861f379ef03\",\"c0ff15d535015a30d3b9896acf311792c01bfb52\",\"c234aa0c19d2695fe17e2c0a1c40a993bf03a641\",\"c2b73e24c0e52426a804d75948ec994e72bb4532\",\"c42df00e5578237fffabcdb223fe114adeff33cf\",\"c54ab7a0c0184e2cf9dfca1f7d2b80bfe0ac202f\",\"c88d89b2b89d8f771cfca6376498d7f1668fb7ec\",\"nezuko\",\"the rat from ratatouille\"]},\"edges\":{\"from\":[\"nezuko\",\"nezuko\"],\"to\":[\"56b6b91cce70132c3f077e22a603e6b8bbe64e8d\",\"13a96378c480a712cfcdd4d22c25b760e3ca592a\"]},\"nodesToDataframe\":true,\"edgesToDataframe\":true,\"options\":{\"width\":\"100%\",\"height\":\"100%\",\"nodes\":{\"shape\":\"dot\"},\"manipulation\":{\"enabled\":false},\"interaction\":{\"zoomView\":false,\"zoomSpeed\":1}},\"groups\":null,\"width\":null,\"height\":null,\"idselection\":{\"enabled\":false},\"byselection\":{\"enabled\":false},\"main\":{\"text\":\"Low Density\",\"style\":\"font-family:Georgia, Times New Roman, Times, serif;font-weight:bold;font-size:20px;text-align:center;\"},\"submain\":null,\"footer\":null,\"background\":\"rgba(0, 0, 0, 0)\",\"tooltipStay\":300,\"tooltipStyle\":\"position: fixed;visibility:hidden;padding: 5px;white-space: nowrap;font-family: verdana;font-size:14px;font-color:#000000;background-color: #f5f4ed;-moz-border-radius: 3px;-webkit-border-radius: 3px;border-radius: 3px;border: 1px solid #808074;box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n### Centralization\n\n**Freeman centralization** (usually just called **centralization**) gives a\nsense of the shape of the network, namely how node level measures are\ndistributed in a network. We'll discuss node level measures next, but for now\nit is only important to understand that node level measures are numeric scores\nassigned to specific nodes rather than the network as a whole. This means that\neach node may have a different value.\n\nConsider the two networks below. The first \"star\" network would be considered\nhighly centralized, as one node connects to all the others, while the rest of\nthe nodes have no connections to each other. This star network would have a\nedge centralization score of 1, as 100% of the ties are connected with one\nnode. The loop network would have a score of 0, as every node is equally\nconnected to each other.\n\nCentralization is a measure of how unevenly node level metrics are distributed\nin a network. This is helpful when trying to understand if some nodes in the\nnetwork have a larger influence, or are is some way more important than others.\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"visNetwork html-widget html-fill-item\" id=\"htmlwidget-32e02411987eef082eac\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-32e02411987eef082eac\">{\"x\":{\"nodes\":{\"id\":[1,2,3,4,5,6]},\"edges\":{\"from\":[1,2,3,4,5],\"to\":[6,6,6,6,6]},\"nodesToDataframe\":true,\"edgesToDataframe\":true,\"options\":{\"width\":\"100%\",\"height\":\"100%\",\"nodes\":{\"shape\":\"dot\"},\"manipulation\":{\"enabled\":false},\"interaction\":{\"zoomView\":false,\"zoomSpeed\":1}},\"groups\":null,\"width\":null,\"height\":null,\"idselection\":{\"enabled\":false},\"byselection\":{\"enabled\":false},\"main\":{\"text\":\"Star Network\",\"style\":\"font-family:Georgia, Times New Roman, Times, serif;font-weight:bold;font-size:20px;text-align:center;\"},\"submain\":null,\"footer\":null,\"background\":\"rgba(0, 0, 0, 0)\",\"tooltipStay\":300,\"tooltipStyle\":\"position: fixed;visibility:hidden;padding: 5px;white-space: nowrap;font-family: verdana;font-size:14px;font-color:#000000;background-color: #f5f4ed;-moz-border-radius: 3px;-webkit-border-radius: 3px;border-radius: 3px;border: 1px solid #808074;box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"visNetwork html-widget html-fill-item\" id=\"htmlwidget-ba1690233ae9f472ab77\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-ba1690233ae9f472ab77\">{\"x\":{\"nodes\":{\"id\":[1,2,3,4,5,6]},\"edges\":{\"from\":[1,2,3,4,5,6],\"to\":[2,3,4,5,6,1]},\"nodesToDataframe\":true,\"edgesToDataframe\":true,\"options\":{\"width\":\"100%\",\"height\":\"100%\",\"nodes\":{\"shape\":\"dot\"},\"manipulation\":{\"enabled\":false},\"interaction\":{\"zoomView\":false,\"zoomSpeed\":1},\"layout\":{\"randomSeed\":2}},\"groups\":null,\"width\":null,\"height\":null,\"idselection\":{\"enabled\":false},\"byselection\":{\"enabled\":false},\"main\":{\"text\":\"Loop Network\",\"style\":\"font-family:Georgia, Times New Roman, Times, serif;font-weight:bold;font-size:20px;text-align:center;\"},\"submain\":null,\"footer\":null,\"background\":\"rgba(0, 0, 0, 0)\",\"tooltipStay\":300,\"tooltipStyle\":\"position: fixed;visibility:hidden;padding: 5px;white-space: nowrap;font-family: verdana;font-size:14px;font-color:#000000;background-color: #f5f4ed;-moz-border-radius: 3px;-webkit-border-radius: 3px;border-radius: 3px;border: 1px solid #808074;box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n## Node Level Properties\n\nNode level measures are numeric representations of a node's position and\nimportance in a network. There are several common node level measures, and we\nwill go over some of them here. Each measure tries to quantify a different\naspect of a node's position in the network so we can make an argument about why\nthat specific node or class of nodes is important in some way. We will go over:\n\n* Degree\n* Geodesic distance\n* Betweenness centrality\n* Eigenvector centrality\n\nMost node level measures are only helpful within the context of the network\nthey were generated for. This is because the measures are created in part using\nnetwork level measures like density. This means it is alright to compare one\nnode to another within the same network, but toy should node compare the node\nlevel measures between networks.\n\n### Degree\n\n**Degree** counts how many edges are connected to a node. You can count\nincoming, outgoing, or total (Freeman) degree. Incoming and outgoing degree\nonly matter in directed networks. In undirected networks, only total edges are\napplicable. Degree gives a very rough measure of how popular or central a node\nis in the network. If a node has more ties, it may indicate that node as being\nmore central or important the network as a whole.\n\nDegree is a raw count of the number of edges a node has, this makes the\ninterpretation of degree highly dependent on the size of the network. In a\nsmall network with only 25 total edges, having 10 of them would be significant.\nIn a larger network with 250 total edges, 10 edges could be less impressive.\nDegree should thus be interpreted in the cortex of other nodes in the network.\n\nLet's scale the node sizes of our toy network based on their total degree\nnumbers. We'll get degree counts for each of our nodes using the `degree()`\nfunction. We can save that into our data frame and network for use later. For\nnow I am naming columns to work specifically with visNetwork, we'll make a\nproper data frame for analyses later using data we saved in the network object.\nIn our visualization, you can click on any node to highlight only the edges\nconnected to that node.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Find the degree of each node and save in the network.\n#\n# We will use the special `%v%` operator when assigning values to a network.\n# `%v%` works like `$` for data frames, allowing you to ask for specific values\n# in the network.\n#\n# In this case `%v%` stands for vertex, and you can use `%e%` if you want to\n# work with edges. So let's get the degree counts, and assign them to the\n# \"degree\" variable in our network object\ntoy_network%v%\"degree\" = degree(toy_network)\n\n# visNetwork uses the \"value\" column to determine node size, so let's put it\n# there as well for now.\n#\n# We'll square the values just to make them more distinct\ntoy_attributes$value = degree(toy_network)^2\n\n# Plot!\nvisNetwork(toy_attributes, toy_edgelist, main = \"Degree Example\") %>%\n  visInteraction(zoomView = FALSE)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"visNetwork html-widget html-fill-item\" id=\"htmlwidget-de0ed9f04b2734bc8f94\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-de0ed9f04b2734bc8f94\">{\"x\":{\"nodes\":{\"id\":[\"028f5d1f351d38cd6553ab4674b19725d5ea3d3c\",\"032a3c6dec4cd50ce32fee61dc9730ad189e8fc2\",\"10aac473720a660f85718ccc3128ba5af3f5a6b1\",\"13a96378c480a712cfcdd4d22c25b760e3ca592a\",\"19d5b2694036f6fab966564c1c44bc74330f22c2\",\"1ae1327030b801f0046278d197378603b51de4b7\",\"1d44d751ddd605060dfd40ac036cce9180094d50\",\"22d9da03c847511ef453a00333339356c717ad0c\",\"258f00e649e6a452acb67cb9297c88820c05e2a7\",\"271c4ffb63aed6f306b27b5ce7b06fb6c76a903c\",\"3518c5c116d54dc150261f6578f31246fe4c28dd\",\"387d6acd079ce68c66f897287488fcd06f924ac4\",\"3a25d9f807104eb853e65634a29470219645852f\",\"3fa2cb5f2b104e01efc48bbb4fe256d657d3b6ab\",\"3fe579b0c16b93755fd8fe17fafb93a726037966\",\"42dbc8f81531a061a9cf0f7795b3ee411d2338cc\",\"486806b0eac5f2fcdb18231cf6920c7efad072ef\",\"4ca649370bef97f7369166806bad38982028c8be\",\"4da91f8e74eb72d8a7fc68cc6ff87420817184d8\",\"56b6b91cce70132c3f077e22a603e6b8bbe64e8d\",\"56fd67c7167c26a5aa4aa3e81513288facd80978\",\"5737a840aa867025dcb506f24cb5546f16b4d777\",\"5bb9bc3353e4bf9160eb6c2e44525be7ba100b88\",\"5e6f8d1471d06ebcbb895faff1a2f4301c7997c9\",\"6209ec719a337e397e5e24bc355307a079f2b0c0\",\"af965b068422ab7676986a66bb5b74c6984ab640\",\"b33f00bd1109e1ae3ffa757d0aef0a25942f2ba3\",\"b35ee0f6de6f5364527d73a2a9e92aeb71ffd2be\",\"b7f53186c0ea534a9c388824fd159410cb62c61b\",\"bad649b4f60a51869edde3c2c19eacefe89c616f\",\"bb7412e10348d8832276ade031e81861f379ef03\",\"c0ff15d535015a30d3b9896acf311792c01bfb52\",\"c234aa0c19d2695fe17e2c0a1c40a993bf03a641\",\"c2b73e24c0e52426a804d75948ec994e72bb4532\",\"c42df00e5578237fffabcdb223fe114adeff33cf\",\"c54ab7a0c0184e2cf9dfca1f7d2b80bfe0ac202f\",\"c88d89b2b89d8f771cfca6376498d7f1668fb7ec\",\"nezuko\",\"the rat from ratatouille\"],\"year\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,2,5],\"color\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,\"purple\",\"blue\"],\"net_id\":[1,2,3,4,5,6,7,8,9,10,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,55,56,57,58,59,60,61,62,63,64,65,66,88,92],\"title\":[\"028f5d1f351d38cd6553ab4674b19725d5ea3d3c\",\"032a3c6dec4cd50ce32fee61dc9730ad189e8fc2\",\"10aac473720a660f85718ccc3128ba5af3f5a6b1\",\"13a96378c480a712cfcdd4d22c25b760e3ca592a\",\"19d5b2694036f6fab966564c1c44bc74330f22c2\",\"1ae1327030b801f0046278d197378603b51de4b7\",\"1d44d751ddd605060dfd40ac036cce9180094d50\",\"22d9da03c847511ef453a00333339356c717ad0c\",\"258f00e649e6a452acb67cb9297c88820c05e2a7\",\"271c4ffb63aed6f306b27b5ce7b06fb6c76a903c\",\"3518c5c116d54dc150261f6578f31246fe4c28dd\",\"387d6acd079ce68c66f897287488fcd06f924ac4\",\"3a25d9f807104eb853e65634a29470219645852f\",\"3fa2cb5f2b104e01efc48bbb4fe256d657d3b6ab\",\"3fe579b0c16b93755fd8fe17fafb93a726037966\",\"42dbc8f81531a061a9cf0f7795b3ee411d2338cc\",\"486806b0eac5f2fcdb18231cf6920c7efad072ef\",\"4ca649370bef97f7369166806bad38982028c8be\",\"4da91f8e74eb72d8a7fc68cc6ff87420817184d8\",\"56b6b91cce70132c3f077e22a603e6b8bbe64e8d\",\"56fd67c7167c26a5aa4aa3e81513288facd80978\",\"5737a840aa867025dcb506f24cb5546f16b4d777\",\"5bb9bc3353e4bf9160eb6c2e44525be7ba100b88\",\"5e6f8d1471d06ebcbb895faff1a2f4301c7997c9\",\"6209ec719a337e397e5e24bc355307a079f2b0c0\",\"af965b068422ab7676986a66bb5b74c6984ab640\",\"b33f00bd1109e1ae3ffa757d0aef0a25942f2ba3\",\"b35ee0f6de6f5364527d73a2a9e92aeb71ffd2be\",\"b7f53186c0ea534a9c388824fd159410cb62c61b\",\"bad649b4f60a51869edde3c2c19eacefe89c616f\",\"bb7412e10348d8832276ade031e81861f379ef03\",\"c0ff15d535015a30d3b9896acf311792c01bfb52\",\"c234aa0c19d2695fe17e2c0a1c40a993bf03a641\",\"c2b73e24c0e52426a804d75948ec994e72bb4532\",\"c42df00e5578237fffabcdb223fe114adeff33cf\",\"c54ab7a0c0184e2cf9dfca1f7d2b80bfe0ac202f\",\"c88d89b2b89d8f771cfca6376498d7f1668fb7ec\",\"nezuko\",\"the rat from ratatouille\"],\"value\":[4,4,4,4,4,4,4,144,4,4,4,36,4,4,4,4,4,4,400,484,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,400,100]},\"edges\":{\"from\":[\"nezuko\",\"nezuko\",\"nezuko\",\"nezuko\",\"nezuko\",\"the rat from ratatouille\",\"the rat from ratatouille\",\"the rat from ratatouille\",\"the rat from ratatouille\",\"the rat from ratatouille\"],\"to\":[\"56b6b91cce70132c3f077e22a603e6b8bbe64e8d\",\"486806b0eac5f2fcdb18231cf6920c7efad072ef\",\"13a96378c480a712cfcdd4d22c25b760e3ca592a\",\"3518c5c116d54dc150261f6578f31246fe4c28dd\",\"c42df00e5578237fffabcdb223fe114adeff33cf\",\"3fe579b0c16b93755fd8fe17fafb93a726037966\",\"b35ee0f6de6f5364527d73a2a9e92aeb71ffd2be\",\"3a25d9f807104eb853e65634a29470219645852f\",\"032a3c6dec4cd50ce32fee61dc9730ad189e8fc2\",\"c2b73e24c0e52426a804d75948ec994e72bb4532\"]},\"nodesToDataframe\":true,\"edgesToDataframe\":true,\"options\":{\"width\":\"100%\",\"height\":\"100%\",\"nodes\":{\"shape\":\"dot\"},\"manipulation\":{\"enabled\":false},\"interaction\":{\"zoomView\":false,\"zoomSpeed\":1}},\"groups\":null,\"width\":null,\"height\":null,\"idselection\":{\"enabled\":false},\"byselection\":{\"enabled\":false},\"main\":{\"text\":\"Degree Example\",\"style\":\"font-family:Georgia, Times New Roman, Times, serif;font-weight:bold;font-size:20px;text-align:center;\"},\"submain\":null,\"footer\":null,\"background\":\"rgba(0, 0, 0, 0)\",\"tooltipStay\":300,\"tooltipStyle\":\"position: fixed;visibility:hidden;padding: 5px;white-space: nowrap;font-family: verdana;font-size:14px;font-color:#000000;background-color: #f5f4ed;-moz-border-radius: 3px;-webkit-border-radius: 3px;border-radius: 3px;border: 1px solid #808074;box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n### Geodesic Distance\n\n**Geodesic distance** is \"the length of the shortest path via the edges or\nbinary connections between nodes\" [@kadushinUnderstandingSocialNetworks2012].\nIn other words, if we treat the network as a map we can move along, with the\nnodes being stopping places and the edges being paths, the geodesic is the\nshortest possible path we can use to walk between two nodes.\n\nNodes that on average have a shorter geodesic distance between all the other\nnodes in the network are considered to have have greater access to the\nresources in a network. This is because a node with a low average geodesic\ndistance can theoretically \"reach\" the other nodes with less effort because it\ndoes not need to travel as far.\n\nTo find the mean geodesic distance for each node in the network we will first\nneed to find the geodesic distance from each node to every other node, then\ntake the mean. Not super difficult, but there isn't a single function to do it\nfor us. First we will use the `geodist` function to get all the geodesics.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get all the geodesics\n# I use the $gdist so we only get geodesics not counts\ngeodist(toy_network)$gdist\n```\n\n::: {.cell-output .cell-output-stdout}\n\n``` scrolling\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13]\n [1,]    0    2    2    2    2    2    2    2    2     2     3     3     3\n [2,]    2    0    2    2    2    2    2    2    2     2     3     3     3\n [3,]    2    2    0    2    2    2    2    2    2     2     3     3     3\n [4,]    2    2    2    0    2    2    2    2    2     2     3     3     3\n [5,]    2    2    2    2    0    2    2    2    2     2     3     3     3\n [6,]    2    2    2    2    2    0    2    2    2     2     3     3     3\n [7,]    2    2    2    2    2    2    0    2    2     2     3     3     3\n [8,]    2    2    2    2    2    2    2    0    2     2     3     3     3\n [9,]    2    2    2    2    2    2    2    2    0     2     3     3     3\n[10,]    2    2    2    2    2    2    2    2    2     0     3     3     3\n[11,]    3    3    3    3    3    3    3    3    3     3     0     2     2\n[12,]    3    3    3    3    3    3    3    3    3     3     2     0     2\n[13,]    3    3    3    3    3    3    3    3    3     3     2     2     0\n[14,]    3    3    3    3    3    3    3    3    3     3     2     2     2\n[15,]    3    3    3    3    3    3    3    3    3     3     2     2     2\n[16,]    3    3    3    3    3    3    3    3    3     3     2     2     2\n[17,]    3    3    3    3    3    3    3    3    3     3     2     2     2\n[18,]    3    3    3    3    3    3    3    3    3     3     2     2     2\n[19,]    3    3    3    3    3    3    3    3    3     3     2     1     2\n[20,]    1    1    1    1    1    1    1    1    1     1     2     2     2\n[21,]    3    3    3    3    3    3    3    1    3     3     4     4     4\n[22,]    3    3    3    3    3    3    3    1    3     3     4     4     4\n[23,]    3    3    3    3    3    3    3    1    3     3     4     4     4\n[24,]    3    3    3    3    3    3    3    1    3     3     4     4     4\n[25,]    3    3    3    3    3    3    3    1    3     3     4     4     4\n[26,]    4    4    4    4    4    4    4    4    4     4     3     2     3\n[27,]    4    4    4    4    4    4    4    4    4     4     3     2     3\n[28,]    4    4    4    4    4    4    4    4    4     4     3     2     3\n[29,]    4    4    4    4    4    4    4    4    4     4     3     2     3\n[30,]    4    4    4    4    4    4    4    4    4     4     3     2     3\n[31,]    4    4    4    4    4    4    4    4    4     4     3     2     3\n[32,]    4    4    4    4    4    4    4    4    4     4     3     2     3\n[33,]    4    4    4    4    4    4    4    4    4     4     3     2     3\n[34,]    5    5    5    5    5    5    5    5    5     5     4     2     4\n[35,]    5    5    5    5    5    5    5    5    5     5     4     2     4\n[36,]    5    5    5    5    5    5    5    5    5     5     4     2     4\n[37,]    5    5    5    5    5    5    5    5    5     5     4     2     4\n[38,]    2    2    2    2    2    2    2    2    2     2     1     1     1\n[39,]    4    4    4    4    4    4    4    4    4     4     3     1     3\n      [,14] [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22] [,23] [,24] [,25]\n [1,]     3     3     3     3     3     3     1     3     3     3     3     3\n [2,]     3     3     3     3     3     3     1     3     3     3     3     3\n [3,]     3     3     3     3     3     3     1     3     3     3     3     3\n [4,]     3     3     3     3     3     3     1     3     3     3     3     3\n [5,]     3     3     3     3     3     3     1     3     3     3     3     3\n [6,]     3     3     3     3     3     3     1     3     3     3     3     3\n [7,]     3     3     3     3     3     3     1     3     3     3     3     3\n [8,]     3     3     3     3     3     3     1     1     1     1     1     1\n [9,]     3     3     3     3     3     3     1     3     3     3     3     3\n[10,]     3     3     3     3     3     3     1     3     3     3     3     3\n[11,]     2     2     2     2     2     2     2     4     4     4     4     4\n[12,]     2     2     2     2     2     1     2     4     4     4     4     4\n[13,]     2     2     2     2     2     2     2     4     4     4     4     4\n[14,]     0     2     2     2     2     2     2     4     4     4     4     4\n[15,]     2     0     2     2     2     2     2     4     4     4     4     4\n[16,]     2     2     0     2     2     2     2     4     4     4     4     4\n[17,]     2     2     2     0     2     2     2     4     4     4     4     4\n[18,]     2     2     2     2     0     2     2     4     4     4     4     4\n[19,]     2     2     2     2     2     0     2     4     4     4     4     4\n[20,]     2     2     2     2     2     2     0     2     2     2     2     2\n[21,]     4     4     4     4     4     4     2     0     2     2     2     2\n[22,]     4     4     4     4     4     4     2     2     0     2     2     2\n[23,]     4     4     4     4     4     4     2     2     2     0     2     2\n[24,]     4     4     4     4     4     4     2     2     2     2     0     2\n[25,]     4     4     4     4     4     4     2     2     2     2     2     0\n[26,]     3     3     3     3     3     1     3     5     5     5     5     5\n[27,]     3     3     3     3     3     1     3     5     5     5     5     5\n[28,]     3     3     3     3     3     1     3     5     5     5     5     5\n[29,]     3     3     3     3     3     1     3     5     5     5     5     5\n[30,]     3     3     3     3     3     1     3     5     5     5     5     5\n[31,]     3     3     3     3     3     1     3     5     5     5     5     5\n[32,]     3     3     3     3     3     1     3     5     5     5     5     5\n[33,]     3     3     3     3     3     1     3     5     5     5     5     5\n[34,]     4     4     4     4     4     3     4     6     6     6     6     6\n[35,]     4     4     4     4     4     3     4     6     6     6     6     6\n[36,]     4     4     4     4     4     3     4     6     6     6     6     6\n[37,]     4     4     4     4     4     3     4     6     6     6     6     6\n[38,]     1     1     1     1     1     1     1     3     3     3     3     3\n[39,]     3     3     3     3     3     2     3     5     5     5     5     5\n      [,26] [,27] [,28] [,29] [,30] [,31] [,32] [,33] [,34] [,35] [,36] [,37]\n [1,]     4     4     4     4     4     4     4     4     5     5     5     5\n [2,]     4     4     4     4     4     4     4     4     5     5     5     5\n [3,]     4     4     4     4     4     4     4     4     5     5     5     5\n [4,]     4     4     4     4     4     4     4     4     5     5     5     5\n [5,]     4     4     4     4     4     4     4     4     5     5     5     5\n [6,]     4     4     4     4     4     4     4     4     5     5     5     5\n [7,]     4     4     4     4     4     4     4     4     5     5     5     5\n [8,]     4     4     4     4     4     4     4     4     5     5     5     5\n [9,]     4     4     4     4     4     4     4     4     5     5     5     5\n[10,]     4     4     4     4     4     4     4     4     5     5     5     5\n[11,]     3     3     3     3     3     3     3     3     4     4     4     4\n[12,]     2     2     2     2     2     2     2     2     2     2     2     2\n[13,]     3     3     3     3     3     3     3     3     4     4     4     4\n[14,]     3     3     3     3     3     3     3     3     4     4     4     4\n[15,]     3     3     3     3     3     3     3     3     4     4     4     4\n[16,]     3     3     3     3     3     3     3     3     4     4     4     4\n[17,]     3     3     3     3     3     3     3     3     4     4     4     4\n[18,]     3     3     3     3     3     3     3     3     4     4     4     4\n[19,]     1     1     1     1     1     1     1     1     3     3     3     3\n[20,]     3     3     3     3     3     3     3     3     4     4     4     4\n[21,]     5     5     5     5     5     5     5     5     6     6     6     6\n[22,]     5     5     5     5     5     5     5     5     6     6     6     6\n[23,]     5     5     5     5     5     5     5     5     6     6     6     6\n[24,]     5     5     5     5     5     5     5     5     6     6     6     6\n[25,]     5     5     5     5     5     5     5     5     6     6     6     6\n[26,]     0     2     2     2     2     2     2     2     4     4     4     4\n[27,]     2     0     2     2     2     2     2     2     4     4     4     4\n[28,]     2     2     0     2     2     2     2     2     4     4     4     4\n[29,]     2     2     2     0     2     2     2     2     4     4     4     4\n[30,]     2     2     2     2     0     2     2     2     4     4     4     4\n[31,]     2     2     2     2     2     0     2     2     4     4     4     4\n[32,]     2     2     2     2     2     2     0     2     4     4     4     4\n[33,]     2     2     2     2     2     2     2     0     4     4     4     4\n[34,]     4     4     4     4     4     4     4     4     0     2     2     2\n[35,]     4     4     4     4     4     4     4     4     2     0     2     2\n[36,]     4     4     4     4     4     4     4     4     2     2     0     2\n[37,]     4     4     4     4     4     4     4     4     2     2     2     0\n[38,]     2     2     2     2     2     2     2     2     3     3     3     3\n[39,]     3     3     3     3     3     3     3     3     1     1     1     1\n      [,38] [,39]\n [1,]     2     4\n [2,]     2     4\n [3,]     2     4\n [4,]     2     4\n [5,]     2     4\n [6,]     2     4\n [7,]     2     4\n [8,]     2     4\n [9,]     2     4\n[10,]     2     4\n[11,]     1     3\n[12,]     1     1\n[13,]     1     3\n[14,]     1     3\n[15,]     1     3\n[16,]     1     3\n[17,]     1     3\n[18,]     1     3\n[19,]     1     2\n[20,]     1     3\n[21,]     3     5\n[22,]     3     5\n[23,]     3     5\n[24,]     3     5\n[25,]     3     5\n[26,]     2     3\n[27,]     2     3\n[28,]     2     3\n[29,]     2     3\n[30,]     2     3\n[31,]     2     3\n[32,]     2     3\n[33,]     2     3\n[34,]     3     1\n[35,]     3     1\n[36,]     3     1\n[37,]     3     1\n[38,]     0     2\n[39,]     2     0\n```\n\n\n:::\n:::\n\n\n\n\nThis output is just like an adjacency matrix, with row and columns being the\nnetwork node IDs (`net_id` in our attributes data frame). Next we would want sum\nall the columns for each row (so adding up all the geodesics for a node), and\ndivide by the total number of nodes it can have an edge with to get the average\ngeodesic distance for that node. This gives us the average geodesic distance\nfor each node!\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# `colSums` gives us the sum of all columns for a row.\n# We subtract one from the denominator because a node cannot have a geodesic\n# distance with itself.\ncolSums(geodist(toy_network)$gdist) / (nrow(as.sociomatrix(toy_network)) - 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] 3.131579 3.131579 3.131579 3.131579 3.131579 3.131579 3.131579 2.868421\n [9] 3.131579 3.131579 2.947368 2.447368 2.947368 2.947368 2.947368 2.947368\n[17] 2.947368 2.947368 2.368421 2.157895 3.842105 3.842105 3.842105 3.842105\n[25] 3.842105 3.342105 3.342105 3.342105 3.342105 3.342105 3.342105 3.342105\n[33] 3.342105 4.184211 4.184211 4.184211 4.184211 1.973684 3.210526\n```\n\n\n:::\n:::\n\n\n\n\nLet's add this to our network and plot it. We'll also add color and labels so\nit's easier to see what this measure means. The red node has the longest\naverage geodesic distance, and would need to travel through the whole network\nto reach the nodes on the opposite side. Meanwhile, the blue node has the\nsmallest average geodesic distance because it is located near the middle of the\nnetwork.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Add mean geodesic distance to network object\ntoy_network%v%\"mean_distance\" =\n  (colSums(geodist(toy_network)$gdist))/(nrow(as.sociomatrix(toy_network)) - 1)\n\n# Set all node colors in visNetwork to grey as default\ntoy_attributes$color = \"grey\"\n\n# Add label as geodesic distance, rounding to 3 digits\ntoy_attributes$label = round(toy_network%v%\"mean_distance\", 3)\n\n# Replace min average geodesic with blue, max with red\ntoy_attributes$color[which(toy_network%v%\"mean_distance\" == max(toy_network%v%\"mean_distance\"))] = \"red\"\ntoy_attributes$color[which(toy_network%v%\"mean_distance\" == min(toy_network%v%\"mean_distance\"))] = \"blue\"\n\n# Make sure edges are grey too\ntoy_edgelist$color = \"grey\"\n\n# Plot\nvisNetwork(toy_attributes, toy_edgelist, main = \"Geodesic Example\") %>%\n  visInteraction(zoomView = FALSE)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"visNetwork html-widget html-fill-item\" id=\"htmlwidget-24d8e49bf4a8c16115bd\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-24d8e49bf4a8c16115bd\">{\"x\":{\"nodes\":{\"id\":[\"028f5d1f351d38cd6553ab4674b19725d5ea3d3c\",\"032a3c6dec4cd50ce32fee61dc9730ad189e8fc2\",\"10aac473720a660f85718ccc3128ba5af3f5a6b1\",\"13a96378c480a712cfcdd4d22c25b760e3ca592a\",\"19d5b2694036f6fab966564c1c44bc74330f22c2\",\"1ae1327030b801f0046278d197378603b51de4b7\",\"1d44d751ddd605060dfd40ac036cce9180094d50\",\"22d9da03c847511ef453a00333339356c717ad0c\",\"258f00e649e6a452acb67cb9297c88820c05e2a7\",\"271c4ffb63aed6f306b27b5ce7b06fb6c76a903c\",\"3518c5c116d54dc150261f6578f31246fe4c28dd\",\"387d6acd079ce68c66f897287488fcd06f924ac4\",\"3a25d9f807104eb853e65634a29470219645852f\",\"3fa2cb5f2b104e01efc48bbb4fe256d657d3b6ab\",\"3fe579b0c16b93755fd8fe17fafb93a726037966\",\"42dbc8f81531a061a9cf0f7795b3ee411d2338cc\",\"486806b0eac5f2fcdb18231cf6920c7efad072ef\",\"4ca649370bef97f7369166806bad38982028c8be\",\"4da91f8e74eb72d8a7fc68cc6ff87420817184d8\",\"56b6b91cce70132c3f077e22a603e6b8bbe64e8d\",\"56fd67c7167c26a5aa4aa3e81513288facd80978\",\"5737a840aa867025dcb506f24cb5546f16b4d777\",\"5bb9bc3353e4bf9160eb6c2e44525be7ba100b88\",\"5e6f8d1471d06ebcbb895faff1a2f4301c7997c9\",\"6209ec719a337e397e5e24bc355307a079f2b0c0\",\"af965b068422ab7676986a66bb5b74c6984ab640\",\"b33f00bd1109e1ae3ffa757d0aef0a25942f2ba3\",\"b35ee0f6de6f5364527d73a2a9e92aeb71ffd2be\",\"b7f53186c0ea534a9c388824fd159410cb62c61b\",\"bad649b4f60a51869edde3c2c19eacefe89c616f\",\"bb7412e10348d8832276ade031e81861f379ef03\",\"c0ff15d535015a30d3b9896acf311792c01bfb52\",\"c234aa0c19d2695fe17e2c0a1c40a993bf03a641\",\"c2b73e24c0e52426a804d75948ec994e72bb4532\",\"c42df00e5578237fffabcdb223fe114adeff33cf\",\"c54ab7a0c0184e2cf9dfca1f7d2b80bfe0ac202f\",\"c88d89b2b89d8f771cfca6376498d7f1668fb7ec\",\"nezuko\",\"the rat from ratatouille\"],\"year\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,2,5],\"color\":[\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"red\",\"red\",\"red\",\"red\",\"blue\",\"grey\"],\"net_id\":[1,2,3,4,5,6,7,8,9,10,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,55,56,57,58,59,60,61,62,63,64,65,66,88,92],\"title\":[\"028f5d1f351d38cd6553ab4674b19725d5ea3d3c\",\"032a3c6dec4cd50ce32fee61dc9730ad189e8fc2\",\"10aac473720a660f85718ccc3128ba5af3f5a6b1\",\"13a96378c480a712cfcdd4d22c25b760e3ca592a\",\"19d5b2694036f6fab966564c1c44bc74330f22c2\",\"1ae1327030b801f0046278d197378603b51de4b7\",\"1d44d751ddd605060dfd40ac036cce9180094d50\",\"22d9da03c847511ef453a00333339356c717ad0c\",\"258f00e649e6a452acb67cb9297c88820c05e2a7\",\"271c4ffb63aed6f306b27b5ce7b06fb6c76a903c\",\"3518c5c116d54dc150261f6578f31246fe4c28dd\",\"387d6acd079ce68c66f897287488fcd06f924ac4\",\"3a25d9f807104eb853e65634a29470219645852f\",\"3fa2cb5f2b104e01efc48bbb4fe256d657d3b6ab\",\"3fe579b0c16b93755fd8fe17fafb93a726037966\",\"42dbc8f81531a061a9cf0f7795b3ee411d2338cc\",\"486806b0eac5f2fcdb18231cf6920c7efad072ef\",\"4ca649370bef97f7369166806bad38982028c8be\",\"4da91f8e74eb72d8a7fc68cc6ff87420817184d8\",\"56b6b91cce70132c3f077e22a603e6b8bbe64e8d\",\"56fd67c7167c26a5aa4aa3e81513288facd80978\",\"5737a840aa867025dcb506f24cb5546f16b4d777\",\"5bb9bc3353e4bf9160eb6c2e44525be7ba100b88\",\"5e6f8d1471d06ebcbb895faff1a2f4301c7997c9\",\"6209ec719a337e397e5e24bc355307a079f2b0c0\",\"af965b068422ab7676986a66bb5b74c6984ab640\",\"b33f00bd1109e1ae3ffa757d0aef0a25942f2ba3\",\"b35ee0f6de6f5364527d73a2a9e92aeb71ffd2be\",\"b7f53186c0ea534a9c388824fd159410cb62c61b\",\"bad649b4f60a51869edde3c2c19eacefe89c616f\",\"bb7412e10348d8832276ade031e81861f379ef03\",\"c0ff15d535015a30d3b9896acf311792c01bfb52\",\"c234aa0c19d2695fe17e2c0a1c40a993bf03a641\",\"c2b73e24c0e52426a804d75948ec994e72bb4532\",\"c42df00e5578237fffabcdb223fe114adeff33cf\",\"c54ab7a0c0184e2cf9dfca1f7d2b80bfe0ac202f\",\"c88d89b2b89d8f771cfca6376498d7f1668fb7ec\",\"nezuko\",\"the rat from ratatouille\"],\"value\":[4,4,4,4,4,4,4,144,4,4,4,36,4,4,4,4,4,4,400,484,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,400,100],\"label\":[3.132,3.132,3.132,3.132,3.132,3.132,3.132,2.868,3.132,3.132,2.947,2.447,2.947,2.947,2.947,2.947,2.947,2.947,2.368,2.158,3.842,3.842,3.842,3.842,3.842,3.342,3.342,3.342,3.342,3.342,3.342,3.342,3.342,4.184,4.184,4.184,4.184,1.974,3.211]},\"edges\":{\"from\":[\"nezuko\",\"nezuko\",\"nezuko\",\"nezuko\",\"nezuko\",\"the rat from ratatouille\",\"the rat from ratatouille\",\"the rat from ratatouille\",\"the rat from ratatouille\",\"the rat from ratatouille\"],\"to\":[\"56b6b91cce70132c3f077e22a603e6b8bbe64e8d\",\"486806b0eac5f2fcdb18231cf6920c7efad072ef\",\"13a96378c480a712cfcdd4d22c25b760e3ca592a\",\"3518c5c116d54dc150261f6578f31246fe4c28dd\",\"c42df00e5578237fffabcdb223fe114adeff33cf\",\"3fe579b0c16b93755fd8fe17fafb93a726037966\",\"b35ee0f6de6f5364527d73a2a9e92aeb71ffd2be\",\"3a25d9f807104eb853e65634a29470219645852f\",\"032a3c6dec4cd50ce32fee61dc9730ad189e8fc2\",\"c2b73e24c0e52426a804d75948ec994e72bb4532\"],\"color\":[\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\"]},\"nodesToDataframe\":true,\"edgesToDataframe\":true,\"options\":{\"width\":\"100%\",\"height\":\"100%\",\"nodes\":{\"shape\":\"dot\"},\"manipulation\":{\"enabled\":false},\"interaction\":{\"zoomView\":false,\"zoomSpeed\":1}},\"groups\":null,\"width\":null,\"height\":null,\"idselection\":{\"enabled\":false},\"byselection\":{\"enabled\":false},\"main\":{\"text\":\"Geodesic Example\",\"style\":\"font-family:Georgia, Times New Roman, Times, serif;font-weight:bold;font-size:20px;text-align:center;\"},\"submain\":null,\"footer\":null,\"background\":\"rgba(0, 0, 0, 0)\",\"tooltipStay\":300,\"tooltipStyle\":\"position: fixed;visibility:hidden;padding: 5px;white-space: nowrap;font-family: verdana;font-size:14px;font-color:#000000;background-color: #f5f4ed;-moz-border-radius: 3px;-webkit-border-radius: 3px;border-radius: 3px;border: 1px solid #808074;box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\nNote that while there is a correlation between degree counts (node size) and\nmean geodesic distance, one does not cause the other. This is our first\ninstance of how network structure, not node attributes, can inform us about the\nnodes in a network. Essentially, looking at the network as a whole can tell us\nthings about the people in it that is lost if we look only at individuals.\n\n### Centrality\n\nCentrality scores encompass a wide range of measures computed at the node\nlevel. Each tries to understand the importance of a single node within the\nstructure of a network by looking at the nodes connection patterns to other\nnodes. Any centrality measure can be used to create a network level\ncentralization score like we discussed above. We will go through some of the\ncommon centrality measures here, but know there are several more we will not\ncover.\n\n#### Betweenness Centrality\n\n**Betweenness centrality** is one of the most common centrality measures. It\ntries to calculate the extent to which a node acts as a gatekeeper or *broker*\nin the network. A broker bridges two otherwise disconnected segments in a\nnetwork. If there are two parts of a network that would otherwise be broken\napart if a node was removed, they would have a high betweenness centrality. The\nfragmenting of a network is not a prerequisite however, simply acting as an\neffective \"shortcut\" in a network can also raise a node's betweenness\ncentrality. Betweenness is calculated using geodesic distances, and gives a\nhigher score to nodes that lie on more geodesic paths.\n\nThe next network plot shows the size of nodes as their degree, with a label\nshowing their betweenness centrality score. Centrality score are usually\nnormalized such that their scores all sum to 1. This way, you can easily\ncompare nodes within the network (but not between networks), and understand how\nnodes relate to each other structurally. It is possible for a node to have a 0\nbetweenness score if no geodesic distances pass through them.\n\nLike last time I've colored the nodes so that the node with the highest\nbetweenness centrality is red, while the lowest is blue. Compared to distance\nhowever, it is considered advantageous to have a *high* betweenness centrality,\nas this means that nodes acts as a gatekeeper in the network, which can be a\npowerful position. Contrast this with having a *low* mean distance, which meant\nyou were closer to all other nodes.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Add eigenvector centrality to network object as \"norm_betweenness\".\n#\n# We also tell it we are treating our data as undirected (\"graph\"), rather than\n# the default directed (\"digraph\"), same with `cmode = \"undirected\"`.\n#\n# We also say we want a normalized (0-1, sum to 1) score using `rescale =\n# TRUE`.\n\ntoy_network%v%\"norm_betweenness\" =\n  betweenness(\n    dat = toy_network, gmode = \"graph\", rescale = TRUE, cmode = \"undirected\"\n  )\n\n# Add label as geodesic distance, rounding to 3 digits\ntoy_attributes$label = round(toy_network%v%\"norm_betweenness\", 3)\n\n# Reset all nodes to grey\ntoy_attributes$color = c(\"grey\")\n\n# Replace min average geodesic with blue, max with red\ntoy_attributes$color[which(toy_network%v%\"norm_betweenness\" == max(toy_network%v%\"norm_betweenness\"))] = \"red\"\ntoy_attributes$color[which(toy_network%v%\"norm_betweenness\" == min(toy_network%v%\"norm_betweenness\"))] = \"blue\"\n\n# Plot\nvisNetwork(toy_attributes, toy_edgelist, main = \"Betweenness Centrality Example\") %>% visInteraction(zoomView = FALSE)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"visNetwork html-widget html-fill-item\" id=\"htmlwidget-cb919e0452a91c6e6eff\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-cb919e0452a91c6e6eff\">{\"x\":{\"nodes\":{\"id\":[\"028f5d1f351d38cd6553ab4674b19725d5ea3d3c\",\"032a3c6dec4cd50ce32fee61dc9730ad189e8fc2\",\"10aac473720a660f85718ccc3128ba5af3f5a6b1\",\"13a96378c480a712cfcdd4d22c25b760e3ca592a\",\"19d5b2694036f6fab966564c1c44bc74330f22c2\",\"1ae1327030b801f0046278d197378603b51de4b7\",\"1d44d751ddd605060dfd40ac036cce9180094d50\",\"22d9da03c847511ef453a00333339356c717ad0c\",\"258f00e649e6a452acb67cb9297c88820c05e2a7\",\"271c4ffb63aed6f306b27b5ce7b06fb6c76a903c\",\"3518c5c116d54dc150261f6578f31246fe4c28dd\",\"387d6acd079ce68c66f897287488fcd06f924ac4\",\"3a25d9f807104eb853e65634a29470219645852f\",\"3fa2cb5f2b104e01efc48bbb4fe256d657d3b6ab\",\"3fe579b0c16b93755fd8fe17fafb93a726037966\",\"42dbc8f81531a061a9cf0f7795b3ee411d2338cc\",\"486806b0eac5f2fcdb18231cf6920c7efad072ef\",\"4ca649370bef97f7369166806bad38982028c8be\",\"4da91f8e74eb72d8a7fc68cc6ff87420817184d8\",\"56b6b91cce70132c3f077e22a603e6b8bbe64e8d\",\"56fd67c7167c26a5aa4aa3e81513288facd80978\",\"5737a840aa867025dcb506f24cb5546f16b4d777\",\"5bb9bc3353e4bf9160eb6c2e44525be7ba100b88\",\"5e6f8d1471d06ebcbb895faff1a2f4301c7997c9\",\"6209ec719a337e397e5e24bc355307a079f2b0c0\",\"af965b068422ab7676986a66bb5b74c6984ab640\",\"b33f00bd1109e1ae3ffa757d0aef0a25942f2ba3\",\"b35ee0f6de6f5364527d73a2a9e92aeb71ffd2be\",\"b7f53186c0ea534a9c388824fd159410cb62c61b\",\"bad649b4f60a51869edde3c2c19eacefe89c616f\",\"bb7412e10348d8832276ade031e81861f379ef03\",\"c0ff15d535015a30d3b9896acf311792c01bfb52\",\"c234aa0c19d2695fe17e2c0a1c40a993bf03a641\",\"c2b73e24c0e52426a804d75948ec994e72bb4532\",\"c42df00e5578237fffabcdb223fe114adeff33cf\",\"c54ab7a0c0184e2cf9dfca1f7d2b80bfe0ac202f\",\"c88d89b2b89d8f771cfca6376498d7f1668fb7ec\",\"nezuko\",\"the rat from ratatouille\"],\"year\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,2,5],\"color\":[\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"grey\",\"blue\",\"blue\",\"blue\",\"grey\",\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"grey\",\"grey\",\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"red\",\"grey\"],\"net_id\":[1,2,3,4,5,6,7,8,9,10,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,55,56,57,58,59,60,61,62,63,64,65,66,88,92],\"title\":[\"028f5d1f351d38cd6553ab4674b19725d5ea3d3c\",\"032a3c6dec4cd50ce32fee61dc9730ad189e8fc2\",\"10aac473720a660f85718ccc3128ba5af3f5a6b1\",\"13a96378c480a712cfcdd4d22c25b760e3ca592a\",\"19d5b2694036f6fab966564c1c44bc74330f22c2\",\"1ae1327030b801f0046278d197378603b51de4b7\",\"1d44d751ddd605060dfd40ac036cce9180094d50\",\"22d9da03c847511ef453a00333339356c717ad0c\",\"258f00e649e6a452acb67cb9297c88820c05e2a7\",\"271c4ffb63aed6f306b27b5ce7b06fb6c76a903c\",\"3518c5c116d54dc150261f6578f31246fe4c28dd\",\"387d6acd079ce68c66f897287488fcd06f924ac4\",\"3a25d9f807104eb853e65634a29470219645852f\",\"3fa2cb5f2b104e01efc48bbb4fe256d657d3b6ab\",\"3fe579b0c16b93755fd8fe17fafb93a726037966\",\"42dbc8f81531a061a9cf0f7795b3ee411d2338cc\",\"486806b0eac5f2fcdb18231cf6920c7efad072ef\",\"4ca649370bef97f7369166806bad38982028c8be\",\"4da91f8e74eb72d8a7fc68cc6ff87420817184d8\",\"56b6b91cce70132c3f077e22a603e6b8bbe64e8d\",\"56fd67c7167c26a5aa4aa3e81513288facd80978\",\"5737a840aa867025dcb506f24cb5546f16b4d777\",\"5bb9bc3353e4bf9160eb6c2e44525be7ba100b88\",\"5e6f8d1471d06ebcbb895faff1a2f4301c7997c9\",\"6209ec719a337e397e5e24bc355307a079f2b0c0\",\"af965b068422ab7676986a66bb5b74c6984ab640\",\"b33f00bd1109e1ae3ffa757d0aef0a25942f2ba3\",\"b35ee0f6de6f5364527d73a2a9e92aeb71ffd2be\",\"b7f53186c0ea534a9c388824fd159410cb62c61b\",\"bad649b4f60a51869edde3c2c19eacefe89c616f\",\"bb7412e10348d8832276ade031e81861f379ef03\",\"c0ff15d535015a30d3b9896acf311792c01bfb52\",\"c234aa0c19d2695fe17e2c0a1c40a993bf03a641\",\"c2b73e24c0e52426a804d75948ec994e72bb4532\",\"c42df00e5578237fffabcdb223fe114adeff33cf\",\"c54ab7a0c0184e2cf9dfca1f7d2b80bfe0ac202f\",\"c88d89b2b89d8f771cfca6376498d7f1668fb7ec\",\"nezuko\",\"the rat from ratatouille\"],\"value\":[4,4,4,4,4,4,4,144,4,4,4,36,4,4,4,4,4,4,400,484,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,400,100],\"label\":[0,0,0,0,0,0,0,0.105,0,0,0,0.099,0,0,0,0,0,0,0.161,0.262,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.287,0.08500000000000001]},\"edges\":{\"from\":[\"nezuko\",\"nezuko\",\"nezuko\",\"nezuko\",\"nezuko\",\"the rat from ratatouille\",\"the rat from ratatouille\",\"the rat from ratatouille\",\"the rat from ratatouille\",\"the rat from ratatouille\"],\"to\":[\"56b6b91cce70132c3f077e22a603e6b8bbe64e8d\",\"486806b0eac5f2fcdb18231cf6920c7efad072ef\",\"13a96378c480a712cfcdd4d22c25b760e3ca592a\",\"3518c5c116d54dc150261f6578f31246fe4c28dd\",\"c42df00e5578237fffabcdb223fe114adeff33cf\",\"3fe579b0c16b93755fd8fe17fafb93a726037966\",\"b35ee0f6de6f5364527d73a2a9e92aeb71ffd2be\",\"3a25d9f807104eb853e65634a29470219645852f\",\"032a3c6dec4cd50ce32fee61dc9730ad189e8fc2\",\"c2b73e24c0e52426a804d75948ec994e72bb4532\"],\"color\":[\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\"]},\"nodesToDataframe\":true,\"edgesToDataframe\":true,\"options\":{\"width\":\"100%\",\"height\":\"100%\",\"nodes\":{\"shape\":\"dot\"},\"manipulation\":{\"enabled\":false},\"interaction\":{\"zoomView\":false,\"zoomSpeed\":1}},\"groups\":null,\"width\":null,\"height\":null,\"idselection\":{\"enabled\":false},\"byselection\":{\"enabled\":false},\"main\":{\"text\":\"Betweenness Centrality Example\",\"style\":\"font-family:Georgia, Times New Roman, Times, serif;font-weight:bold;font-size:20px;text-align:center;\"},\"submain\":null,\"footer\":null,\"background\":\"rgba(0, 0, 0, 0)\",\"tooltipStay\":300,\"tooltipStyle\":\"position: fixed;visibility:hidden;padding: 5px;white-space: nowrap;font-family: verdana;font-size:14px;font-color:#000000;background-color: #f5f4ed;-moz-border-radius: 3px;-webkit-border-radius: 3px;border-radius: 3px;border: 1px solid #808074;box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n#### Eigenvector Centrality\n\n**Eigenvector Centrality** is commonly known as a measure of \"popular friends.\"\nRather than looking at the network position of a node, it looks at the network\npositions of nodes connected to it. Nodes with a high eigenvector score will be\nconnected to nodes more prominent in the network. Nodes with low degree can\nhave high eigenvector scores if they are connected to important nodes. In real\nlife networks this can be interpreted as being close to influential others in a\nnetwork.\n\nI've colored the nodes so that the node with the highest eigenvector centrality\nis red, while the lowest is blue. It is considered advantageous to have a\n*high* eigenvector centrality, as this means you are well connected to other\npopular nodes.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Add eigenvector centrality to network object as \"evc\".\n#\n# We also tell it we are treating our data as undirected (\"graph\"), rather than\n# the default directed (\"digraph\").\n#\n# We also say we want a normalized (0-1, sum to 1) score using `rescale =\n# TRUE`.\ntoy_network%v%\"evc\" = evcent(toy_network, gmode = \"graph\", rescale = TRUE)\n\n# Add label as geodesic distance, rounding to 3 digits\ntoy_attributes$label = round(toy_network%v%\"evc\", 3)\n\n# Reset all nodes to grey\ntoy_attributes$color = \"grey\"\n\n# Replace min average geodesic with blue, max with red\ntoy_attributes$color[which(toy_network%v%\"evc\" == max(toy_network%v%\"evc\"))] = \"red\"\ntoy_attributes$color[which(toy_network%v%\"evc\" == min(toy_network%v%\"evc\"))] = \"blue\"\n\n# Plot\nvisNetwork(\n  toy_attributes, toy_edgelist, main = \"Eigenvector Centrality Example\"\n) %>% visInteraction(zoomView = FALSE)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"visNetwork html-widget html-fill-item\" id=\"htmlwidget-f56909a64c2d47c15b64\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-f56909a64c2d47c15b64\">{\"x\":{\"nodes\":{\"id\":[\"028f5d1f351d38cd6553ab4674b19725d5ea3d3c\",\"032a3c6dec4cd50ce32fee61dc9730ad189e8fc2\",\"10aac473720a660f85718ccc3128ba5af3f5a6b1\",\"13a96378c480a712cfcdd4d22c25b760e3ca592a\",\"19d5b2694036f6fab966564c1c44bc74330f22c2\",\"1ae1327030b801f0046278d197378603b51de4b7\",\"1d44d751ddd605060dfd40ac036cce9180094d50\",\"22d9da03c847511ef453a00333339356c717ad0c\",\"258f00e649e6a452acb67cb9297c88820c05e2a7\",\"271c4ffb63aed6f306b27b5ce7b06fb6c76a903c\",\"3518c5c116d54dc150261f6578f31246fe4c28dd\",\"387d6acd079ce68c66f897287488fcd06f924ac4\",\"3a25d9f807104eb853e65634a29470219645852f\",\"3fa2cb5f2b104e01efc48bbb4fe256d657d3b6ab\",\"3fe579b0c16b93755fd8fe17fafb93a726037966\",\"42dbc8f81531a061a9cf0f7795b3ee411d2338cc\",\"486806b0eac5f2fcdb18231cf6920c7efad072ef\",\"4ca649370bef97f7369166806bad38982028c8be\",\"4da91f8e74eb72d8a7fc68cc6ff87420817184d8\",\"56b6b91cce70132c3f077e22a603e6b8bbe64e8d\",\"56fd67c7167c26a5aa4aa3e81513288facd80978\",\"5737a840aa867025dcb506f24cb5546f16b4d777\",\"5bb9bc3353e4bf9160eb6c2e44525be7ba100b88\",\"5e6f8d1471d06ebcbb895faff1a2f4301c7997c9\",\"6209ec719a337e397e5e24bc355307a079f2b0c0\",\"af965b068422ab7676986a66bb5b74c6984ab640\",\"b33f00bd1109e1ae3ffa757d0aef0a25942f2ba3\",\"b35ee0f6de6f5364527d73a2a9e92aeb71ffd2be\",\"b7f53186c0ea534a9c388824fd159410cb62c61b\",\"bad649b4f60a51869edde3c2c19eacefe89c616f\",\"bb7412e10348d8832276ade031e81861f379ef03\",\"c0ff15d535015a30d3b9896acf311792c01bfb52\",\"c234aa0c19d2695fe17e2c0a1c40a993bf03a641\",\"c2b73e24c0e52426a804d75948ec994e72bb4532\",\"c42df00e5578237fffabcdb223fe114adeff33cf\",\"c54ab7a0c0184e2cf9dfca1f7d2b80bfe0ac202f\",\"c88d89b2b89d8f771cfca6376498d7f1668fb7ec\",\"nezuko\",\"the rat from ratatouille\"],\"year\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,2,5],\"color\":[\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"blue\",\"blue\",\"blue\",\"blue\",\"red\",\"grey\"],\"net_id\":[1,2,3,4,5,6,7,8,9,10,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,55,56,57,58,59,60,61,62,63,64,65,66,88,92],\"title\":[\"028f5d1f351d38cd6553ab4674b19725d5ea3d3c\",\"032a3c6dec4cd50ce32fee61dc9730ad189e8fc2\",\"10aac473720a660f85718ccc3128ba5af3f5a6b1\",\"13a96378c480a712cfcdd4d22c25b760e3ca592a\",\"19d5b2694036f6fab966564c1c44bc74330f22c2\",\"1ae1327030b801f0046278d197378603b51de4b7\",\"1d44d751ddd605060dfd40ac036cce9180094d50\",\"22d9da03c847511ef453a00333339356c717ad0c\",\"258f00e649e6a452acb67cb9297c88820c05e2a7\",\"271c4ffb63aed6f306b27b5ce7b06fb6c76a903c\",\"3518c5c116d54dc150261f6578f31246fe4c28dd\",\"387d6acd079ce68c66f897287488fcd06f924ac4\",\"3a25d9f807104eb853e65634a29470219645852f\",\"3fa2cb5f2b104e01efc48bbb4fe256d657d3b6ab\",\"3fe579b0c16b93755fd8fe17fafb93a726037966\",\"42dbc8f81531a061a9cf0f7795b3ee411d2338cc\",\"486806b0eac5f2fcdb18231cf6920c7efad072ef\",\"4ca649370bef97f7369166806bad38982028c8be\",\"4da91f8e74eb72d8a7fc68cc6ff87420817184d8\",\"56b6b91cce70132c3f077e22a603e6b8bbe64e8d\",\"56fd67c7167c26a5aa4aa3e81513288facd80978\",\"5737a840aa867025dcb506f24cb5546f16b4d777\",\"5bb9bc3353e4bf9160eb6c2e44525be7ba100b88\",\"5e6f8d1471d06ebcbb895faff1a2f4301c7997c9\",\"6209ec719a337e397e5e24bc355307a079f2b0c0\",\"af965b068422ab7676986a66bb5b74c6984ab640\",\"b33f00bd1109e1ae3ffa757d0aef0a25942f2ba3\",\"b35ee0f6de6f5364527d73a2a9e92aeb71ffd2be\",\"b7f53186c0ea534a9c388824fd159410cb62c61b\",\"bad649b4f60a51869edde3c2c19eacefe89c616f\",\"bb7412e10348d8832276ade031e81861f379ef03\",\"c0ff15d535015a30d3b9896acf311792c01bfb52\",\"c234aa0c19d2695fe17e2c0a1c40a993bf03a641\",\"c2b73e24c0e52426a804d75948ec994e72bb4532\",\"c42df00e5578237fffabcdb223fe114adeff33cf\",\"c54ab7a0c0184e2cf9dfca1f7d2b80bfe0ac202f\",\"c88d89b2b89d8f771cfca6376498d7f1668fb7ec\",\"nezuko\",\"the rat from ratatouille\"],\"value\":[4,4,4,4,4,4,4,144,4,4,4,36,4,4,4,4,4,4,400,484,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,400,100],\"label\":[0.022,0.022,0.022,0.022,0.022,0.022,0.022,0.032,0.022,0.022,0.027,0.053,0.027,0.027,0.027,0.027,0.027,0.027,0.08500000000000001,0.08599999999999999,0.008,0.008,0.008,0.008,0.008,0.022,0.022,0.022,0.022,0.022,0.022,0.022,0.022,0.005,0.005,0.005,0.005,0.105,0.018]},\"edges\":{\"from\":[\"nezuko\",\"nezuko\",\"nezuko\",\"nezuko\",\"nezuko\",\"the rat from ratatouille\",\"the rat from ratatouille\",\"the rat from ratatouille\",\"the rat from ratatouille\",\"the rat from ratatouille\"],\"to\":[\"56b6b91cce70132c3f077e22a603e6b8bbe64e8d\",\"486806b0eac5f2fcdb18231cf6920c7efad072ef\",\"13a96378c480a712cfcdd4d22c25b760e3ca592a\",\"3518c5c116d54dc150261f6578f31246fe4c28dd\",\"c42df00e5578237fffabcdb223fe114adeff33cf\",\"3fe579b0c16b93755fd8fe17fafb93a726037966\",\"b35ee0f6de6f5364527d73a2a9e92aeb71ffd2be\",\"3a25d9f807104eb853e65634a29470219645852f\",\"032a3c6dec4cd50ce32fee61dc9730ad189e8fc2\",\"c2b73e24c0e52426a804d75948ec994e72bb4532\"],\"color\":[\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\",\"grey\"]},\"nodesToDataframe\":true,\"edgesToDataframe\":true,\"options\":{\"width\":\"100%\",\"height\":\"100%\",\"nodes\":{\"shape\":\"dot\"},\"manipulation\":{\"enabled\":false},\"interaction\":{\"zoomView\":false,\"zoomSpeed\":1}},\"groups\":null,\"width\":null,\"height\":null,\"idselection\":{\"enabled\":false},\"byselection\":{\"enabled\":false},\"main\":{\"text\":\"Eigenvector Centrality Example\",\"style\":\"font-family:Georgia, Times New Roman, Times, serif;font-weight:bold;font-size:20px;text-align:center;\"},\"submain\":null,\"footer\":null,\"background\":\"rgba(0, 0, 0, 0)\",\"tooltipStay\":300,\"tooltipStyle\":\"position: fixed;visibility:hidden;padding: 5px;white-space: nowrap;font-family: verdana;font-size:14px;font-color:#000000;background-color: #f5f4ed;-moz-border-radius: 3px;-webkit-border-radius: 3px;border-radius: 3px;border: 1px solid #808074;box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n## Network Workflow\n\nWe have been taking our analyses one step at a time and plotting them. This is\nuseful for learning, but slightly annoying in practice. Below I've aggregated\nhow you would actually run analyses in practice so you can refer to it later.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Data load\ntoy_edgelist = read.csv(\n  \"data/toy_edgelist.csv\", header = TRUE, stringsAsFactors = FALSE\n)\ntoy_attributes = read.csv(\n  \"data/toy_attributes.csv\", header = TRUE, stringsAsFactors = FALSE\n)\n\n# Make a network\n#\n# Sort your attributes frame alphabetically. Super important!\ntoy_attributes = toy_attributes[order(toy_attributes$id), ]\n\n# Make network!\ntoy_network_total = network(toy_edgelist, directed = FALSE)\n\n# Largest component\n#\n# Find what nodes are part of the largest component\ntoy_network_total%v%\"lc\" = component.largest(toy_network_total)\n\n# Delete those nodes that are not in the component\nin_lc = toy_network_total%v%\"lc\"\ntoy_network = delete.vertices(toy_network_total, which(!in_lc))\n\n# In our data frames\ntoy_attributes = toy_attributes[\n  toy_attributes$id %in% as.character(toy_network_total%v%\"vertex.names\"),\n]\n\nin_lc = toy_edgelist$to %in% toy_attributes$id |\n  toy_edgelist$from %in% toy_attributes$id\ntoy_edgelist = toy_edgelist[which(in_lc),]\n\n# Generate measures\n\n# Degree\ntoy_network_total%v%\"degree\" = degree(toy_network_total)\n\n# Mean geodesic\ntoy_network_total%v%\"mean_distance\" =\n  (colSums(geodist(toy_network_total)$gdist)) /\n  (nrow(as.sociomatrix(toy_network_total)) - 1)\n\n# Normalized betweenness\ntoy_network_total%v%\"norm_betweenness\" = betweenness(\n  dat = toy_network_total, gmode = \"graph\", rescale = TRUE,\n  cmode = \"undirected\"\n)\n\n# Eigenvector\ntoy_network_total%v%\"evc\" = evcent(\n  toy_network_total, gmode = \"graph\", rescale = TRUE\n)\n\n# Add back to attributes data frame\n\n# Degree\ntoy_attributes$degree = toy_network_total%v%\"degree\"\n\n# Mean geodesic\ntoy_attributes$mean_distance = toy_network_total%v%\"mean_distance\"\n\n# Normalized betweenness\ntoy_attributes$norm_betweenness = toy_network_total%v%\"norm_betweenness\"\n\n## Eigenvector\ntoy_attributes$evc = toy_network_total%v%\"evc\"\n```\n:::\n\n\n\n\nFinally, we can then look at the network measures for our nodes. This data\nframe can be used for plotting or further analyses.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(toy_attributes)\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|   |id                                       | year|color | degree| mean_distance| norm_betweenness|       evc|\n|:--|:----------------------------------------|----:|:-----|------:|-------------:|----------------:|---------:|\n|22 |028f5d1f351d38cd6553ab4674b19725d5ea3d3c |   NA|NA    |      2|      3.131579|                0| 0.0218579|\n|15 |19d5b2694036f6fab966564c1c44bc74330f22c2 |   NA|NA    |      2|      3.131579|                0| 0.0218579|\n|30 |1ae1327030b801f0046278d197378603b51de4b7 |   NA|NA    |      2|      3.131579|                0| 0.0218579|\n|67 |258f00e649e6a452acb67cb9297c88820c05e2a7 |   NA|NA    |      2|      3.131579|                0| 0.0218579|\n|65 |2e9fed34d6b2d42052850b46aeaa97f9fe6542dc |   NA|NA    |      2|      3.131579|                0| 0.0218579|\n|75 |3220545023e21c80db2a4d4e10b3eb4217b90605 |   NA|NA    |      2|      3.131579|                0| 0.0218579|\n\n</div>\n:::\n:::\n\n\n\n\n## Network Tools\n\nThere are several ways to interact with network data in R. Thus far we have\nbeen using a combination of statnet for analysis and visNetwork for\nvisualization. Here we'll gloss over some other tools and what they are used\nfor. Rather than a comprehensive tutorial, this section is just meant to\nintroduce you to what tools are out there so you can investigate them further\nif you have a need for them.\n\n### Network Models\n\n#### statnet\n\nstatnet is one of the two largest network packages in R. It allows you to\ncreate network objects and generate the network measures we've been looking at\nthis far. statnet's claim to fame however is it's ability to run network\nsimulations, called *exponential random graph models (ERGMs)*. These models\nallow you to keep some aspect of a network constant and generate random\nnetworks that fit your specifications. This can help you highlight one\nstructural aspect of a network and prove that, all else being random, it is\nimportant.\n\n::: {.callout-note title=\"See also\"}\nTo learn more about ERGMs, see [@robinsIntroductionExponentialRandom2007;\n@robinsRecentDevelopmentsExponential2007]. [Learn more on the statnet\nwebsite.](https://statnet.org/)\n:::\n\n#### igraph\n\nigraph is the other big network package in R. It has more network measures than\nstatnet, but less robust simulation capabilities. While the same network\nconcepts you've learned with statnet will help you understand all networks, the\ncode syntax for igraph is different, so you can't use the two tools\ninterchangeably. Notably, some functions are named the same in statnet and\nigraph, so it is advised not to load both at the same time.\n\n::: {.callout-note title=\"See also\"}\nLearn more on [the igraph website][igraph].\n\n[igraph]: https://igraph.org/r/\n:::\n\n#### intergraph\n\nintergraph is a utility package in R to convert between statnet and igraph\nnetwork objects. This means you can prepare your data in your package of\nchoice, then convert your network and use what tools you need from the other\npackage.\n\n#### tidygraph\n\ntidygraph is a relatively new tool in R, built to use Tidyverse syntax. It can\ndo many of the same basic network analyses of the two older packages, but lacks\nthe breadth of igraph and the simulation capabilities of statnet.\n\n::: {.callout-note title=\"See also\"}\nLearn more on [the tidygraph website][tidygraph].\n\n[tidygraph]: https://tidygraph.data-imaginist.com/\n:::\n\n### Network Visualization\n\n#### Built-in\n\nWhile we avoided it today, all network packages have built in visualization\ncapabilities that can look nice if you work on it. The advantage of these is\nthat you can use the network objects themselves to pull attributes from the\nnetworks for your plots (for example, pull degree centrality from node size).\n\n#### visNetwork\n\nvisNetwork can make some nice interactive network visualizations with\nrelatively simple code. This is great for learning and for exploring networks\ninteractively. However, it does have significant downsides. For one, you have\nto keep separate data frames for your edges and attributes as it cannon run\ndirectly on network objects. Most importantly it cannot produce static network\nimages! You will most likely need more static plots than interactive ones. If\nyou can only dig deeply into one tool, this one may not be the best to\nspecialize in.\n\n#### ggraph\n\nggraph uses ggplot syntax to plot networks. There are several packages that do\nthis in various stages of development. To my understanding, ggraph is the\nmost recent incarnation still under active development.\n\n::: {.callout-note title=\"See also\"}\nLearn more on [the ggraph website][ggraph].\n\n[ggraph]: https://ggraph.data-imaginist.com/\n:::\n\n\n## References\n\n::: {#refs}\n:::\n",
    "supporting": [
      "14_network-analysis_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"../site_libs/vis-9.1.0/vis-network.min.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/vis-9.1.0/vis-network.min.js\"></script>\n<script src=\"../site_libs/visNetwork-binding-2.1.2/visNetwork.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}