{
  "hash": "1e79c41ae00093e57cfa3d28ecbc162e",
  "result": {
    "engine": "knitr",
    "markdown": "# Data Forensics\n\nThis lesson covers a variety of ways to investigate and summarize tabular data\nin order to understand the data better and identify potential problems. The\nlesson also describes how to fix some of the most common data problems.\n\n::: {.callout-note title=\"Learning Goals\" collapse=\"false\"}\nAfter this lesson, you should be able to:\n\n* Cleaning and Forensics:\n  + Explain what it means for a data set to be \"tidy\"\n  + Convert columns to appropriate data types\n  + Locate and count missing values in a data set\n  + Explain what it means for a value to be an \"outlier\"\n  + Locate and count outliers in a data set\n\n* Statistical Summaries:\n  * Explain the location statistics mean, median, and mode\n  * Explain the scale statistics range and standard deviation\n  * Apply Functions\n      + Use apply functions to compute summaries of multiple columns\n      + Use the split-apply pattern to compute grouped summaries\n:::\n\n\n## Structural Summaries & Cleaning\n\nWhenever you load a data set into R, your next step should be to investigate\nthe data's structure. This step is important because it can help you identify\nwhether:\n\n* The data was loaded correctly\n* There are structural problems with the data that will make it difficult to\n  use if they aren't fixed\n\n@sec-inspecting-data and @sec-inspecting-the-data demonstrated several\nfunctions for getting structural summaries of data. Some of these are:\n\n* `str` to get a detailed structural summary\n* `head`, `tail` to preview the data\n* `nrow`, `ncol`, `dim`, `length` to get dimension information\n* `names`, `colnames`, `rownames` to get element names\n* `class`, `typeof` to get classes and types\n\n\nLet's look at some examples using a data set collected from the classified\nadvertisements website Craigslist. The data set contains information from ads\nfor rentals in the Sacramento area. First we need to load the data set:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncl = read.csv(\"data/cl_rentals.csv\")\n```\n:::\n\n\n\n\nNow we can use the `str` function to check the classes of the columns:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(cl)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t2987 obs. of  20 variables:\n $ title       : chr  \"$1,125 / 1br - 550ft2 - 1Bedroom Prime Location -2520 S Limited Access/Gated $1125 Avail Now (2520 S St)\" \"$1,449 / 1br - 680ft2 - 1x1 with washer & dryer in unit! Move in ready! (The Phoenix/Sacramento/Folsom/SF)\" \"$1,449 / 1br - 680ft2 - 1x1 with washer & dryer in unit! Move in ready! (The Phoenix/Sacramento/Folsom/SF)\" \"$1,479 / 1br - 680ft2 - 1x1 with washer & dryer in unit! Move in ready! (The Phoenix/Sacramento/Folsom/SF)\" ...\n $ text        : chr  \"QR Code Link to This Post\\n            \\n        \\n* SEE MY OTHER MIDTOWN 1 bedroom apts-text for web site\\n*An\"| __truncated__ \"QR Code Link to This Post\\n            \\n        \\n Lease our 1x1 Apartment with Che starting at $1449+    Pric\"| __truncated__ \"QR Code Link to This Post\\n            \\n        \\n Lease our 1x1 Apartment with Che starting at $1449+    Pric\"| __truncated__ \"QR Code Link to This Post\\n            \\n        \\n Lease our 1x1 Apartment with Che starting at $1479+    Pric\"| __truncated__ ...\n $ latitude    : num  38.6 38.6 38.6 38.6 38.6 ...\n $ longitude   : num  -121 -121 -121 -121 -121 ...\n $ city        : chr  \"2520 S St\" \"The Phoenix/Sacramento/Folsom/SF\" \"The Phoenix/Sacramento/Folsom/SF\" \"The Phoenix/Sacramento/Folsom/SF\" ...\n $ date_posted : chr  \"2021-02-04 15:03:12\" \"2021-03-02 12:41:17\" \"2021-03-02 13:26:17\" \"2021-03-03 10:02:05\" ...\n $ date_updated: chr  \"2021-03-03 08:41:39\" NA NA NA ...\n $ price       : int  1125 1449 1449 1479 1414 1441 1615 1660 1877 1611 ...\n $ deleted     : logi  FALSE FALSE FALSE FALSE FALSE FALSE ...\n $ sqft        : int  550 680 680 680 680 680 816 816 916 916 ...\n $ bedrooms    : int  1 1 1 1 1 1 2 2 2 2 ...\n $ bathrooms   : num  1 1 1 1 1 1 1 1 2 2 ...\n $ pets        : chr  NA \"both\" \"both\" \"both\" ...\n $ laundry     : chr  \"shared\" \"in-unit\" \"in-unit\" \"in-unit\" ...\n $ parking     : chr  \"off-street\" \"covered\" \"covered\" \"covered\" ...\n $ craigslist  : chr  \"sacramento\" \"sacramento\" \"sacramento\" \"sacramento\" ...\n $ shp_place   : chr  \"Sacramento\" \"Sacramento\" \"Sacramento\" \"Sacramento\" ...\n $ shp_city    : chr  \"Sacramento\" \"Sacramento\" \"Sacramento\" \"Sacramento\" ...\n $ shp_state   : chr  \"CA\" \"CA\" \"CA\" \"CA\" ...\n $ shp_county  : chr  \"Sacramento\" \"Sacramento\" \"Sacramento\" \"Sacramento\" ...\n```\n\n\n:::\n:::\n\n\n\n\nOften when you load a new data set, some of the columns won't have the correct\ndata type (or class) for what you want to do. For instance, in the Craigslist\ndata, the `pets`, `laundry`, and `parking` columns all contain categorical\ndata, so they should be factors.\n\nYou can convert these columns to factors with the `factor` function from\n@sec-factors:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncl$pets = factor(cl$pets)\ncl$laundry = factor(cl$laundry)\ncl$parking = factor(cl$parking)\n```\n:::\n\n\n\n\nThere's another way we could've done this that uses only two lines of code, no\nmatter how many columns there are:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncols = c(\"pets\", \"laundry\", \"parking\")\ncl[cols] = lapply(cl[cols], factor)\n```\n:::\n\n\n\n\nWe'll learn more about the `lapply` function in @sec-apply-functions.\n\nYou can use whichever approach is more convenient and makes more sense to you.\nIf there were other columns to convert, we'd go through the same steps with the\nappropriate conversion function.\n\nR provides `as.` functions to convert to the most common data types. For\ninstance, `as.character` converts an object to a string:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx = 3.1\nclass(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"numeric\"\n```\n\n\n:::\n\n```{.r .cell-code}\ny = as.character(x)\ny\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"3.1\"\n```\n\n\n:::\n\n```{.r .cell-code}\nclass(y)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"character\"\n```\n\n\n:::\n:::\n\n\n\n\nThe `read.csv` function does a good job at identifying columns of numbers, so\nit's rarely necessary to convert columns of numbers manually. However, you may\nhave to do this for data you got some other way (rather than loading a file).\nFor instance, it's common to make these conversions when scraping data from the\nweb.\n\nIt's also a good idea to convert categorical columns into factors with the\n`factor` function, and to convert columns of dates into dates (more about this\nin the next section).\n\n\n### Dates\n\nThere several built-in functions and also many packages for date processing.\nIn particular, there are three Tidyverse packages for processing dates and\ntimes:\n\n* [lubridate][], the primary package for working with dates and times\n* [hms][], a package specifically for working with times\n* [clock][], a new package for working with dates and times\n\n[lubridate]: https://lubridate.tidyverse.org/\n[hms]: https://hms.tidyverse.org/\n[clock]: https://clock.r-lib.org/\n\nWe'll focus on the lubridate package. As always, you'll have to install the\npackage if you haven't already, and then load it:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# install.packages(\"lubridate\")\nlibrary(\"lubridate\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'lubridate'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n```\n\n\n:::\n:::\n\n\n\n\nThe most common task is to convert a string into a date or time class. For\ninstance, when you load a data set, you might have dates that look like this:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndates = c(\"Jan 10, 2021\", \"Sep 3, 2018\", \"Feb 28, 1982\")\ndates\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Jan 10, 2021\" \"Sep 3, 2018\"  \"Feb 28, 1982\"\n```\n\n\n:::\n:::\n\n\n\n\nThese are strings, so it's relatively difficult to sort the dates, do\narithmetic on them, or extract just one part (such as the year). There are\nseveral lubridate functions to automatically convert strings into dates. They\nare named with one letter for each part of the date. For instance, the dates in\nthe example have the month (m), then the day (d), and then the year (y), so we\ncan use the `mdy` function:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nresult = mdy(dates)\nresult\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"2021-01-10\" \"2018-09-03\" \"1982-02-28\"\n```\n\n\n:::\n\n```{.r .cell-code}\nclass(result)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Date\"\n```\n\n\n:::\n:::\n\n\n\n\nNotice that the dates now have class `Date`, one of R's built-in classes for\nrepresenting dates, and that they print differently. You can find a full list\nof the automatic string to date conversion functions in the lubridate\ndocumentation.\n\nOccasionally, a date string may have a format that lubridate can't convert\nautomatically. In that case, you can use the `fast_strptime` function to\ndescribe the format in detail. At a minimum, the function requires two\narguments: the vector of strings to convert and a format string.\n\nThe format string describes the format of the dates, and is based on the syntax\nof `strptime`, a function provided by many programming languages for converting\nstrings to dates (including R). In a format string, a percent sign `%` followed\nby a character is called a specification and has a special meaning. Here are a\nfew of the most useful ones:\n\n| Specification | Description      | January 29, 2015\n|:------------- |:---------------- |:----------------\n| `%Y`          | 4-digit year     | 2015\n| `%y`          | 2-digit year     | 15\n| `%m`          | 2-digit month    | 01\n| `%B`          | full month name  | January\n| `%b`          | short month name | Jan\n| `%d`          | day of month     | 29\n| `%%`          | literal %        | %\n\nYou can find a complete list in `?fast_strptime`. Other characters in the\nformat string do not have any special meaning. Write the format string so that\nit matches the format of the dates you want to convert.\n\nFor example, let's try converting an unusual time format:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nodd_time = \"6 minutes, 32 seconds after 10 o'clock\"\nfast_strptime(odd_time, \"%M minutes, %S seconds after %H o'clock\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"0-01-01 10:06:32 UTC\"\n```\n\n\n:::\n:::\n\n\n\n\nR usually represents dates with the class `Date`, and date-times with the\nclasses `POSIXct` and `POSIXlt`. The difference between the two date-time\nclasses is somewhat technical, but you can read more about it in `?POSIXlt`.\n\nThere is no built-in class to represent times alone, which is why the result in\nthe example above includes a date. Nonetheless, the hms package provides the\n`hms` class to represent times without dates.\n\nOnce you've converted a string to a date, the lubridate package provides a\nvariety of functions to get or set the parts individually. Here are a few\nexamples:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nday(result)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 10  3 28\n```\n\n\n:::\n\n```{.r .cell-code}\nmonth(result)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1 9 2\n```\n\n\n:::\n:::\n\n\n\n\nYou can find a complete list in the lubridate documentation.\n\nNow let's convert the `date_updated` column in the Craigslist data. It's always\na good idea to test your format string before saving the results back into the\ndata frame:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndates = ymd_hms(cl$date_updated)\nhead(dates)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"2021-03-03 08:41:39 UTC\" NA                       \n[3] NA                        NA                       \n[5] NA                        NA                       \n```\n\n\n:::\n:::\n\n\n\n\nThe `as.Date` function returns `NA` if conversion failed, so in this case it\nlooks like the dates were converted correctly. Now we can save the dates back\ninto the data frame.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncl$date_updated = dates\n```\n:::\n\n\n\n\n\n### Tidy Data {#sec-tidy-data}\n\nMany functions require data frames that are in **tidy** form. Before we see the\nrequirements for a data set to be tidy, we need to define or review some\nterminology from statistics.\n\nA **feature** (also called a **covariate**) is measurement of something,\nusually across multiple subjects. For example, we might decide to measure the\nheights of everyone in the class. Each person in the class is a subject, and\nthe height measurement is a feature. Features don't have to be quantitative. If\nwe also asked each person their favorite color, then favorite\ncolor would be another feature in our data set. Features are usually, but not\nalways, the columns in a tabular data set.\n\nAn **observation** is a set of features measured for a single subject or at a\nsingle time. So in the preceding example, the combined height and favorite\ncolor measurement for one student is one observation. Observations are usually,\nbut not always, the rows in a tabular data set.\n\nNow we can define what it means to be tidy. A tabular data set is tidy if and\nonly if:\n\n1. Each observation has its own row.\n2. Each feature has its own column.\n3. Each value has its own cell.\n\nThese rules ensure that all of the values are visually organized and are easy\nto access with R's built-in indexing operations. For instance, the `$` operator\ngets a column, and in a tidy data set, columns are features. The rules also\nreflect the way statisticians traditionally arrange tabular data sets.\n\nWhen you first look at a data set, think about what the observations are and\nwhat the features are. If the data set comes with documentation, it may help\nyou figure this out. Since this data set is a tidy data set, we already know\neach row is an observation and each column is a feature.\n\n@sec-reshaping-tabular-data gives examples of tidy and untidy data, as well as\nexplanations of how to make untidy data tidy.\n\n\n## Statistical Forensics\n\nAfter investigating the data's structure, it's a good idea to check some basic\nstatistical properties. This step is important because it can help you identify\nlimitations of and patterns in the data.\n\nWhich statistics are appropriate for a given feature often depends on the type\nof the feature. Recall from @sec-data-types-classes that the types\nstatisticians typically think about are:\n\n* **Categorical**\n    + **Nominal** - data separated into specific categories, with no order. For\n      example, hair color (red, brown, blonde, ...) is categorical.\n    + **Ordinal** - data separated into specific categories, with an order. For\n      example, school level (elementary, middle, high, college) is ordinal.\n* **Numerical**\n    + **Discrete** - integers, or a finite set of decimal numbers with no\n      values in between. Sometimes discrete values can also be treated as\n      ordinal. For example, month as a number (1, 2, ..., 12) is discrete.\n    + **Continuous** - decimal numbers. There are no specific categories, but\n      there is an order. For example, height in inches is numerical.\n\nThe `table` function, which was introduced in @sec-inspecting-data, is great\nfor summarizing categorical (and sometimes discrete) data. For example:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(cl$pets)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nboth cats dogs none \n2511   46   31  385 \n```\n\n\n:::\n:::\n\n\n\n\nWhat about numerical data?\n\nTwo important questions to ask about data are:\n\n1. Where is it? This is the **location** of the data.\n\n2. How spread out is it? This is the **scale** of the data.\n\nLet's use the data\n\n```r\nx = c(-2, -1, -1, -1, 0, 2, 6)\n```\n\nas an example.\n\nLocation is generally summarized with a number near the middle or center of\nthe data. A few options are:\n\n1.  **Mode** - the value that appears most frequently. The mode can be\n    calculated for any kind of data, but doesn't work well for continuous data.\n\n    For our example, the mode of `x` is -1. You can compute the mode with\n    `table`:\n\n    ```r\n    table(x)\n    ```\n\n2.  **Median** - sort the data, then find the value in the middle. The median\n    can be calculated for ordinal or numerical data.\n\n    For our example, the median is -1. Compute this with `median`:\n\n    ```r\n    median(x)\n    ```\n\n3.  **Mean** - the balancing point of the data, if a waiter was trying to\n    balance the data on a tray. The mean can only be calculated for numerical\n    data.\n\n    For our example the mean is 0.4285. Compute this with `mean`:\n\n    ```r\n    mean(x)\n    ```\n\nAdding large values to the data affects the mean more than the median:\n\n```r\ny = c(x, 100)\nmean(y)\nmedian(y)\n```\n\nBecause of this, we say that the median is **robust**.\n\nThe mean is good for getting a general idea of where the center of the data\nis, while comparing it with the median reveals whether there are any\nunusually large or small values.\n\nScale is generally summarized by a number that says how far the data is from\nthe center (mean, median, etc...). Two options are:\n\n1.  **Standard Deviation** - square root of the average squared distance to the\n    mean (the distance from a point to a mean is called a **deviation**). You\n    can think of this as approximately the average distance from a data point\n    to the mean. As a rule of thumb, most of the data will be within 3 standard\n    deviations of the mean.\n\n    You can compute the standard deviation with `sd`:\n\n    ```r\n    sd(x)\n    ```\n\n2.  **Interquartile Range** (IQR) - difference between the 75th and 25th\n    percentile. The median is the 50th **percentile** of the data; it's at the\n    middle of the sorted data. We can also consider other percentiles. For\n    instance, the 25th percentile is the value one-quarter of the way through\n    the sorted data.\n\n    **Quantile** is another word for percentile. **Quartile** specifically\n    refers to the 25th, 50th, and 75th percentiles because they separate the\n    data into four parts (hence \"quart-\").\n\n    You can compute quantiles with `quantile`, or compute the IQR directly with\n    `IQR`:\n\n    ```r\n    quantile(x)\n    \n    # IQR\n    IQR(x)\n    ```\n\nThe IQR is more robust than the standard deviation.\n\nMany of the functions for computing statistical summaries have a parameter\n`na.rm` to ignore missing values. Setting `na.rm = TRUE` is often useful when\nyou're just trying to do an initial investigation of the data. However, in a\nmore complete analysis, you should think carefully about what the missing\nvalues mean, whether they follow any patterns, and whether there are enough\nnon-missing values for statistical summaries to be good representatives of the\ndata.\n\nFinally, the `summary` function computes a detailed statistical summary of an R\nobject. For data frames, the function computes a summary of each column,\nguessing an appropriate statistic based on the column's data type.\n\n\n### Missing Values\n\nIf your data contains missing values, it's important to think about why the\nvalues are missing. Statisticians use two different terms to describe why data\nis missing:\n\n* missing at random (MAR)\n* missing not at random (MNAR) - causes bias!\n\nWhen values are **missing at random**, the cause for missingness is not related\nto any of the other features. This is rare in practice. For example, if people\nin a food survey accidentally overlook some questions.\n\nWhen values are **missing not at random**, the cause for missingness depends on\nother features. These features may or may not be in the data set. Think of this\nas a form of censorship. For example, if people in a food survey refuse to\nreport how much sugar they ate on days where they ate junk food, data is\nmissing not at random. Values MNAR can bias an analysis.\n\nThe default way to handle missing values in R is to ignore them. This is just a\ndefault, not necessarily the best or even an appropriate way to deal with them.\nYou can remove missing values from a data set by indexing:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncl_no_sqft_na = cl[!is.na(cl$sqft), ]\n\nhead(cl_no_sqft_na)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                                                                                                       title\n1   $1,125 / 1br - 550ft2 - 1Bedroom Prime Location -2520 S Limited Access/Gated $1125 Avail Now (2520 S St)\n2 $1,449 / 1br - 680ft2 - 1x1 with washer & dryer in unit! Move in ready! (The Phoenix/Sacramento/Folsom/SF)\n3 $1,449 / 1br - 680ft2 - 1x1 with washer & dryer in unit! Move in ready! (The Phoenix/Sacramento/Folsom/SF)\n4 $1,479 / 1br - 680ft2 - 1x1 with washer & dryer in unit! Move in ready! (The Phoenix/Sacramento/Folsom/SF)\n5 $1,414 / 1br - 680ft2 - 1x1 with washer & dryer in unit! Move in ready! (The Phoenix/Sacramento/Folsom/SF)\n6 $1,441 / 1br - 680ft2 - 1x1 with washer & dryer in unit! Move in ready! (The Phoenix/Sacramento/Folsom/SF)\ntext\node Link to This Post\\n            \\n        \\n* SEE MY OTHER MIDTOWN 1 bedroom apts-text for web site\\n*An upstairs apt @ 2520 S is coming available 3/18/21\\n*I have 4 apts coming avail in midtown\\n*New flooring in lower apt and redone hardwood flooring in upper unit\\n*1 Bedroom  lower unit in 20 unit complex (2-10 unit buildings-courtyard in middle) with manager on site\\n*Gated front and back\\n*9 parking spots in back\\n*Laundry on site with new washers and dryers (coin op)\\n*Owner pays water/sewer/garbage\\n*Wall heat and window air\\n*New paint and new Pergo-type wood flooring \\n*Updated lighting\\n*Nicely maintained building and grounds\\n*$500 deposit\\n*Non-Smoking/vaping Complex\\n*Long time Mgr on Site\\n*No dogs\\n*Pictures of a like unit\\n*Text/call showing Wes  show contact info\\n to get copy of video\\n*You need to make 3X rent, have good rental history and credit score of 600 or greater to qualify-no dogs.\n2    QR Code Link to This Post\\n            \\n        \\n Lease our 1x1 Apartment with Che starting at $1449+    Prices Subject to change daily!  \\n Apartment Features:  \\nPrivate Balconies & Patios \\nLuxury Vinyl Wood Flooring \\nDesigner Interior Paint \\nUpgraded cabinets and countertops \\nModern white doors and trim \\nModern white base boards  \\nEnergy efficient appliances \\nSpacious bathroom \\nTONS of closet and storage space \\nSac State Shuttle-including Sac State Shuttle App! PET FRIENDLY - MEOW! WOOF!   \\n\\nUpgraded Fitness Centers \\nTanning Booth \\nHydro Massage Table \\nResident Business Center \\nResort-Style Pool Furniture \\nSparkling Waterfall Wall \\nFire pit locations \\nBeach Area for lounging \\nOutdoor Recreation Area \\nSand Volleyball Court \\nGrilling Locations   Call today to schedule your tour ... show contact info\\n -or- \\nStop in to visit Mon - Sat 10:00a - 5:00p for more info! :D  \\n\\n\\nCommunity Amenities:  \\nComplete fitness center \\nFour sparkling pools  \\nLighted tennis courts  \\nFull basketball court  \\nWhirlpool Jacuzzi  \\n24 hour Emergency Maintenance  Hornet Shuttle Access to Sacramento State University  \\n Easy Access to Public Transportation (lightrail and bus) \\n Easy Access to the American River Trail   And so much more!  \\n\\n Check us out online @ www.thephoenixsacramento.com TODAY!  \\n  Connect with us:   \\nFacebook = The Phoenix Apartment Living \\nTwitter = @thephoenixlife     Prices and availability are subject to change. Offered prices are starting prices for base rent only. Other charges, conditions, fees, and terms may apply. Equal housing opportunity provider\n3    QR Code Link to This Post\\n            \\n        \\n Lease our 1x1 Apartment with Che starting at $1449+    Prices Subject to change daily!  \\n Apartment Features:  \\nPrivate Balconies & Patios \\nLuxury Vinyl Wood Flooring \\nDesigner Interior Paint \\nUpgraded cabinets and countertops \\nModern white doors and trim \\nModern white base boards  \\nEnergy efficient appliances \\nSpacious bathroom \\nTONS of closet and storage space \\nSac State Shuttle-including Sac State Shuttle App! PET FRIENDLY - MEOW! WOOF!   \\n\\nUpgraded Fitness Centers \\nTanning Booth \\nHydro Massage Table \\nResident Business Center \\nResort-Style Pool Furniture \\nSparkling Waterfall Wall \\nFire pit locations \\nBeach Area for lounging \\nOutdoor Recreation Area \\nSand Volleyball Court \\nGrilling Locations   Call today to schedule your tour ... show contact info\\n -or- \\nStop in to visit Mon - Sat 10:00a - 5:00p for more info! :D  \\n\\n\\nCommunity Amenities:  \\nComplete fitness center \\nFour sparkling pools  \\nLighted tennis courts  \\nFull basketball court  \\nWhirlpool Jacuzzi  \\n24 hour Emergency Maintenance  Hornet Shuttle Access to Sacramento State University  \\n Easy Access to Public Transportation (lightrail and bus) \\n Easy Access to the American River Trail   And so much more!  \\n\\n Check us out online @ www.thephoenixsacramento.com TODAY!  \\n  Connect with us:   \\nFacebook = The Phoenix Apartment Living \\nTwitter = @thephoenixlife     Prices and availability are subject to change. Offered prices are starting prices for base rent only. Other charges, conditions, fees, and terms may apply. Equal housing opportunity provider\n4    QR Code Link to This Post\\n            \\n        \\n Lease our 1x1 Apartment with Che starting at $1479+    Prices Subject to change daily!  \\n Apartment Features:  \\nPrivate Balconies & Patios \\nLuxury Vinyl Wood Flooring \\nDesigner Interior Paint \\nUpgraded cabinets and countertops \\nModern white doors and trim \\nModern white base boards  \\nEnergy efficient appliances \\nSpacious bathroom \\nTONS of closet and storage space \\nSac State Shuttle-including Sac State Shuttle App! PET FRIENDLY - MEOW! WOOF!   \\n\\nUpgraded Fitness Centers \\nTanning Booth \\nHydro Massage Table \\nResident Business Center \\nResort-Style Pool Furniture \\nSparkling Waterfall Wall \\nFire pit locations \\nBeach Area for lounging \\nOutdoor Recreation Area \\nSand Volleyball Court \\nGrilling Locations   Call today to schedule your tour ... show contact info\\n -or- \\nStop in to visit Mon - Sat 10:00a - 5:00p for more info! :D  \\n\\n\\nCommunity Amenities:  \\nComplete fitness center \\nFour sparkling pools  \\nLighted tennis courts  \\nFull basketball court  \\nWhirlpool Jacuzzi  \\n24 hour Emergency Maintenance  Hornet Shuttle Access to Sacramento State University  \\n Easy Access to Public Transportation (lightrail and bus) \\n Easy Access to the American River Trail   And so much more!  \\n\\n Check us out online @ www.thephoenixsacramento.com TODAY!  \\n  Connect with us:   \\nFacebook = The Phoenix Apartment Living \\nTwitter = @thephoenixlife     Prices and availability are subject to change. Offered prices are starting prices for base rent only. Other charges, conditions, fees, and terms may apply. Equal housing opportunity provider\n5 QR Code Link to This Post\\n            \\n        \\n Lease our 1x1 Apartment with Juliet starting at $1414+    Prices Subject to change daily!  \\n Apartment Features:  \\nPrivate Balconies & Patios \\nLuxury Vinyl Wood Flooring \\nDesigner Interior Paint \\nUpgraded cabinets and countertops \\nModern white doors and trim \\nModern white base boards  \\nEnergy efficient appliances \\nSpacious bathroom \\nTONS of closet and storage space \\nSac State Shuttle-including Sac State Shuttle App! PET FRIENDLY - MEOW! WOOF!   \\n\\nUpgraded Fitness Centers \\nTanning Booth \\nHydro Massage Table \\nResident Business Center \\nResort-Style Pool Furniture \\nSparkling Waterfall Wall \\nFire pit locations \\nBeach Area for lounging \\nOutdoor Recreation Area \\nSand Volleyball Court \\nGrilling Locations   Call today to schedule your tour ... show contact info\\n -or- \\nStop in to visit Mon - Sat 10:00a - 5:00p for more info! :D  \\n\\n\\nCommunity Amenities:  \\nComplete fitness center \\nFour sparkling pools  \\nLighted tennis courts  \\nFull basketball court  \\nWhirlpool Jacuzzi  \\n24 hour Emergency Maintenance  Hornet Shuttle Access to Sacramento State University  \\n Easy Access to Public Transportation (lightrail and bus) \\n Easy Access to the American River Trail   And so much more!  \\n\\n Check us out online @ www.thephoenixsacramento.com TODAY!  \\n  Connect with us:   \\nFacebook = The Phoenix Apartment Living \\nTwitter = @thephoenixlife     Prices and availability are subject to change. Offered prices are starting prices for base rent only. Other charges, conditions, fees, and terms may apply. Equal housing opportunity provider\n6    QR Code Link to This Post\\n            \\n        \\n Lease our 1x1 Apartment with Che starting at $1441+    Prices Subject to change daily!  \\n Apartment Features:  \\nPrivate Balconies & Patios \\nLuxury Vinyl Wood Flooring \\nDesigner Interior Paint \\nUpgraded cabinets and countertops \\nModern white doors and trim \\nModern white base boards  \\nEnergy efficient appliances \\nSpacious bathroom \\nTONS of closet and storage space \\nSac State Shuttle-including Sac State Shuttle App! PET FRIENDLY - MEOW! WOOF!   \\n\\nUpgraded Fitness Centers \\nTanning Booth \\nHydro Massage Table \\nResident Business Center \\nResort-Style Pool Furniture \\nSparkling Waterfall Wall \\nFire pit locations \\nBeach Area for lounging \\nOutdoor Recreation Area \\nSand Volleyball Court \\nGrilling Locations   Call today to schedule your tour ... show contact info\\n -or- \\nStop in to visit Mon - Sat 10:00a - 5:00p for more info! :D  \\n\\n\\nCommunity Amenities:  \\nComplete fitness center \\nFour sparkling pools  \\nLighted tennis courts  \\nFull basketball court  \\nWhirlpool Jacuzzi  \\n24 hour Emergency Maintenance  Hornet Shuttle Access to Sacramento State University  \\n Easy Access to Public Transportation (lightrail and bus) \\n Easy Access to the American River Trail   And so much more!  \\n\\n Check us out online @ www.thephoenixsacramento.com TODAY!  \\n  Connect with us:   \\nFacebook = The Phoenix Apartment Living \\nTwitter = @thephoenixlife     Prices and availability are subject to change. Offered prices are starting prices for base rent only. Other charges, conditions, fees, and terms may apply. Equal housing opportunity provider\n  latitude longitude                             city         date_posted\n1  38.5728 -121.4675                        2520 S St 2021-02-04 15:03:12\n2  38.5511 -121.4068 The Phoenix/Sacramento/Folsom/SF 2021-03-02 12:41:17\n3  38.5511 -121.4068 The Phoenix/Sacramento/Folsom/SF 2021-03-02 13:26:17\n4  38.5511 -121.4068 The Phoenix/Sacramento/Folsom/SF 2021-03-03 10:02:05\n5  38.5511 -121.4068 The Phoenix/Sacramento/Folsom/SF 2021-03-04 08:47:21\n6  38.5511 -121.4068 The Phoenix/Sacramento/Folsom/SF 2021-03-04 10:20:09\n         date_updated price deleted sqft bedrooms bathrooms pets laundry\n1 2021-03-03 08:41:39  1125   FALSE  550        1         1 <NA>  shared\n2                <NA>  1449   FALSE  680        1         1 both in-unit\n3                <NA>  1449   FALSE  680        1         1 both in-unit\n4                <NA>  1479   FALSE  680        1         1 both in-unit\n5                <NA>  1414   FALSE  680        1         1 both in-unit\n6                <NA>  1441   FALSE  680        1         1 both in-unit\n     parking craigslist  shp_place   shp_city shp_state shp_county\n1 off-street sacramento Sacramento Sacramento        CA Sacramento\n2    covered sacramento Sacramento Sacramento        CA Sacramento\n3    covered sacramento Sacramento Sacramento        CA Sacramento\n4    covered sacramento Sacramento Sacramento        CA Sacramento\n5    covered sacramento Sacramento Sacramento        CA Sacramento\n6    covered sacramento Sacramento Sacramento        CA Sacramento\n```\n\n\n:::\n:::\n\n\n\n\nThe `na.omit` function is less precise than indexing, because it removes rows\nthat have a missing value in _any_ column. This means lots of information gets\nlost.\n\nAnother way to handle missing values is to **impute**, or fill in, the values\nwith estimates based on other data in the data set. We won't get into the\ndetails of how to impute missing values here, since it is a fairly deep\nsubject. Generally it is safe to impute MAR values, but not MNAR values.\n\n\n\n### Outliers\n\nAn **outlier** is an anomalous or extreme value in a data set. We can picture\nthis as a value that's far away from most of the other values. Sometimes\noutliers are a natural part of the data set. In other situations, outliers can\nindicate errors in how the data were measured, recorded, or cleaned.\n\nThere's no specific definition for \"extreme\" or \"far away\". A good starting\npoint for detecting outliers is to make a plot that shows how the values are\ndistributed. Box plots and density plots work especially well for this (you'll\nlearn about how to make plots in a later lesson):\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"ggplot2\")\n\nggplot(cl, aes(x = sqft)) + geom_boxplot()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 347 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](07_data-forensics_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n\n\nStatisticians tend to use the rule of thumb that any value more than 3 standard\ndeviations away from the mean is an outlier. You can use the `scale` function\nto compute how many standard deviations the elements in a column are from their\nmean:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nz = scale(cl$sqft)\nhead(z)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n           [,1]\n[1,] -0.1910838\n[2,] -0.1161393\n[3,] -0.1161393\n[4,] -0.1161393\n[5,] -0.1161393\n[6,] -0.1161393\n```\n\n\n:::\n\n```{.r .cell-code}\nwhich(z <= -3 | 3 <= z)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1261 2461\n```\n\n\n:::\n:::\n\n\n\n\nBe careful to think about what your specific data set measures, as this\ndefinition isn't appropriate in every situation.\n\nHow can you handle outliers? First, try inspecting other features from the row\nto determine whether the outlier is a valid measurement or an error. When an\noutlier is valid, keep it.\n\nIf the outlier interferes with a plot you want to make, you can adjust the x\nand y limits on plots as needed to \"ignore\" the outlier. Make sure to mention\nthis in the plot's title or caption.\n\nWhen an outlier is not valid, first try to correct it. For example:\n\n* Correct with a different covariate from the _same observation_.\n* Estimate with a mean or median of similar observations. This is another\n  example of imputing values.\n\nFor example, in the Craigslist data, we can use the `text` column to try to\ncorrect outliers:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmessage(cl$text[1261])\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nQR Code Link to This Post\n            \n        \nVillages of the Galleria\n701 Gibson Drive, Roseville, CA, 95678\nWant more information? Follow this link:\nhttp://rcmi.aptdetails.com/49u13n\nCall Now:  show contact info\n\nRoseville's Premier Luxury Condominium Rentals\nThis is a 1 Bedroom, 1 Bath, approximately 819 Sq. Ft. \nSignature Collection\nThis collection of fully renovated homes is limited to a select few. These unique homes are renting quickly. \nThe beautifully remodeled floor plan offers an entertainment style kitchen, gracious living area, formal dining room with access to your outdoor balcony, designer two tone paint with crown molding, spacious bathroom with relaxing oval bath tub, linen closet and large vanity. The bedroom offers a sliding glass door giving you additional access to the private balcony over looking the picturesque courtyard. \nBrand New Featured Interiors:\nEntertainment Style Kitchen\n•\tBeautiful warm espresso custom built cabinets with brush nickel hardware\n•\tOpulent Granite Countertops with backsplash\n•\tSatin finish under mount sink with disposal and upgraded Moen faucet and fixtures\n•\tStainless steel appliances, spacious built in microwave, multi-cycle dishwasher and self-cleaning oven\n•\tPlant/décor cabinet ledge \n•\tSpacious pantry and personalized custom shelving in all cabinets\n•\tAttractive bright recessed lighting\n•\tPrivate in home personal laundry room with full size washer & dryer\nLiving and Dining\n•\tHand laid tile resembling hard wood flooring \n•\tDesigner two-tone paint with white accent crown molding and baseboards\n•\tUpgraded wooden style blinds\n•\tDual pane windows featuring custom framed molding\n•\tSpacious coat closet\nBath\n•\tOval Roman soaking tub with surround Opulent granite walls \n•\tWarm espresso custom built cabinets with brush nickel hardware\n•\tSpacious linen closet and personal cabinet storage\n•\tHand selected Opulent Granite countertops\n•\tUnique hand crafted above counter sink\n•\tContemporary waterfall faucet\n•\tCustom wood-look framed mirror\n•\tWhite glass contemporary light fixture with brush nickel base\n•\tUpgraded brush nickel accents (towel bars and holders)\n•\tHand laid tile resembling hard wood flooring \nBedroom and Closet\n•\tRich plush carpeting\n•\tSpacious walk in closets with personalized built in custom organizers and compartments\nOther Features and Amenities \n•\tBrilliant bright recessed lighting\n•\tCentral heat and air\n•\tPrivate balcony or terrace\n•\tPre-wired for high-speed internet, multi-line phone and cable\n•\tBrushed nickel hardware accents (door knobs, latches, deadbolts, locks, door knocker and light fixtures)\n•\tCovered parking\n•\tAdditional patio storage\nSelect Homes Offer\n•\tPrivate detached garage\n•\tAdditional linen or storage space\n•\tCozy Gas Fireplace with carved stone-look mantel and molding\nStyle, sophistication, beautiful landscaping and stunning architecture accent the Villages of the \nGalleria apartment homes, located in dynamic Roseville, California. Villages of the Galleria is just minutes from the Galleria Mall and Fountains at Roseville and offers easy freeway access to downtown, Sacramento International Airport, Arco Arena and major employers such as NEC, Oracle and HP. Select from a variety of one, two or three bedroom floor plans. All apartment homes offer gracious living areas with designer two-tone paint, crown molding, large walk-in closets and in home full size washer and dryer. Enjoy the many fine conveniences offered, such as an expansive fitness center, executive business center and refreshing pool. Villages of the Galleria is the perfect place to call home. \nFeatures\n- Contemporary Recessed Lighting \n- Built-In Linen Closet in Bathroom * \n- Entertainment Style Kitchens \n- Private Balconies and Patios \n- Crown Molding Accents \n- Six-Panel Interior Doors \n- Custom Maple-Front Cabinetry \n- Nine-Foot Ceilings \n- Microwave \n- Pre-Wired for High Speed Internet \n- Private Garages * \n- Full Size Washer/Dryer \n- Pantry * \n- Oval Roman Soaking Tub * \n- Cozy Gas Fireplace with Mantel * \n- Covered Parking * \n- Spacious Walk-In Closet(s) * \n- Energy-Saving Multi-Cycle Dishwasher \nCommunity Amenities\n- Community Garden \n- Executive Business Center \n- Sand Volleyball \n- Close to Shopping \n- Beautiful Landscaped Court Yards \n- Playground \n- Fitness Center \n- Clubhouse \n- Open Air Cabanas \n- Easy Access to Freeways \n- Pool and Spa \n- Gated Community \n- Professional Onsite Management w/ 24-Hour Emergency Maintenance \n- Picnic Area with Barbecue \nOffice Hours\nMonday - Friday 9:00 AM - 6:00 PM\nSaturday 10:00 AM - 5:00 PM\nSunday 12:00 PM - 5:00 PM \nPet Policy\nMaximum of 2 pets cats or dogs. No weight limit. Additional $25 rent per month and additional $500 deposit per pet. Inquire about our breed restrictions. \nEqual Housing Opportunity \nVJWLzl1wXG\n```\n\n\n:::\n:::\n\n\n\n\nBased on the text, this apartment is 819 square feet, not 8190 square feet. So\nwe can reassign the value:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncl$sqft[1261] = 819\n```\n:::\n\n\n\n\nIf other features don't help with correction, try getting information from\nexternal sources. If you can't correct the outlier but know it's invalid,\nreplace it with a missing value `NA`.\n\n\n\n## Apply Functions {#sec-apply-functions}\n\n@sec-vectorization introduced vectorization, a convenient and efficient way to\ncompute multiple results. That section also mentioned that some of R's\nfunctions---the ones that summarize or aggregate data---are not vectorized.\n\nThe `class` function is an example of a function that's not vectorized. If we\ncall the `class` function on the Craigslist data set, we get just one result\nfor the data set as a whole:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(cl)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"data.frame\"\n```\n\n\n:::\n:::\n\n\n\n\nWhat if we want to get the class of each column? We can get the class for a\nsingle column by selecting the column with `$`, the dollar sign operator:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(cl$pets)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"factor\"\n```\n\n\n:::\n:::\n\n\n\n\nBut what if we want the classes for all the columns? We could write a call to\n`class` for each column, but that would be tedious. When you're working with a\nprogramming language, you should try to avoid tedium; there's usually a better,\nmore automated way.\n\n@sec-lists pointed out that data frames are technically lists, where each\ncolumn is one element. With that in mind, what we need here is a line of code\nthat calls `class` on each element of the data frame. The idea is similar to\nvectorization, but since we have a list and a non-vectorized function, we have\nto do a bit more than just call `class(cl)`.\n\nThe `lapply` function calls, or _applies_, a function on each element of a list\nor vector. The syntax is:\n\n```\nlapply(X, FUN, ...)\n```\n\nThe function `FUN` is called once for each element of `X`, with the element as\nthe first argument. The `...` is for additional arguments to `FUN`, which are\nheld constant across all the elements.\n\nLet's try this out with the Craigslist data and the `class` function:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlapply(cl, class)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$title\n[1] \"character\"\n\n$text\n[1] \"character\"\n\n$latitude\n[1] \"numeric\"\n\n$longitude\n[1] \"numeric\"\n\n$city\n[1] \"character\"\n\n$date_posted\n[1] \"character\"\n\n$date_updated\n[1] \"POSIXct\" \"POSIXt\" \n\n$price\n[1] \"integer\"\n\n$deleted\n[1] \"logical\"\n\n$sqft\n[1] \"numeric\"\n\n$bedrooms\n[1] \"integer\"\n\n$bathrooms\n[1] \"numeric\"\n\n$pets\n[1] \"factor\"\n\n$laundry\n[1] \"factor\"\n\n$parking\n[1] \"factor\"\n\n$craigslist\n[1] \"character\"\n\n$shp_place\n[1] \"character\"\n\n$shp_city\n[1] \"character\"\n\n$shp_state\n[1] \"character\"\n\n$shp_county\n[1] \"character\"\n```\n\n\n:::\n:::\n\n\n\n\nThe result is similar to if the `class` function was vectorized. In fact, if we\nuse a vector and a vectorized function with `lapply`, the result is nearly\nidentical to the result from vectorization:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx = c(1, 2, pi)\n\nsqrt(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1.000000 1.414214 1.772454\n```\n\n\n:::\n\n```{.r .cell-code}\nlapply(x, sqrt)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n[1] 1\n\n[[2]]\n[1] 1.414214\n\n[[3]]\n[1] 1.772454\n```\n\n\n:::\n:::\n\n\n\n\nThe only difference is that the result from `lapply` is a list. In fact, the\n`lapply` function always returns a list with one element for each element of\nthe input data. The \"l\" in `lapply` stands for \"list\".\n\nThe `lapply` function is one member of a family of functions called **apply\nfunctions**. All of the apply functions provide ways to apply a function\nrepeatedly to different parts of a data structure. We'll meet a few more apply\nfunctions soon.\n\nWhen you have a choice between using vectorization or an apply function, you\nshould always choose vectorization. Vectorization is clearer---compare the two\nlines of code above---and it's also significantly more efficient. In fact,\nvectorization is the most efficient way to call a function repeatedly in R.\n\nAs we saw with the `class` function, there are some situations where\nvectorization is not possible. That's when you should think about using an\napply function.\n\n\n### The `sapply` Function\n\nThe related `sapply` function calls a function on each element of a list or\nvector, and simplifies the result. That last part is the crucial difference\ncompared to `lapply`. When results from the calls all have the same type and\nlength, `sapply` returns a vector or matrix instead of a list. When the results\nhave different types or lengths, the result is the same as for `lapply`. The\n\"s\" in `sapply` stands for \"simplify\".\n\nFor instance, if we use `sapply` to find the classes of the columns in the\nCraigslist data, we get a character vector:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsapply(cl, class)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$title\n[1] \"character\"\n\n$text\n[1] \"character\"\n\n$latitude\n[1] \"numeric\"\n\n$longitude\n[1] \"numeric\"\n\n$city\n[1] \"character\"\n\n$date_posted\n[1] \"character\"\n\n$date_updated\n[1] \"POSIXct\" \"POSIXt\" \n\n$price\n[1] \"integer\"\n\n$deleted\n[1] \"logical\"\n\n$sqft\n[1] \"numeric\"\n\n$bedrooms\n[1] \"integer\"\n\n$bathrooms\n[1] \"numeric\"\n\n$pets\n[1] \"factor\"\n\n$laundry\n[1] \"factor\"\n\n$parking\n[1] \"factor\"\n\n$craigslist\n[1] \"character\"\n\n$shp_place\n[1] \"character\"\n\n$shp_city\n[1] \"character\"\n\n$shp_state\n[1] \"character\"\n\n$shp_county\n[1] \"character\"\n```\n\n\n:::\n:::\n\n\n\n\nLikewise, if we use `sapply` to compute the `sqrt` values, we get a numeric\nvector, the same as from vectorization:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsapply(x, sqrt)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1.000000 1.414214 1.772454\n```\n\n\n:::\n:::\n\n\n\n\nIn spite of that, vectorization is still more efficient than `sapply`, so use\nvectorization instead when possible.\n\nApply functions are incredibly useful for summarizing data. For example,\nsuppose we want to compute the medians for all of the columns in the Craigslist\ndata set that are numeric.\n\nFirst, we need to identify the columns. One way to do this is with the\n`is.numeric` function. Despite the name, this function actually tests whether\nits argument is a real number, not whether it its argument is a numeric vector.\nIn other words, it also returns true for integer values. We can use `sapply` to\napply this function to all of the columns in the Craigslist data set:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nis_number = sapply(cl, is.numeric)\nis_number\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       title         text     latitude    longitude         city  date_posted \n       FALSE        FALSE         TRUE         TRUE        FALSE        FALSE \ndate_updated        price      deleted         sqft     bedrooms    bathrooms \n       FALSE         TRUE        FALSE         TRUE         TRUE         TRUE \n        pets      laundry      parking   craigslist    shp_place     shp_city \n       FALSE        FALSE        FALSE        FALSE        FALSE        FALSE \n   shp_state   shp_county \n       FALSE        FALSE \n```\n\n\n:::\n:::\n\n\n\n\nIn general, it's a good habit to use R to do things rather than do them\nmanually. You'll get more practice programming, and your code will be more\nflexible if you want to adapt it to other data sets.\n\nNow that we know which columns are numeric, we can use the `median` function to\ncompute medians. We only want to compute medians for those columns, so we need\nto subset the data:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsapply(cl[, is_number], median, na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n latitude longitude     price      sqft  bedrooms bathrooms \n  38.5878 -121.4410 1730.0000  801.0000    2.0000    1.0000 \n```\n\n\n:::\n:::\n\n\n\n\n\n\n### The Split-Apply Pattern\n\nIn a data set with categorical features, it's often useful to compute something\nfor each category. The `lapply` and `sapply` functions can compute something\nfor each element of a data structure, but categories are not necessarily\nelements.\n\nFor example, the Craigslist data set has four different categories in the\n`laundry` column. If we want all of the rows in one category, one way to get\nthem is by indexing:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshared = cl[cl$laundry == \"shared\", ]\nhead(shared)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                                                                                                            title\n1        $1,125 / 1br - 550ft2 - 1Bedroom Prime Location -2520 S Limited Access/Gated $1125 Avail Now (2520 S St)\n7  $1,615 / 2br - 816ft2 - 2x1 with w/d in unit..  available NOW! APPLY TODAY! (The Phoenix/Sacramento/Folsom/SF)\n8  $1,660 / 2br - 816ft2 - 2x1 with w/d in unit..  available NOW! APPLY TODAY! (The Phoenix/Sacramento/Folsom/SF)\n9  $1,877 / 2br - 916ft2 - 2x2 with w/d in unit..  available NOW! APPLY TODAY! (The Phoenix/Sacramento/Folsom/SF)\n10 $1,611 / 2br - 916ft2 - 2x2 with w/d in unit..  available NOW! APPLY TODAY! (The Phoenix/Sacramento/Folsom/SF)\n11 $1,736 / 2br - 916ft2 - 2x2 with w/d in unit..  available NOW! APPLY TODAY! (The Phoenix/Sacramento/Folsom/SF)\ntext\node Link to This Post\\n            \\n        \\n* SEE MY OTHER MIDTOWN 1 bedroom apts-text for web site\\n*An upstairs apt @ 2520 S is coming available 3/18/21\\n*I have 4 apts coming avail in midtown\\n*New flooring in lower apt and redone hardwood flooring in upper unit\\n*1 Bedroom  lower unit in 20 unit complex (2-10 unit buildings-courtyard in middle) with manager on site\\n*Gated front and back\\n*9 parking spots in back\\n*Laundry on site with new washers and dryers (coin op)\\n*Owner pays water/sewer/garbage\\n*Wall heat and window air\\n*New paint and new Pergo-type wood flooring \\n*Updated lighting\\n*Nicely maintained building and grounds\\n*$500 deposit\\n*Non-Smoking/vaping Complex\\n*Long time Mgr on Site\\n*No dogs\\n*Pictures of a like unit\\n*Text/call showing Wes  show contact info\\n to get copy of video\\n*You need to make 3X rent, have good rental history and credit score of 600 or greater to qualify-no dogs.\n7  QR Code Link to This Post\\n            \\n        \\n Lease our 2x1 Apartment with Juliet starting at $1615+    Prices Subject to change daily!  \\n Apartment Features:  \\nPrivate Balconies & Patios \\nLuxury Vinyl Wood Flooring \\nDesigner Interior Paint \\nUpgraded cabinets and countertops \\nModern white doors and trim \\nModern white base boards  \\nEnergy efficient appliances \\nSpacious bathroom \\nTONS of closet and storage space \\nSac State Shuttle-including Sac State Shuttle App! PET FRIENDLY - MEOW! WOOF!   \\n\\nUpgraded Fitness Centers \\nTanning Booth \\nHydro Massage Table \\nResident Business Center \\nResort-Style Pool Furniture \\nSparkling Waterfall Wall \\nFire pit locations \\nBeach Area for lounging \\nOutdoor Recreation Area \\nSand Volleyball Court \\nGrilling Locations   Call today to schedule your tour ... show contact info\\n -or- \\nStop in to visit Mon - Sat 10:00a - 5:00p for more info! :D  \\n\\n\\nCommunity Amenities:  \\nComplete fitness center \\nFour sparkling pools  \\nLighted tennis courts  \\nFull basketball court  \\nWhirlpool Jacuzzi  \\n24 hour Emergency Maintenance  Hornet Shuttle Access to Sacramento State University  \\n Easy Access to Public Transportation (lightrail and bus) \\n Easy Access to the American River Trail   And so much more!  \\n\\n Check us out online @ www.thephoenixsacramento.com TODAY!  \\n  Connect with us:   \\nFacebook = The Phoenix Apartment Living \\nTwitter = @thephoenixlife     Prices and availability are subject to change. Offered prices are starting prices for base rent only. Other charges, conditions, fees, and terms may apply. Equal housing opportunity provider\n8  QR Code Link to This Post\\n            \\n        \\n Lease our 2x1 Apartment with Juliet starting at $1660+    Prices Subject to change daily!  \\n Apartment Features:  \\nPrivate Balconies & Patios \\nLuxury Vinyl Wood Flooring \\nDesigner Interior Paint \\nUpgraded cabinets and countertops \\nModern white doors and trim \\nModern white base boards  \\nEnergy efficient appliances \\nSpacious bathroom \\nTONS of closet and storage space \\nSac State Shuttle-including Sac State Shuttle App! PET FRIENDLY - MEOW! WOOF!   \\n\\nUpgraded Fitness Centers \\nTanning Booth \\nHydro Massage Table \\nResident Business Center \\nResort-Style Pool Furniture \\nSparkling Waterfall Wall \\nFire pit locations \\nBeach Area for lounging \\nOutdoor Recreation Area \\nSand Volleyball Court \\nGrilling Locations   Call today to schedule your tour ... show contact info\\n -or- \\nStop in to visit Mon - Sat 10:00a - 5:00p for more info! :D  \\n\\n\\nCommunity Amenities:  \\nComplete fitness center \\nFour sparkling pools  \\nLighted tennis courts  \\nFull basketball court  \\nWhirlpool Jacuzzi  \\n24 hour Emergency Maintenance  Hornet Shuttle Access to Sacramento State University  \\n Easy Access to Public Transportation (lightrail and bus) \\n Easy Access to the American River Trail   And so much more!  \\n\\n Check us out online @ www.thephoenixsacramento.com TODAY!  \\n  Connect with us:   \\nFacebook = The Phoenix Apartment Living \\nTwitter = @thephoenixlife     Prices and availability are subject to change. Offered prices are starting prices for base rent only. Other charges, conditions, fees, and terms may apply. Equal housing opportunity provider\n9  QR Code Link to This Post\\n            \\n        \\n Lease our 2x2 Apartment with Juliet starting at $1877+    Prices Subject to change daily!  \\n Apartment Features:  \\nPrivate Balconies & Patios \\nLuxury Vinyl Wood Flooring \\nDesigner Interior Paint \\nUpgraded cabinets and countertops \\nModern white doors and trim \\nModern white base boards  \\nEnergy efficient appliances \\nSpacious bathroom \\nTONS of closet and storage space \\nSac State Shuttle-including Sac State Shuttle App! PET FRIENDLY - MEOW! WOOF!   \\n\\nUpgraded Fitness Centers \\nTanning Booth \\nHydro Massage Table \\nResident Business Center \\nResort-Style Pool Furniture \\nSparkling Waterfall Wall \\nFire pit locations \\nBeach Area for lounging \\nOutdoor Recreation Area \\nSand Volleyball Court \\nGrilling Locations   Call today to schedule your tour ... show contact info\\n -or- \\nStop in to visit Mon - Sat 10:00a - 5:00p for more info! :D  \\n\\n\\nCommunity Amenities:  \\nComplete fitness center \\nFour sparkling pools  \\nLighted tennis courts  \\nFull basketball court  \\nWhirlpool Jacuzzi  \\n24 hour Emergency Maintenance  Hornet Shuttle Access to Sacramento State University  \\n Easy Access to Public Transportation (lightrail and bus) \\n Easy Access to the American River Trail   And so much more!  \\n\\n Check us out online @ www.thephoenixsacramento.com TODAY!  \\n  Connect with us:   \\nFacebook = The Phoenix Apartment Living \\nTwitter = @thephoenixlife     Prices and availability are subject to change. Offered prices are starting prices for base rent only. Other charges, conditions, fees, and terms may apply. Equal housing opportunity provider\n10    QR Code Link to This Post\\n            \\n        \\n Lease our 2x2 Apartment with Che starting at $1611+    Prices Subject to change daily!  \\n Apartment Features:  \\nPrivate Balconies & Patios \\nLuxury Vinyl Wood Flooring \\nDesigner Interior Paint \\nUpgraded cabinets and countertops \\nModern white doors and trim \\nModern white base boards  \\nEnergy efficient appliances \\nSpacious bathroom \\nTONS of closet and storage space \\nSac State Shuttle-including Sac State Shuttle App! PET FRIENDLY - MEOW! WOOF!   \\n\\nUpgraded Fitness Centers \\nTanning Booth \\nHydro Massage Table \\nResident Business Center \\nResort-Style Pool Furniture \\nSparkling Waterfall Wall \\nFire pit locations \\nBeach Area for lounging \\nOutdoor Recreation Area \\nSand Volleyball Court \\nGrilling Locations   Call today to schedule your tour ... show contact info\\n -or- \\nStop in to visit Mon - Sat 10:00a - 5:00p for more info! :D  \\n\\n\\nCommunity Amenities:  \\nComplete fitness center \\nFour sparkling pools  \\nLighted tennis courts  \\nFull basketball court  \\nWhirlpool Jacuzzi  \\n24 hour Emergency Maintenance  Hornet Shuttle Access to Sacramento State University  \\n Easy Access to Public Transportation (lightrail and bus) \\n Easy Access to the American River Trail   And so much more!  \\n\\n Check us out online @ www.thephoenixsacramento.com TODAY!  \\n  Connect with us:   \\nFacebook = The Phoenix Apartment Living \\nTwitter = @thephoenixlife     Prices and availability are subject to change. Offered prices are starting prices for base rent only. Other charges, conditions, fees, and terms may apply. Equal housing opportunity provider\n11    QR Code Link to This Post\\n            \\n        \\n Lease our 2x2 Apartment with Che starting at $1736+    Prices Subject to change daily!  \\n Apartment Features:  \\nPrivate Balconies & Patios \\nLuxury Vinyl Wood Flooring \\nDesigner Interior Paint \\nUpgraded cabinets and countertops \\nModern white doors and trim \\nModern white base boards  \\nEnergy efficient appliances \\nSpacious bathroom \\nTONS of closet and storage space \\nSac State Shuttle-including Sac State Shuttle App! PET FRIENDLY - MEOW! WOOF!   \\n\\nUpgraded Fitness Centers \\nTanning Booth \\nHydro Massage Table \\nResident Business Center \\nResort-Style Pool Furniture \\nSparkling Waterfall Wall \\nFire pit locations \\nBeach Area for lounging \\nOutdoor Recreation Area \\nSand Volleyball Court \\nGrilling Locations   Call today to schedule your tour ... show contact info\\n -or- \\nStop in to visit Mon - Sat 10:00a - 5:00p for more info! :D  \\n\\n\\nCommunity Amenities:  \\nComplete fitness center \\nFour sparkling pools  \\nLighted tennis courts  \\nFull basketball court  \\nWhirlpool Jacuzzi  \\n24 hour Emergency Maintenance  Hornet Shuttle Access to Sacramento State University  \\n Easy Access to Public Transportation (lightrail and bus) \\n Easy Access to the American River Trail   And so much more!  \\n\\n Check us out online @ www.thephoenixsacramento.com TODAY!  \\n  Connect with us:   \\nFacebook = The Phoenix Apartment Living \\nTwitter = @thephoenixlife     Prices and availability are subject to change. Offered prices are starting prices for base rent only. Other charges, conditions, fees, and terms may apply. Equal housing opportunity provider\n   latitude longitude                             city         date_posted\n1   38.5728 -121.4675                        2520 S St 2021-02-04 15:03:12\n7   38.5511 -121.4068 The Phoenix/Sacramento/Folsom/SF 2021-03-02 08:36:51\n8   38.5511 -121.4068 The Phoenix/Sacramento/Folsom/SF 2021-03-04 08:57:47\n9   38.5511 -121.4068 The Phoenix/Sacramento/Folsom/SF 2021-03-02 08:36:17\n10  38.5511 -121.4068 The Phoenix/Sacramento/Folsom/SF 2021-03-02 13:16:29\n11  38.5511 -121.4068 The Phoenix/Sacramento/Folsom/SF 2021-03-03 10:02:38\n          date_updated price deleted sqft bedrooms bathrooms pets laundry\n1  2021-03-03 08:41:39  1125   FALSE  550        1         1 <NA>  shared\n7                 <NA>  1615   FALSE  816        2         1 both  shared\n8                 <NA>  1660   FALSE  816        2         1 both  shared\n9                 <NA>  1877   FALSE  916        2         2 both  shared\n10                <NA>  1611   FALSE  916        2         2 both  shared\n11                <NA>  1736   FALSE  916        2         2 both  shared\n      parking craigslist  shp_place   shp_city shp_state shp_county\n1  off-street sacramento Sacramento Sacramento        CA Sacramento\n7     covered sacramento Sacramento Sacramento        CA Sacramento\n8     covered sacramento Sacramento Sacramento        CA Sacramento\n9     covered sacramento Sacramento Sacramento        CA Sacramento\n10    covered sacramento Sacramento Sacramento        CA Sacramento\n11    covered sacramento Sacramento Sacramento        CA Sacramento\n```\n\n\n:::\n:::\n\n\n\n\nTo get all four categories, we'd have to do this four times. If we want to\ncompute something for each category, say the mean of the `price` column, we\nalso have to repeat that computation four times. Here's what it would look like\nfor just the `shared` category:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(shared$price, na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1522.869\n```\n\n\n:::\n:::\n\n\n\n\nIf the categories were elements, we could avoid writing code to index each\ncategory, and just use the `sapply` (or `lapply`) function to apply the `mean`\nfunction to each.\n\nThe `split` function splits a vector or data frame into groups based on a\nvector of categories. The first argument to `split` is the data, and the\nsecond argument is a congruent vector of categories.\n\nWe can use `split` to elegantly compute means of `price` broken down by\n`laundry`. First, we split the data by category. Since we only want to compute\non the `price` column, we only split that column:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nby_laundry = split(cl$price, cl$laundry)\nclass(by_laundry)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"list\"\n```\n\n\n:::\n\n```{.r .cell-code}\nnames(by_laundry)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"hookup\"  \"in-unit\" \"none\"    \"shared\" \n```\n\n\n:::\n:::\n\n\n\n\nThe result from `split` is a list with one element for each category. The\nindividual elements contain pieces of the original `price` column:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(by_laundry$hookup)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1250 3300 3328 3300 3280 3328\n```\n\n\n:::\n:::\n\n\n\n\nSince the categories are elements in the split data, now we can use `sapply`\nthe same way we did in previous examples:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsapply(by_laundry, mean, na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   hookup   in-unit      none    shared \n2059.6111 1880.8592  982.2381 1522.8691 \n```\n\n\n:::\n:::\n\n\n\n\nThis two-step process is a data science idiom called the **split-apply\npattern**. First you use `split` to convert categories into list elements, then\nyou use an apply function to compute something on each category. Any time you\nwant to compute results by category, you should think of this pattern.\n\nThe split-apply pattern is so useful that R provides the `tapply` function as a\nshortcut. The `tapply` function is equivalent to calling `split` and then\n`sapply`. Like `split`, the first argument is the data and the second argument\nis a congruent vector of categories. The third argument is a function to apply,\nlike the function argument in `sapply`.\n\nWe can use `tapply` to compute the `price` means by `laundry` type for the\nCraigslist data:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntapply(cl$price, cl$laundry, mean, na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   hookup   in-unit      none    shared \n2059.6111 1880.8592  982.2381 1522.8691 \n```\n\n\n:::\n:::\n\n\n\n\nNotice that the result is identical to the one we computed before.\n\nThe \"t\" in `tapply` stands for \"table\", because the `tapply` function is a\ngeneralization of the `table` function. If you use `length` as the third\nargument to `tapply`, you get the same results as you would from using the\n`table` function on the category vector.\n\nThe `aggregate` function is closely related to `tapply`. It computes the same\nresults, but organizes them into a data frame with one row for each category.\nIn some cases, this format is more convenient. The arguments are the same,\nexcept that the second argument must be a list or data frame rather than a\nvector.\n\nAs an example, here's the result of using `aggregate` to compute the\n`price` means:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\naggregate(cl$price, list(cl$laundry), mean, na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Group.1         x\n1  hookup 2059.6111\n2 in-unit 1880.8592\n3    none  982.2381\n4  shared 1522.8691\n```\n\n\n:::\n:::\n\n\n\n\nThe `lapply`, `sapply`, and `tapply` functions are the three most important\nfunctions in the family of apply functions, but there are many more. You can\nlearn more about all of R's apply functions by reading [this Stack Overflow\npost][apply].\n\n[apply]: https://stackoverflow.com/a/7141669\n\n",
    "supporting": [
      "07_data-forensics_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}